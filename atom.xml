<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[飘飘白云]]></title>
  <link href="http://luozhaohui.github.io/atom.xml" rel="self"/>
  <link href="http://luozhaohui.github.io/"/>
  <updated>2018-10-10T15:41:08+08:00</updated>
  <id>http://luozhaohui.github.io/</id>
  <author>
    <name><![CDATA[飘飘白云]]></name>
    <email><![CDATA[kesalin@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[幼儿英语启蒙路线图]]></title>
    <link href="http://luozhaohui.github.io/blog/2018/10/10/kids-english-with-phonics/"/>
    <updated>2018-10-10T20:36:40+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2018/10/10/kids-english-with-phonics</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>新浪上海发布了一条<a href="http://sh.sina.com.cn/news/k/2018-10-03/detail-ifxeuwws0541305.shtml">微博</a>：</p>

<blockquote><p>【法语、德语等语种正式列入高中课程 上海部分学校率先试点】根据教育部的新课程方案，今年秋季开学起，中学生除了英语，还可以选择法语、德语、西班牙语等语言作为自己的第一外语，去参加高考。目前在上海，已有光明中学、上外附中等学校进行了先期试点。另据了解，方案推出后，上外和北外都编了法语中学生的教材并将于明年秋季开始试用。</p></blockquote>

<p>估计上海的宝妈宝爸们又要白几根头发了，小孩第一外语尚未学好，第二外语就要开始了。但第二外语计划列入的毕竟是高中的课程，对英语启蒙阶段的小孩来说尚有许多年头可以去学习，而且英语、法语、德语都同属于印欧语系，如果把英语学好了，再去学习法语或德语，也会容易许多。因此，宝妈宝爸们也不必过于焦虑，<code>Rome wasn't built in a day</code>（罗马不是一天建成的），一个阶段做好一个阶段的事情就好。对于学龄前的幼儿来说，最关键的是做好英语启蒙教育。</p>

<!--more-->


<h2>为什么坚持英语启蒙教育这么难呢？</h2>

<p>英语启蒙教育说难不难，说不难又很难。为什么这么说呢，说不难是指教育理念与方法，也许一堂课或一篇文章就能够让家长明白该怎么教；说难是指贵在坚持。</p>

<p>为什么坚持英语启蒙教育这么难呢？个人觉得有三方面的原因：<br/>
 1. 是因为英语启蒙教学的内容与形式要符合这个年龄段小孩的心智水平，这样才能吸引小孩的兴趣。过于复杂的内容，以及死记硬背或责骂高压式的教学方式只会适得其反，让小孩畏惧英语学习，彻底丧失对英语的兴趣，因此非常考验家长的耐心与技巧；</p>

<ol>
<li><p>是因为这个阶段的幼儿认知学习规律要求对所学知识的大量重复，这样重复的教学过程对家长来说是有点枯燥的，对家长的恒心也是一个不小的考验；</p></li>
<li><p>是因为家长尤其是双上班族家庭，工作忙碌了一天，下班回来未必有足够的精力与时间来教小孩学习。</p></li>
</ol>


<h2>自然拼读法</h2>

<p>那么有没有这样一套英语学习启蒙方法，小孩学会之后能够在一定程度上自主学习英语呢？就像教小孩用字典学认字，刚开始需要付出较多努力去指导小孩如何用字典去查生字，一旦小孩学会了，再碰到不会的生字就会自己去查字典，不再需要家长一个字一个字地教了。答案是有的，这套方法就是自然拼读法，英文名字叫：<code>Phonics</code>。</p>

<p>据我的理解，自然拼读法有三大要点：<br/>
 1. <strong>以音为切入点，先音后形再意；</strong><br/>
 2. <strong>以拼读为手段；</strong><br/>
 3. <strong>以阅读理解为目的。</strong></p>

<p>这三个要点层层递进，后面的要点是建立在前面要点的基础上的。</p>

<h3>以音为切入点，先音后形再意</h3>

<p>首先是音与字母的对应，即教单个字母的发音，这里的发音是指音标音，而不是字母音。如：<code>c</code> 发音 <code>/k/</code>，<code>a</code> 发音 <code>/æ/</code>, <code>t</code> 发音 <code>/t/</code>。然后是音与单词的对应，即教字母组合的发音以及拼读规则。如：组合 <code>at</code> 发音 <code>/æt/</code>，单词 <code>ca</code>t 拼读为 <code>c-at</code>，发音为 <code>/kæt/</code>。最后是音和实物情景对应，使得发音与情境关联起来。</p>

<p>可以说自然拼读法是以音为突破点的，这个特点非常像母语的学习过程，也就是情境直接与英语本身关联起来，这样的学习方式就非常的地道，非常的英文思维。避免了成人学习英语过程中常见的中文思维转译为英文的过程，即根据情境理解整理出中文意思再翻译成英文。</p>

<h3>以拼读为手段</h3>

<p>根据各个字母的发音拼读出单词的发音，然后根据单词发音记住单词拼写，根据上下文情境关联猜测和明白单词意思，从而理解句子和段落的意思。音-词-句依次递进。</p>

<h3>以阅读理解为目的</h3>

<p>有了基础的发音与拼读规则启蒙之后，小孩就能够自主阅读一些初级的分级读物或绘本，在阅读的过程中，能够自己去拼读新单词的发音，根据上下文或画面内容推测出新单词的意思，从而理解整个句子或段落的意思。这是自然拼读法的终极目的。</p>

<h3>自然拼读法为什么这么低调？</h3>

<p>既然自然拼读大法如此优秀，为何名不见经传呢？国内的学校教育似乎也较少使用呢？我觉得主要是因为在国内九年义务制教育中英语起步较晚，像我们 80 后是从初中开始才教英语，现在上海的公立学校也要到小学一年级才开始教英语。对于一年级6、7岁左右的小孩来说，他的心智已经成长到较高级的阶段了，中文思维已经非常强势了。此时再使用音与情境关联的教学方法，比如说指着一只猫跟他说这是 <code>cat</code>，以他的心智水平来说就有点的低级，然后再让他重复几次跟着念就更会觉得枯燥无趣。因为在他的心智图谱中猫这个概念已经建立好了，并且和中文字“<code>猫</code>”关联起来了。这时你再让他建立一个从猫这个概念到英语单词“<code>cat</code>”的关联，难度就大了。</p>

<p>很多大公司都喜欢招应届毕业生自己培养，因为白纸一张嘛，没有什么思维定势需要去改变的，容易塑造成为符合企业需要的人才。学英语也是一样，直接建立一个从猫这个概念到英语单词“<code>cat</code>”的关联，与从猫这个概念关联到中文“<code>猫</code>”这个字，再从中文字“<code>猫</code>”建立一个到英语单词“<code>cat</code>”的关联相比，前者非常直接，后者不仅多了一个翻译环节，而且是用不地道的英语在表达中文思维。</p>

<h2>什么时候开始幼儿英语启蒙？</h2>

<p>幼儿的英语启蒙越早越好，在学习母语的黄金时段两到四岁时开始就更好。一是因为这个时段是语言学习的黄金时段，二是因为这个年龄段小孩的心智水平非常适合自然拼读法的情境式教学。</p>

<p>是不是完全没有接触过英语就可以开始自然拼读法教学呢？也不是。前面说了，自然拼读法教学首先是要进行音的教学，这个过程无论用怎样生动活泼的游戏方式来教学，对幼儿来说多少有点枯燥，尤其是对英语没有一点点感觉和熟悉感的话，简直就是鸡同鸭讲。就像我们的母语学习，在小孩开始学习说话之前至少在母语环境中磨了一到两年的耳朵，他虽然还不太会说，但已经听了足够多了，对母语的音素、韵律以及节奏有一定的熟悉感了。前面也说过小孩的学习过程需要大量的重复，这个重复就是在不断地确认与增强这种熟悉感。对于有点熟悉感但又尚未完全掌握的事物，小孩是非常感兴趣的。因此，英语零基础是不太适合开始自然拼读法教学。在开始之前，需要有一个磨耳朵的过程。</p>

<h2>怎样进行幼儿英语启蒙？</h2>

<p>因此，<strong>我觉得最佳的幼儿英语启蒙方法是：一岁到三岁之间多听磨耳朵；三岁开始系统地学习自然拼读，同时全方位立体地大量输入英语。</strong></p>

<h3>如何磨耳朵？</h3>

<p>一岁到三岁这个阶段的幼儿，考虑到视力发育，不宜看太久的视频（每天不应超过十分钟），因此最适合通过听来磨耳朵。父母可以通过儿歌或妈妈语等方式大量地输入英语，让幼儿熟悉英语的音素、韵律以及节奏，从而培养语感。可以这么说怎么给幼儿输入中文儿歌就可以同样给幼儿输入英语儿歌。有条件的父母可以自己哼唱英语儿歌给幼儿听，条件不具备的父母也可以通过手机或平板电脑等给宝宝播放英语儿歌。这个阶段的英语儿歌资源推荐《清华幼儿英语语感启蒙》儿歌系列，外教口音纯正，形象和蔼可亲，并伴有肢体动作游戏或舞蹈，幼儿可以模仿一边唱一边做肢体动作。</p>

<p>我家有两个娃，二宝灿灿在一岁半的时候开始磨耳朵，男孩发育稍微有点晚，现在刚两岁还不太会说话，但是一听到熟悉的英语儿歌，就会闻歌起舞做出相应的动作。而且令我们惊讶的是，“鸡蛋”中文他还不会说，就先学会说英语“<code>egg</code>”了。</p>

<p>以下是灿灿闻歌起舞的视频：</p>

<h2>如何系统地学习自然拼读？</h2>

<p>大部分有心的家长都可以在家自己给幼儿磨耳朵，磨耳朵磨到一定年龄，两到三岁左右，也就是语言敏感期，就应该提升层次，开始系统地进行自然拼读学习。<strong>在进行自然拼读学习的同时，也要增加英语输入的量与形式。没有大量的输入就不可能有输出，因此要全方位立体地输入，绘本、儿歌、动画、互动游戏、情景对话等等都可以搞起来。</strong>这个年龄段的小孩每天可以看半个小时左右的纯英语视频，不宜更多。</p>

<p>这个阶段的英语资源推荐：<br/>
 1. 英语绘本：<code>Biscuit</code>（小饼干狗系列），<code>Oxford Reading Tree</code>（牛津阅读树系列）<br/>
 2. 英语动画：<code>Penelope</code>（蓝色小考拉），<code>Peppa Pig</code>（小猪佩奇）</p>

<p>自然拼读训练可以自己在家进行。在家训练的话可以进行得早一点：两岁就可以开始，不过这对家长的英语水平以及自然拼读法知识就有一定的要求了。</p>

<p>自然拼读训练也可以在培训机构进行，但前提是要弄清楚培训的内容是不是自然拼读。那种只是记单词背句型的培训作用并不大，因为他们只是授之以鱼而非渔。据我了解，市面上大多培训机构都是这种，因为他们可以通过持续不断地“授之以鱼”的方式办各种级别的培训班来挣更多的钱。此外，送幼儿去培训机构培训的话，幼儿年龄也不应该太小，太小的话还听不懂语言指令也没有一定自控能力，因此培训效果不理想纯属浪费钱（家里有矿的主例外），最好是三岁以上才开始培训。</p>

<p>我家大宝嘟嘟从四岁开始，我老婆就在家系统地给她进行自然拼读教学。虽然嘟嘟的自然拼读学习起步稍微有点晚，因为就我们夫妻俩带着两个娃，二宝太小分身无术，但是大半年坚持下来效果非常理想。饼干狗系列以及牛津树系列绘本基本上可以自己拼读着看了。</p>

<p>以下是嘟嘟拼读牛津树绘本的两个视频。<br/>
 1. 嘟嘟拼读《<code>Dad's Birthday</code>》<br/>
 2. 嘟嘟拼读《<code>Mum's New Hat</code>》</p>

<h2>总结</h2>

<p>幼儿英语启蒙的五个要点。<br/>
1. 英语学习是个长期过程，贵在坚持，要有打持久战的心理准备；<br/>
2. 没有大量输入就没有输出，儿歌、绘本、动画、互动游戏、情景对话一个都不要拉下；<br/>
3. 自然拼读情境式学习是最适合这个年龄段的英语学习方式；<br/>
4. 一到三岁多听磨耳朵；<br/>
5. 三岁开始系统地学习自然拼读。</p>

<h2>交流探讨</h2>

<p>我和我老婆维护了一个微信群，群名为“英语启蒙交流群”，欢迎对英语启蒙教育有兴趣的朋友加入共同交流探讨，分享资源。我们也维护了一个名为“飘飘白云”的公众号，会不定期分享我们的英语教育经验以及分享一些学习资源，<strong>欢迎大家扫码或公众号“飘飘白云”查找关注</strong>。</p>

<p><img src="https://i.imgur.com/941O5Ki.png" alt="扫码关注公众号飘飘白云" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2017年阅读统计]]></title>
    <link href="http://luozhaohui.github.io/blog/2018/01/01/reading/"/>
    <updated>2018-01-01T05:42:38+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2018/01/01/reading</id>
    <content type="html"><![CDATA[<h2>2017年阅读统计，本页面由代码自动生成</h2>

<h2>总计阅读 37 本</h2>

<h3>评价统计:</h3>

<p><img src="https://i.imgur.com/fl6tvy7.png" alt="评价统计" /></p>

<blockquote><p>五星图书 15 本，占比 40.5%<br/>
四星图书 13 本，占比 35.1%<br/>
三星图书 8 本，占比 21.6%<br/>
两星图书 1 本，占比 2.7%</p></blockquote>

<!--more-->


<h3>标签统计:</h3>

<p><img src="https://i.imgur.com/auItN3T.png" alt="标签统计" /></p>

<blockquote><p>软件开发 12 本<br/>
历史 7 本<br/>
政治 5 本<br/>
文学 3 本<br/>
教育 3 本<br/>
法学 2 本<br/>
经济 1 本<br/>
设计 1 本<br/>
思维 1 本<br/>
人类学 1 本<br/>
科学 1 本</p></blockquote>

<h3>历史: 7 本</h3>

<h4>No.13 西周史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6397532/">西周史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6397532/">https://book.douban.com/subject/6397532/</a><br/>
出版信息：许倬云 / 生活·读书·新知三联书店 / 2012-3 / 48.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：根据出土的文物、铭文，佐以文献考据西周的历史、政治、社会以及日常生活形态。不可多得的先秦史学著作。天命观、华夏文化认同均始自西周，西周对西北草原部落采取守势，对东夷南夷则采取扩张同化势，并按照姬姜两族的血缘亲属关系分封，形成统一的地缘政治结构。成也分封，败也分封。北方外患侵扰不断，部分封国坐大，王室败落，外患加内乱最终导致西周的灭亡。</p></blockquote>

<h4>No.14 西周的灭亡</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2298352/">西周的灭亡</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2298352/">https://book.douban.com/subject/2298352/</a><br/>
出版信息：李峰 / 徐峰、汤惠生 / 上海古籍出版社 / 2007-10-01 / 38.00<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：作者通过探讨西周国家的衰弱和灭亡这一特定的持续历史和地理过程中，地理条件及其政治性建构之间的复杂关系，综合运用考古发现、铭文和文献记录，同时联系地表形态的特征，分析和说明了西周的政治体系是如何并且为何不能经受住时间的考验，从而最终导致了西周国家的解体和王畿的崩溃。</p></blockquote>

<h4>No.15 俄罗斯史（第八版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25748806/">俄罗斯史（第八版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25748806/">https://book.douban.com/subject/25748806/</a><br/>
出版信息：【美】梁赞诺夫斯基、斯坦伯格 / 杨烨、卿文辉、王毅 / 上海人民出版社 / 2013-10 / 88.00<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：俄罗斯人民是苦难的，又是坚韧的。这部大部头厚今薄古地综述了基辅罗斯、蒙古入侵时的封建割据、莫斯科公国、苏联、俄罗斯联邦的发展历程。鉴于国内历史教育基本上对苏联之前的历史只字不提，阅读此书弥补了这方面的无知。原著良心，综述各方观点，翻译上乘。</p></blockquote>

<h4>No.16 太平天国</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6860955/">太平天国</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6860955/">https://book.douban.com/subject/6860955/</a><br/>
出版信息：史景迁 / 朱庆葆等 / 广西师范大学出版社 / 2011-9-30 / 56.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：去掉了阶级定性的所谓农民革命的光环，剩下的只是一个略显荒诞，新瓶装旧酒的故事。这本书聚焦于洪秀全本人以及他诠释或篡改的教义事实上，罗列资料，较少价值判断，是其长；对于对手的描述，着墨于官军或湘军较少，而洋人反而较多，实则曾国藩对于平定这场类似白莲教运动叛乱功不可没，是其短。</p></blockquote>

<h4>No.17 开放中的变迁</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/5906321/">开放中的变迁</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/5906321/">https://book.douban.com/subject/5906321/</a><br/>
出版信息：金观涛、刘青峰 / 法律出版社 / 2011-1 / 46.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：用一个超稳定框架+意识形态的万能膏药来解释一切，不免有点武断和牵强，尤其是1924年之后的部分。我能说要集体文化来解释传统的一切，用个体文化来预示未来也可以么？总体来说，作者的一些观点与总结还是值得赞赏。</p></blockquote>

<h4>No.18 中国法律与中国社会</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1224279/">中国法律与中国社会</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1224279/">https://book.douban.com/subject/1224279/</a><br/>
出版信息：瞿同祖 / 中华书局 / 2003-09-01 / 28.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：单就学术著作可评五星。透过对纲常名教剖析可以看到赤裸裸的吃人真相。中国过去的法，甚至是至现在的法律现实，都是法表儒里-搞有差别化对待，什么刑不上大夫、党内处分，几千年有啥变化？</p></blockquote>

<h4>No.19 明治维新的国度</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25962185/">明治维新的国度</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25962185/">https://book.douban.com/subject/25962185/</a><br/>
出版信息：宗泽亚 / 北京联合出版公司·后浪出版公司 / 2014-11 / 78.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：广有余而深不足，内容较多前后重述，图多，搞得像游记类图书，贵在客观。对于不了解明治维新那一段变革，可以翻一翻</p></blockquote>

<h3>政治: 5 本</h3>

<h4>No.20 如彗星划过夜空</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1762869/">如彗星划过夜空</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1762869/">https://book.douban.com/subject/1762869/</a><br/>
出版信息：林达 / 生活·读书·新知三联书店 / 2006-3 / 21.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：这本书通过制宪会议以及五角大楼文件案引发的对宪法第一修正案新闻自由原则的考验，概览了宪法诞生的环境、妥协、实践以及不断地完善。美国的幸运在于，他们在没有构建出庞大的政府以前，就已经有一批懂得分权与制衡的政治绅士以及宪法指导。宪法，政府，民众三者是在一个互相妥协的过程中慢慢长大，</p></blockquote>

<h4>No.21 我也有一个梦想</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1014825/">我也有一个梦想</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1014825/">https://book.douban.com/subject/1014825/</a><br/>
出版信息：林达 / 生活·读书·新知三联书店 / 2004-08 / 25.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：通过详细介绍民权法案产生、执行、深入民心的来龙去脉。非常精彩且富有思辨精神了介绍了美国种族融合过程，暂进式的社会与法制变革，体现了一个不断革新的民主社会如何通过一个个具体案件分析、反思、妥协，改进其社会制度。</p></blockquote>

<h4>No.22 历史深处的忧虑</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1027191/">历史深处的忧虑</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1027191/">https://book.douban.com/subject/1027191/</a><br/>
出版信息：林达 / 生活·读书·新知三联书店 / 1997-5 / 19.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：这一本主要介绍权利法案即宪法修正案条文、含义以及案例，重点介绍了辛普森案。行文有点冗长，不够简练，但对了解美国政体，民情基调还是非常有帮助的。</p></blockquote>

<h4>No.23 总统是靠不住的</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1056315/">总统是靠不住的</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1056315/">https://book.douban.com/subject/1056315/</a><br/>
出版信息：林达 / 生活·读书·新知三联书店 / 2004-08 / 21.80<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：用通俗易懂讲故事的形式，把美国政治体制中基于制约与均衡理念的三权分立讲述出来，非常适合入门了解美国政体、法制、选举等方面。尼克松水门事件分析得非常精彩。</p></blockquote>

<h4>No.24 一路走来一路读</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1010888/">一路走来一路读</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1010888/">https://book.douban.com/subject/1010888/</a><br/>
出版信息：林达 / 湖南文艺出版社 / 2004-01 / 31.90<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：书中提到的大部分案例在《近距离看美国》系列中基本都提到过，这一本可算是那个系统的花絮和外传吧。书中介绍了独具一格的美国南方小镇的自治状态。</p></blockquote>

<h3>文学: 3 本</h3>

<h4>No.25 杀死一只知更鸟</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6781808/">杀死一只知更鸟</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6781808/">https://book.douban.com/subject/6781808/</a><br/>
出版信息：[美] 哈珀·李 / 高红梅 / 译林出版社 / 2012-9 / 32.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：最具童心的法学启蒙读本，正义是一种教养，杀死一只知更鸟是一种罪恶！</p></blockquote>

<h4>No.26 荆棘鸟</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1086249/">荆棘鸟</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1086249/">https://book.douban.com/subject/1086249/</a><br/>
出版信息：[澳] 考琳·麦卡洛 / 曾胡 / 译林出版社 / 1998-7 / 28.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：澳大利亚的“《飘》”不如美国的《飘》，相当程度低美化了德罗海达庄园的生活。讲述一家三代女人的爱情，单纯的爱，单纯的迷恋，单纯的伤害。翻译很用心很用心。</p></blockquote>

<h4>No.27 陆犯焉识</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6880158/">陆犯焉识</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6880158/">https://book.douban.com/subject/6880158/</a><br/>
出版信息：严歌苓 / 作家出版社 / 2011-10-1 / 35.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：经历比较曲折吧，经历了民国、留美、上海抗战、重庆抗战、被反右、西北改造、被平反、回上海又被儿女单位化了。主线还是爱情，所以不算是严肃文学。前后两部分主角的心理状态变化过程衔接不太好，顺变的感觉，给出的理由又不够有说服力。</p></blockquote>

<h3>教育: 3 本</h3>

<h4>No.28 让孩子的大脑自由</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10758030/">让孩子的大脑自由</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10758030/">https://book.douban.com/subject/10758030/</a><br/>
出版信息：（美）约翰•梅迪纳 / 王佳艺 / 浙江人民出版社 / 2012-6 / 42.90元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：育儿常识集合。从孕期注意事项到夫妻感情对孩子的影响，从智力的影响因素到孩子应该如何表扬，从培养共情到如何惩罚，涵盖主题较广。研究结果与实践相结合，理论性和操作性都尚可。父母是孩子的榜样，别让孩子生活在原生家庭的阴影中。</p></blockquote>

<h4>No.29 游戏力</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6084402/">游戏力</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6084402/">https://book.douban.com/subject/6084402/</a><br/>
出版信息：Lawrence J. Cohen, Ph.D. / 李岩 / 军事谊文出版社 / 2011-5-1 / 39.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：游戏是探索求知、亲情培养、社交情商、情绪调节多方面的灵丹妙药。洗澡的不听&ndash;玩水的乖乖来，这就是游戏力的魔力。</p></blockquote>

<h4>No.30 把你的英语用起来！</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3748247/">把你的英语用起来！</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3748247/">https://book.douban.com/subject/3748247/</a><br/>
出版信息：伍君仪、刘晓光 / 外文出版社 / 2013-6 / 36.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：路线图+资料汇总。作者主要推崇通过循序渐进地大量阅读与透析原著来提高英语水平。</p></blockquote>

<h3>法学: 2 本</h3>

<h4>No.31 为权利而斗争</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2009914/">为权利而斗争</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2009914/">https://book.douban.com/subject/2009914/</a><br/>
出版信息：鲁道夫·冯·耶林 / 郑永流 / 法律出版社 / 2007-1 / 14.00元<br/>
标签：法学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：如果习惯于容忍不法而无奈放弃，那么当这种奴性的萎缩的麻木的法感情，遇到的不是个人而是有关全民族的权利侵害时，诸如宪法废弃或颠覆、外敌攻击等问题，谁又会相信他会摇身一变感情饱满、精力充沛地投入行动？没有勇敢地保护自己权利习惯的人又怎会迫于冲动心甘情愿地为了全体献出自己的生命和财产？</p></blockquote>

<h4>No.32 美国宪政历程</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1144185/">美国宪政历程</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1144185/">https://book.douban.com/subject/1144185/</a><br/>
出版信息：任东来、陈伟、白雪峰 / 中国法制出版社 / 2014-1 / 35.00元<br/>
标签：法学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：搭配林达的《近距离看美国》系列一起看，有对比、多角度看会更有趣。通俗易懂地通过一个个具体案件讲述美国人民怎样在分权与制衡理念下一步一步完善、更新他们的宪政观念与制度，尤其是在这个过程中最高法院如何一步一步建立和维护宪政的权威，当然也有错判与现实的妥协。民主可以说一种妥协制度。</p></blockquote>

<h3>经济: 1 本</h3>

<h4>No.33 经济为什么会崩溃</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6743298/">经济为什么会崩溃</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6743298/">https://book.douban.com/subject/6743298/</a><br/>
出版信息：〔美〕彼得•D•希夫  安德鲁•J•希夫 / 胡晓姣、吕靖纬 / 中信出版社 / 2011-8 / 39.00元<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：有趣有料，简明简短，正三观，经济学门外汉入门首选！</p></blockquote>

<h3>设计: 1 本</h3>

<h4>No.34 设计心理学</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4606471/">设计心理学</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4606471/">https://book.douban.com/subject/4606471/</a><br/>
出版信息：[美]唐纳德·A·诺曼 / 梅琼 / 中信出版社 / 2010-03 / 30.00元<br/>
标签：设计&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：论可视性与反馈的重要性，非常经典的设计方面的书籍。</p></blockquote>

<h3>思维: 1 本</h3>

<h4>No.35 优秀的绵羊</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26747208/">优秀的绵羊</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26747208/">https://book.douban.com/subject/26747208/</a><br/>
出版信息：[美] 威廉·德雷谢维奇 / 林杰 / 九州出版社 / 2016-4 / CNY 42.00<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：在狭隘的精英教育下只顾成长的一代缺失了意义感、好奇心，这是社会阶层固化，各自只顾各自小圈子的必然现象。</p></blockquote>

<h3>人类学: 1 本</h3>

<h4>No.36 金枝</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2101774/">金枝</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2101774/">https://book.douban.com/subject/2101774/</a><br/>
出版信息：（英）弗雷泽 / 徐育新、汪培基等 / 大众文艺出版社 / 1998-01 / 78.00元<br/>
标签：人类学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：通过海量的民俗或宗教仪式案例探讨巫术、宗教、科学之间的关系与发展历程。巫术无非交感与顺势两种思维方式，加上认为灵魂可以独立于体外保存和活动的概念，衍生出重点驱魔辟邪、永葆生命力等众多巫术或宗教仪式。人类学经典之作，对理解传统社会的一些习俗很有借鉴意义。</p></blockquote>

<h3>科学: 1 本</h3>

<h4>No.37 黑猩猩在召唤</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1951398/">黑猩猩在召唤</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1951398/">https://book.douban.com/subject/1951398/</a><br/>
出版信息：Jane van Lawick-Goodall / 刘后一、张锋 / 科学出版社 / 1980 / 1.05<br/>
标签：科学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：通过科学观察写成的有关黑猩猩的江湖，集科学性、故事性、启发性于一体，佩服作者的专注与热情。培养某个或某些兴趣是最好的成长。</p></blockquote>

<h3>软件开发: 12 本</h3>

<h4>No.1 UNIX环境高级编程</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1788421/">UNIX环境高级编程</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1788421/">https://book.douban.com/subject/1788421/</a><br/>
出版信息：W.Richard Stevens、Stephen A.Rago / 尤晋元、张亚英、戚正伟 / 人民邮电出版社 / 2006年 / 99.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：条理清晰，钜细靡遗，非常基础的 unix/linux 编程入门书籍。</p></blockquote>

<h4>No.2 深入理解程序设计</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25789594/">深入理解程序设计</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25789594/">https://book.douban.com/subject/25789594/</a><br/>
出版信息：[美] Jonathan Bartlett / 郭晴霞 / 人民邮电出版社 / 2014-1 / 49.00<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：简明易懂的AT&amp;T汇编入门书籍，将各种程序概念讲的通俗易懂，最后的推荐书单非常经典。英语CET4水平即可读懂英文版，中文版为《深入理解程序设计》</p></blockquote>

<h4>No.3 Programming From The Ground Up</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1787855/">Programming From The Ground Up</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1787855/">https://book.douban.com/subject/1787855/</a><br/>
出版信息：Jonathan Bartlett / Bartlett Publishing / 2004-07-31 / USD 34.95<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：简明易懂的AT&amp;T汇编入门书籍，将各种程序概念讲的通俗易懂，最后的推荐书单非常经典。英语CET4水平即可读懂英文版，中文版为《深入理解程序设计》</p></blockquote>

<h4>No.4 深入理解C++11</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24738301/">深入理解C++11</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24738301/">https://book.douban.com/subject/24738301/</a><br/>
出版信息：Michael Wong、IBM XL编译器中国开发团队 / 机械工业出版社 / 2013-6 / 69.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：讲C++11新出来的特性，对于已经熟悉C++的人来说，很合适，能够快速了解C++11有哪些新特性，讲的也非常好，简洁易懂，适度深入。</p></blockquote>

<h4>No.5 计算机程序的构造和解释</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1148282/">计算机程序的构造和解释</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1148282/">https://book.douban.com/subject/1148282/</a><br/>
出版信息：Harold Abelson、Gerald Jay Sussman、Julie Sussman / 裘宗燕 / 机械工业出版社 / 2004-2 / 45.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：跳过语法、开发环境等杂碎，直接享受纯思维的乐趣，也只有scheme这么纯的语言能够做到：程序抽象、数据抽象、语言抽象、机器抽象，顺带介绍了lambda表达式、流、惰性求值、寄存器、垃圾回收、编译与解释等等概念。当作程序入门读难度有点大，也许<How to Design Programs>更适合担当此任。从今而后，我要把程序员分为两种：一种读过SICP，另一种没读过SICP。</p></blockquote>

<h4>No.6 C++ API设计</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24869855/">C++ API设计</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24869855/">https://book.douban.com/subject/24869855/</a><br/>
出版信息：[美] Martin Reddy / 刘晓娜、臧秀涛、林健 / 人民邮电出版社 / 2013-8 / 89.00<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：C++API领域中的《代码大全》，非常适合框架、库的开发者。</p></blockquote>

<h4>No.7 七周七语言</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10555435/">七周七语言</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10555435/">https://book.douban.com/subject/10555435/</a><br/>
出版信息：Bruce A.Tate / 巨成、戴玮、白明 / 人民邮电出版社 / 2012-5-8 / 59.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：如果只熟悉一两种语言的话，不妨看看这本书，开拓视野，了解不同编程范式。</p></blockquote>

<h4>No.8 图解TCP/IP : 第5版</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24737674/">图解TCP/IP : 第5版</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24737674/">https://book.douban.com/subject/24737674/</a><br/>
出版信息：[日]竹下隆史、[日]村山公保、[日]荒井透、[日]苅田幸雄 / 乌尼日其其格 / 人民邮电出版社 / 2013-7-1 / 69.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：通俗易懂，简单明了，网络入门必读，赞。</p></blockquote>

<h4>No.9 性能之巅</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26586598/">性能之巅</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26586598/">https://book.douban.com/subject/26586598/</a><br/>
出版信息：Brendan Gregg / 徐章宁、吴寒思、陈磊 / 电子工业出版社 / 2015-8-15 / 128<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：A dictionary book for performance.</p></blockquote>

<h4>No.10 Android移动开发技术丛书 Android底层开发技术实战详解——内核、移植和驱动（第2版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26345170/">Android移动开发技术丛书 Android底层开发技术实战详解——内核、移植和驱动（第2版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26345170/">https://book.douban.com/subject/26345170/</a><br/>
出版信息：王振丽 / 电子工业出版社 / 2015-3 / 79.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：第一版是《Android驱动开发与移植实战详解》？？为啥作者完全不同，而内容大部分相同呢？谁抄谁呢？？</p></blockquote>

<h4>No.11 Android驱动开发与移植实战详解</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/11511562/">Android驱动开发与移植实战详解</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/11511562/">https://book.douban.com/subject/11511562/</a><br/>
出版信息：李骏 / 2012-8 / 79.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：驱动开发入门</p></blockquote>

<h4>No.12 Android内核剖析</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6811238/">Android内核剖析</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6811238/">https://book.douban.com/subject/6811238/</a><br/>
出版信息：柯元旦 / 电子工业出版社 / 2011-9 / 79.90元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：缺少架构图或流程图，关键节点不够突出，因此有点记流水帐或泛泛而谈的感觉。讲的和android内核关系不大，主要还是在framework层面。</p></blockquote>

<h2>私人阅读年度统计：</h2>

<ul>
<li><a href="https://luozhaohui.github.io/blog/2018/01/01/reading/">2017，37本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2017/01/01/reading/">2016，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2016/01/01/reading/">2015，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2015/01/01/reading/">2014，65本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2014/01/01/reading/">2013，33本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2013/01/01/reading/">2012，43本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2012/01/01/reading/">2011，41本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2011/01/01/reading/">2010，47本</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[法律的斗争（萨孟武节录意译本）]]></title>
    <link href="http://luozhaohui.github.io/blog/2017/08/07/the-strunggle-for-law/"/>
    <updated>2017-08-07T20:30:02+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2017/08/07/the-strunggle-for-law</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>耶林的名作：《The Struggle For Low》为权利而斗争。
[德]鲁道夫·冯·耶林著<br/>
萨孟武 译</p>

<!--more-->


<h3>一</h3>

<p>法律的目的是和平，而达到和平的手段则为斗争。法律受到不法的侵害之时——这在世界上可能永远存在——斗争是无法避免的。法律的生命是斗争，即民族的斗争，国家的斗争，阶级的斗争，个人的斗争。</p>

<p>世界上一切法律都是经过斗争而后得到的。法律的重要原则无一不是由反对者的手中夺来。法律的任务在于保护权利，不问民族的权利或个人的权利，凡想保全权利，事前须有准备。法律不是纸上的条文，而是含有生命的力量。正义之神，一手执衡器以权正义，一手执宝剑，以实现正义，宝剑而无衡器，不过暴力。衡器而无宝剑，只是有名无实的正义。二者相依相辅，运用宝剑的威力与运用衡器的技巧能够协调，而后法律才完全见诸实行。</p>

<p>世上有不少的人，一生均在和平的法律秩序之中，过其优游的生活。我们若对他们说：“法律是斗争”，他们将莫明其妙。因为他们只知道法律是保障和平与秩序。这也难怪他们，犹如豪门子弟继承祖宗的遗产，不知稼穑艰难，从而不肯承认财产是劳动的成果。我们以为，法律也好，财产也好，都包含两个要素，人们因其环境之不同，或只看到享乐与和平之一面，或只看到劳苦与斗争之一面。</p>

<p>财产及法律犹如双面神的耶奴斯的头颅(Janus-head)一样，对甲示其一面，对乙又示其另一面，于是各人所得的印象就完全不同。此种双面的形象，不但个人，就是整个时代也是一样。某一时代的生活是战争，另一时代的生活又是和平。各民族因其所处时代不同，常常发生一种错觉。此种错觉实和个人的错觉相同，当和平继续之时，人们均深信永久和平能够实现，然而炮声一响，美梦醒了。以前不劳而得的和平时代已成陈迹，接着而来的则为面目全非的混乱时代。要冲破这个混乱时代，非经过艰苦的战争，绝不能恢复和平。没有战斗的和平及没有勤劳的收益，只存在于天堂。其在人间，则应视力辛苦奋斗的结果。</p>

<p>德文Recht有客观的(objective)及主观的(subjective)两种意义。客观的意义是指法律，即指国家所维护的法律原则，也就是社会生活的法律秩序。主观的意义是指权利，即将抽象的规则改为具体的权利。法律也好，权利也好，常常遇到障碍；要克服障碍，势非采取斗争的方法不可。</p>

<p>我们知道法律需要国家维持。任何时代必定有人想用不法的手段侵害法律。此际国家若袖手旁观，不与斗争，则法律的尊严扫地，人民将轻蔑法律，视为一纸具文。然而我们须知法律又不是永久不变的，一方有拥护的人，同时又有反对的人，两相对立，必引起一场斗争。在斗争中，胜负之数不是决定于理由的多少，而是决定于力量的大小。不过人世的事常不能循着直线进行，多采取中庸之道。拥护现行法律是一个力量，反对现行法律也是一个力量，两个力量成为平行四边形的两边垂直线，两力互相牵制，终则新法律常趋向对角线的方向发展。一种制度老早就应废止，而卒不能废止者，并不是由于历史的惰性，而是由于拥护者的抵抗力。</p>

<p>是故在现行法律之下，要采用新的法律，必有斗争。这个斗争或可继续数百年之久。两派对立，都把自己的法律——权利视为神圣不可侵犯。其结果如何，只有听历史裁判。在过去法制史之上，如奴隶农奴的废除，土地私有的确立，营业的自由，言论的自由，信教的自由等等，都是人民经过数世纪的斗争，才能得到的。法律所经过的路程不是香花铺路，而是腥血涂地，吾人读欧洲历史，即可知之。</p>

<p>总而言之，法律不是人民从容揖让，坐待苍天降落的。人民要取得法律，必须努力，必须斗争，必须流血。人民与法律的关系犹如母子一样，母之生子须冒生命的危险，母子之间就发生了亲爱感情。凡法律不由人民努力而获得者，人民对之常无爱惜之情。母亲失掉婴儿，必伤心而痛哭；同样，人民流血得到的法律亦必爱护备至，不易消灭。</p>

<h3>二</h3>

<p>现在试来说明法律斗争。这个斗争是由一方要侵害法益，他方又欲保护法益而引起的。不问个人的权利或国家的权利，其对侵害，无不尽力防卫。盖权利由权利人观之，固然是他的利益，而由侵害人观之，亦必以侵害权利为他的利益，所以斗争很难避免。上自国权，下至私权，莫不皆然。国际上有战争，国内有暴动与革命。在私权方面，中世有私刑及决斗，今日除民事诉讼之外，尚有自助行为。此数者形式不同，目的亦异，而其为斗争则一。于是就发生一个问题：我们应该为权利而坚决反抗敌人乎，抑为避免斗争，不惜牺牲权利乎?前者是为法律而牺牲和平，后者则为和平而牺牲法律。固然任谁都不会因为一元银币落在水中，而愿出两元银币雇人捞取。这纯粹出于计算。至于诉讼却未必如此，当事人不会计较诉讼费用多少，也不想将诉讼费用归诸对方负担。胜诉的人虽知用费不赀，得不偿失，而尚不肯中轻诉讼，此中理由固不能以常理测之。</p>

<p>个人的纠纷姑且不谈，今试讨论两国的纷争。甲国侵略乙国，虽然不过荒地数里，而乙国往往不惜对之宣战。为数里之荒地，而竟牺牲数万人之生命，数亿元之巨款，有时国家命运且因之发生危险。此种斗争有什么意义?盖乙国国民若沉默不作抗争，则今天甲国可夺取数里荒地，明天将得寸进尺，夺取其他土地，弄到结果，乙国将失掉一切领土，而国家亦灭亡了。由此可知国家因数里荒地所以不惜流血，乃是为生存而作战，为名誉而作战，牺牲如何，结果如何，他们是不考虑的。</p>

<p>国民须保护其领土，则农民土地若为豪强侵占数丈，自可起来反抗，而提起诉讼。被害人提起诉讼，往往不是因为实际上的利益，而是基于权利感情(feeling of right)，对于不法行为，精神上感觉痛苦。即不是单单要讨还标的物，而是要主张自己应有的权利。他的心声告诉他说：你不要退缩，这不是关系毫无价值的物，而是关系你的人格，你的自尊，你的权利感情。简单言之，诉讼对你，不是单单利益问题，而是名誉问题，即人格问题。</p>

<p>世上必有不少的人反对吾言。这个反对意见一旦流行，则法律本身就归毁灭。法律能够存在，乃依靠人们对于不法，肯作勇敢的反抗，若因畏惧而至逃避，这是世上最卑鄙的行为。我敢坚决主张，吾人遇到权利受到损害，应投身于斗争之中出来反抗。此种反抗乃是每个人的义务。</p>

<h3>三</h3>

<p>权利斗争是权利人受到损害，对于自己应尽的义务。生存的保全是一切动物的最高原则。但是其他动物只依本能而保全肉体的生命，人类除肉体的生命之外，尚有精神上的生命。而此精神上的生命由法律观之，则为权利。没有法律，人类将与禽兽无别。一种法律都是集合许多片段而成，每个片段无不包括肉体上及精神上的生存要件。抛弃法律等于抛弃权利，这在法律上是不允许的，而且亦不可能。如其可能，必定受到别人侵害；抵抗侵害乃是权利人的义务。吾人的生存不是单由法律之抽象的保护，而是由于具体的坚决主张权利。坚决主张自己的权利，不是由于利益．而是出于权利感情的作用。
那辈窃盗因他自己不是所有权人，故乃否认所有权的存在，更否认所有权为人格的要件。是则窃盗的行为不但侵害别人的财物，且又侵害别人的人格，受害人应为所有权而防卫自己的人格。因此窃盗的行为可以发生两种结果：一是侵害别人的权益；二是侵害别人的人格。至于上述豪强侵占农民的田地，情形更见严重。倘若该受害农民不敢抗争，必为同辈所轻视。同辈认为其人可欺，虽不敢明目张胆，亦将偷偷摸摸，蚕食该农民的土地。所有权观念愈发达，受害人愈难忍受侵害，从而反抗的意志亦愈益强烈。故凡提起诉讼而能得到胜诉，应对加害人要求双重赔偿，一是讨还标的物；二是赔偿权利感情的损伤。</p>

<p>各种国家对于犯罪之会加害国家的生存者，多处以严刑。在神权国，凡慢渎神祗的处严刑，而擅自改变田界的，只视为普通的犯罪(例如摩西法)。农业国则反是，擅自改变田界的处严刑，慢渎神祗的处轻刑(古罗马法)。商业国以伪造货币，陆军国以妨害兵役，君主国以图谋不轨，共和国以运动复辟，为最大的罪状。要之，个人也好，国家也好，权利感情乃于生存要件受到损害之时，最为强烈。</p>

<p>权利与人格结为一体之时，不问是那一种权利，均不能计算价值之多少。此种价值不是物质上的价值(material value)，而是观念上的价值(ideal value)。对于观念上的价值，不论贫与富，不论野蛮人与文明人，评价都是一样。至其发生的原因，不是由于知识的高低，而是由于苦痛感情的大小。也许野蛮人比之文明人，权利感情更见强烈。文明人往往无意之中，计算得失孰大孰小。野蛮人不凭理智，只依感情，故能勇往猛进，坚决反抗权利之受侵害。但是文明人若能认识权利受到侵害，不但对他自己，而且对整个社会，都可以发生影响，亦会拔剑而起，挺身而斗，不计利害，不计得失。吾于欧洲许多民族之中，只知英国人民有此权利感情。英国人民旅行欧洲大陆，若受旅馆主人或马车驭者的欺骗，纵令急于出发，亦愿延期启行，向对方交涉，虽牺牲十倍的金钱，亦所不惜。这也许可以引人嗤笑，其实嗤笑乃是不知英国人民的性格，所以与其嗤笑英人，不如认识英人。</p>

<h3>四</h3>

<p>为法律而斗争，是权利人的义务，已如上所言矣。兹再进一步，说明个人拥护自己的法律——即法律上的权利——又是对于社会的义务。</p>

<p>法律与权利有何关系?我们深信法律乃是权利的前提，只有法律之抽象的原则存在，而后权利才会存在。权利由于法律，而后才有生命，才有气力，同时又将生命与气力归还法律。法律的本质在于实行，法律不适于实行或失去实行的效力，则法律已经没有资格称为法律了；纵令予以撤废，亦不会发生任何影响。这个原则可适用于一切国法，不问其为公法，其为刑法，其为私法。公法及刑法的实行，是看官署及官吏是否负起责任，私法的实行则看私人是否拥护自己的权利。私人放弃自己的权利，也许由于愚昧，不知权利之存在；也许由于懒惰或由于畏惧，不欲多事，其结果，法律常随之丧失锐气而等于具文。由此可知私法的权威乃悬于权利的行使，一方个人的生命由法律得到保障，他方个人又将生命给与法律，使法律有了生气。法律与权利的关系犹如血液的循环，出自心脏，归于心脏。</p>

<p>个人坚决主张自己应有的权利，这是法律能够发生效力的条件。少数人若有勇气督促法律的实行，藉以保护自己的权利，虽然受到迫害，也无异于信徒为宗教而殉难。自己的权利受到侵害，而乃坐听加害人的横行，不敢起来反抗，则法律将为之毁灭。故凡劝告被害人忍受侵害，无异于劝告被害人破坏法律。不法行为遇到权利人坚决反抗，往往会因之中止。是则法律的毁灭，责任不在于侵害法律的人，而在于被害人缺乏勇气。我敢大胆主张：“勿为不法” (Do no injustice)固然可嘉，“勿宽容不法”(Suffer no injustice)尤为可贵。盖不法行为不问是出之于个人，或是出之于官署，被害人若能不挠不屈，与其抗争，则加害人有所顾忌，必不敢轻举妄动。由此可知我的权利受到侵犯，受到否认，就是人人权利受到侵犯，受到否认。反之，我能防护权利，主张权利，回复权利，就是人人权利均受防护，均有主张，均能回复。故凡为一己的权利而奋斗，乃有极崇高的意义。</p>

<p>在这个观念之下，权利斗争同时就是法律斗争，当事人提起诉讼之时，成为问题的不限于权利主体的利益，即整个法律亦会因之发生问题。莎士比亚在其所著(威尼斯的商人) (Merchant of Venice)中，描写犹太商人舍洛克(Shylock)贷款给安多纽(Anto- nio)的故事，中有舍洛克所说的一段话：</p>

<pre><code>我所要求一磅的肉，
是我买来的，这属于我，我必须得到；
你们拒绝不予，就是唾弃你们的法律；
这样，威尼斯的法律又有什么威力。
……我需要法律，
……我这里有我的证件。
</code></pre>

<p>“我要法律”一语，可以表示权利与法律的关系。又有人人应为维护法律而作斗争的意义。有了这一句话，事件便由舍洛克之要求权利，一变而为威尼斯的法律问题了。当他发出这个喊声之时，他已经不是要求一磅肉的犹太人而是凛然不可侵犯的威尼斯法律的化身，他的权利与威尼斯的法律成为一体。他的权利消灭之时，威尼斯的法律也归消灭。不幸得很，法官竟用诡计，拒绝舍洛克履行契约。契约内容苟有反于善良风俗，自得谓其无效。法官不根据这个理由，既承认契约为有效，而又附以割肉而不出血的条件。这犹如法官承认地役权人得行使权利，又不许地役权人留足印子地上。这种判决，舍洛克何能心服。当他悄然离开法庭之时，威尼斯的法律也悄然毁灭了。</p>

<p>说到这里，我又想起另一作家克莱斯特(Henrich von Kleist) 所写的小说《米刻尔·科尔哈斯》(Michael Koh Ihass)了。舍洛克悄然走出，失去反抗之力而服从法院的判决。反之，科尔哈斯则不然了。他应得的权利受到侵害，法官曲解法律，不予保护，领主又左袒法官，不作正义的主张。他悲愤极了，说道：“为人而受蹂躏，不如为狗”，“禁止法律保护吾身，便是驱逐吾身于蛮人之中。他们是把棍子给我，叫我自己保护自己”。于是愤然而起，由正义的神那里，夺得宝剑，挥之舞之，全国为之震骇，腐化的制度为之动摇，君主的地位为之战栗。暴动的号角已经鸣了。权利感情受到侵害，无异于对人类全体宣战。但是驱使科尔哈斯作此行动，并不是单单报仇而已，而是基于正义的观念。即余当为自己目前所受的侮辱，恢复名誉；并为同胞将来所受的侵害，要求保护，这是余的义务。结果，他便对于从前宣告他为有罪的人——君主、领主及法官，科以2倍、3倍以上的私刑。世上不法之事莫过于执行法律的人自己破坏法律。法律的看守人变为法律的杀人犯，医生毒死病人，监护人绞杀被监护人，这是天下最悖理的事。在古代罗马，法官受贿，便处死刑。法官审判，不肯根据，而惟视金钱多少，势力大小，法律消灭了，人民就由政治社会回归到自然世界，各人均用自己的腕力以保护自己的权利，这是势之必然。</p>

<p>人类的权利感情不能得到满足，往往采取非常手段。盖国家权力乃所以保护人民的权利感情，而今人民的权利感情反为国家权力所侵害，则人民放弃法律途径，用自助行为以求权利感情的满足，不能不说是出于万不得已。然此又不是毫无结果．教徒的殉难可使罗马皇帝承认基督教，欧洲各国的民主宪政何一不是由流血得来。科尔哈斯挥动宝剑实是“法治”发生的基础。</p>

<h3>五</h3>

<p>国民只是个人的总和，个人之感觉如何，思想如何，行动如何，常表现为国民的感觉思想和行动。个人关于私权的主张，冷淡而又卑怯，受了恶法律和恶制度的压迫，只有忍气吞声，不敢反抗，终必成为习惯，而丧失权利感情。一旦遇到政府破坏宪法或外国侵略领土，而希望他们奋然而起，为宪政而斗争，为祖国而斗争，争所难能。凡沉于安乐，怯于抗斗，不能勇敢保护自己权利的人，哪肯为国家的名誉，为民族的利益，牺牲自己的生命。至于名誉或人格也会因而受到损害，此辈是不了解的。此辈关于权利，只知其为物质上的利益，我们何能希望他们另用别的尺度以考虑国民的权利及名誉。所以国法上能够争取民权，国际法上能够争取主权的人，常是私权上勇敢善战之士。前曾陈过，英国人愿为区区一便士之微而愿付出十倍以上的金钱，与加害人从事斗争。有这斗争精神，故在国内能够争取民主政治，于国外能够争取国家声望。</p>

<p>对于国民施行政治教育的是私法，绝不是公法。国民在必要时，若能知道如何保护政治的权利，如何于各国之间，防卫国家的独立．必须该国人民在私人生活方面，能够知道如何主张他们自己的权利。自己权利受到侵害，不问来自何方，是来自个人乎，来自政治乎，来自外国乎，若对之毫无感觉，必是该国人民没有权利情感。是故反抗侵害，不是因为侵害属于那一种类，而是悬于权利感情之有无。</p>

<p>依上所述，我们可以得到简单的结论，即对国外要发扬国家的声望，对国内要建立强国的基础，莫贵于保护国民的权利感情；且应施以教育，使国民的权利感情能够生长滋蔓。</p>

<p>专制国家的门户常开放给敌人进来。盖专制政府无不蔑视私权，赋税任意增加，没有人反对；徭役任意延长，没有人抗议。人民养成了盲从的习惯，一旦遇到外敌来侵，人民必萎靡不振，移其过去盲从专制政府者以盲从敌人政府。到了这个时候，政治家方才觉悟，要培养对外民气，须先培养对内民气，亦已晚矣。</p>

<p>载 王泽鉴：《民法总则》（增订版）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C++ 11模板元编程实现Scheme中的list及相关函数式编程接口]]></title>
    <link href="http://luozhaohui.github.io/blog/2017/03/15/cpp-scheme/"/>
    <updated>2017-03-15T09:03:20+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2017/03/15/cpp-scheme</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>本文将介绍如何使用<code>C++11</code>模板元编程实现<code>Scheme</code>中的<code>list</code>及相关函数式编程接口，如<code>list</code>，<code>cons</code>，<code>car</code>，<code>cdr</code>，<code>length</code>，<code>is_empty</code>，<code>reverse</code>，<code>append</code>,<code>map</code>，<code>transform</code>，<code>enumerate</code>，<code>lambda</code>等。</p>

<h2>预备知识</h2>

<h3>Scheme简介</h3>

<p><a href="http://schemers.org/">Scheme</a>语言是<code>lisp</code>语言的一个方言(或说成变种)，它诞生于1975年的<code>MIT</code>，对于这个有近三十年历史的编程语言来说，它并没有象 C++，java，C#那样受到商业领域的青睐，在国内更是鲜为人知。但它在国外的计算机教育领域内却是有着广泛应用的，有很多人学的第一门计算机语言就 是<code>Scheme</code>语言（<a href="https://book.douban.com/subject/1148282/">SICP</a>曾经就是以<code>Scheme</code>为教学语言）。</p>

<p>它是一个小巧而又强大的语言，作为一个多用途的编程语言，它可以作为脚本语言使用，也可以作为应用软件的扩展语言来使用，它具有元语言特性，还有很多独到的特色,以致于它被称为编程语言中的"皇后"。</p>

<p>如果你对<code>Scheme</code>感兴趣，推荐使用<a href="http://racket-lang.org/">drracket</a>这个</ode>GUI</code>解释器，入门教程有：<a href="http://www.htdp.org/">How to Design Programs</a>，高级教程有：<a href="https://book.douban.com/subject/1148282/">SICP</a>。</p>

<!--more-->


<h3>Scheme中的list及相关操作</h3>

<p><code>list</code>可以说是<code>Lisp</code>系语言的根基，其名就得自于<code><strong>LIS</strong>t <strong>P</strong>rocessor</code>，其重要性就像文件概念之于<code>unix</code>。</p>

<p><code>list</code>示例：</p>

<blockquote><p>(list &ldquo;red&rdquo; &ldquo;green&rdquo; &ldquo;blue&rdquo;)<br/>
&lsquo;(&ldquo;red&rdquo; &ldquo;green&rdquo; &ldquo;blue&rdquo;)<br/>
(list 1 2 3)<br/>
&rsquo;(1 2 3)</p></blockquote>

<p>上面的语法糖<code>list</code>其实是通过递归调用点对<code>cons</code>实现的，因此上面的语法等价于：</p>

<blockquote><p>(cons &ldquo;red&rdquo; (cons &ldquo;green&rdquo; (cons &ldquo;blue&rdquo; empty)))<br/>
&lsquo;(&ldquo;red&rdquo; &ldquo;green&rdquo; &ldquo;blue&rdquo;)<br/>
(cons 1 (cons 2 (cons 3 empty)))<br/>
&rsquo;(1 2 3)</p></blockquote>

<p>另外两个重要的点对操作是<code>car</code>和<code>cdr</code>，名字有点奇怪但是是有<a href="https://en.wikipedia.org/wiki/CAR_and_CDR">历史的</a>：<strong>C</strong>urrent <strong>A</strong>ddress <strong>R</strong>egister and <strong>C</strong>urrent <strong>D</strong>ecrement <strong>R</strong>egister，其实就相当于<code>first</code>和<code>second</code>的意思。</p>

<blockquote><p>(car (cons 1 2))  ==> 1<br/>
(cdr (cons 1 2))  ==> 2</p></blockquote>

<h3>模板元编程</h3>

<p>C++中的Meta Programming，即模板元编程，是图灵完备的，而且是编译期间完成的。模板元编程通常用于编写工具库，如STL、Boost等。</p>

<p>比如通常我们使用递归来实现实现阶乘：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;iostream&gt;
</span><span class='line'> 
</span><span class='line'>unsigned int factorial(unsigned int n) {
</span><span class='line'>    return n == 0 ? 1 : n * factorial(n - 1);
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>int main() {
</span><span class='line'>    std::cout &lt;&lt; factorial(5) &lt;&lt; std::endl;
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>我们也可以通过模板元编程来实现：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;iostream&gt;
</span><span class='line'>
</span><span class='line'>template &lt;unsigned int n&gt;
</span><span class='line'>struct factorial {
</span><span class='line'>    static constexpr unsigned int value = n * factorial&lt;n - 1&gt;::value;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;&gt;
</span><span class='line'>struct factorial&lt;0&gt; {
</span><span class='line'>    static constexpr unsigned int value = 1;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>int main() {
</span><span class='line'>    std::cout &lt;&lt; factorial&lt;5&gt;::value &lt;&lt; std::endl; // 120
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>实现</h2>

<p>本文完整代码可以在这里查看：<a href="https://github.com/luozhaohui/cpp/blob/master/cons.cpp">点击查看代码</a></p>

<h3>基本数据结构</h3>

<p>为了用模板元编程来模拟Scheme中<code>list</code>即相关操作，我们需要先定义一些模板数据结构。这些数据结构非常简单，即重新定义基本数据类型，为了简化，在这里我只特化了必须的<code>int</code>、<code>uint</code>、<code>bool</code>以及<code>empty</code>的实现。<code>empty</code>是递归实现<code>list</code>的最后一个元素，其作用相当于<code>&lsquo;\0&rsquo;</code>之于字符串。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// type_
</span><span class='line'>//
</span><span class='line'>template &lt;typename T, T N&gt;
</span><span class='line'>struct type_ {
</span><span class='line'>    using type = type_&lt;T, N&gt;;
</span><span class='line'>    using value_type = T;
</span><span class='line'>    static constexpr T value = N;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>// int_
</span><span class='line'>//
</span><span class='line'>template &lt;int N&gt;
</span><span class='line'>struct int_ {
</span><span class='line'>    using type = int_&lt;N&gt;;
</span><span class='line'>    using value_type = int;
</span><span class='line'>    static constexpr int value = N;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>// uint_
</span><span class='line'>//
</span><span class='line'>template &lt;unsigned int N&gt;
</span><span class='line'>struct uint_ {
</span><span class='line'>    using type = uint_&lt;N&gt;;
</span><span class='line'>    using value_type = unsigned int;
</span><span class='line'>    static constexpr unsigned int value = N;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;&gt;
</span><span class='line'>struct uint_&lt;0&gt; {
</span><span class='line'>    using type = uint_&lt;0&gt;;
</span><span class='line'>    using value_type = unsigned int;
</span><span class='line'>    static constexpr unsigned int value = 0;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>// bool_
</span><span class='line'>template &lt;bool N&gt;
</span><span class='line'>struct bool_ {
</span><span class='line'>    using type = bool_&lt;N&gt;;
</span><span class='line'>    using value_type = bool;
</span><span class='line'>    static constexpr bool value = N;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>// empty
</span><span class='line'>//
</span><span class='line'>struct empty {
</span><span class='line'>    using type = empty;
</span><span class='line'>    using value = empty;
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>下面我们先来个小示例，看看怎么使用这些模板数据结构。这个示例的作用是将仅仅用0和1表示的十进制数字当成二进制看，转换为十进制数值。如：101 转换为十进制数值为 5.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;unsigned int N&gt;
</span><span class='line'>struct binary : uint_ &lt; binary &lt; N / 10 &gt;::type::value * 2 + (N % 10) &gt; {};
</span><span class='line'>
</span><span class='line'>template &lt;&gt;
</span><span class='line'>struct binary&lt;0&gt; : uint_&lt;0&gt; {};</span></code></pre></td></tr></table></div></figure>


<p>测试示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>std::cout &lt;&lt; binary&lt;101&gt;::value &lt;&lt; std::endl;               // 5</span></code></pre></td></tr></table></div></figure>


<h3>cons &amp; car &amp; cdr实现</h3>

<p><code>cons</code>的实现原理很简单：就是能够递归调用自己结合成点对<code>pair</code>。在<code>Scheme</code>中示例如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(cons 1 (cons 2 (cons 3 '())))</span></code></pre></td></tr></table></div></figure>


<p>其中<code>&lsquo;()</code>表示空的点对<code>pair</code>，在我们的实现里面就是<code>empty</code>。</p>

<p>因此<code>cons</code>用C++元编程实现就是：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename h, typename t&gt;
</span><span class='line'>struct cons {
</span><span class='line'>    using type = cons&lt;h, t&gt;;
</span><span class='line'>    using head = h;
</span><span class='line'>    using tail = t;
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>std::cout &lt;&lt; cons&lt;int_&lt;1&gt;, int_&lt;2&gt;&gt;::head::value &lt;&lt; std::endl;  // 1</span></code></pre></td></tr></table></div></figure>


<p>同样，我们可以实现用于获取<code>head</code>的<code>car</code>与获取<code>tail</code>的<code>cdr</code>操作：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct car_t {
</span><span class='line'>    template &lt;typename cons&gt;
</span><span class='line'>    struct apply {
</span><span class='line'>        using type = typename cons::type::head;
</span><span class='line'>    };
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename cons&gt;
</span><span class='line'>struct car : car_t::template apply&lt;cons&gt;::type {};
</span><span class='line'>
</span><span class='line'>struct cdr_t {
</span><span class='line'>    template &lt;typename cons&gt;
</span><span class='line'>    struct apply {
</span><span class='line'>        using type = typename cons::type::tail::type;
</span><span class='line'>    };
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename cons&gt;
</span><span class='line'>struct cdr : cdr_t::template apply&lt;cons&gt;::type {};</span></code></pre></td></tr></table></div></figure>


<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>using c1 = cons&lt;int_&lt;1&gt;, cons&lt;int_&lt;2&gt;, int_&lt;3&gt;&gt;&gt;;
</span><span class='line'>std::cout &lt;&lt; car&lt;c1&gt;::value &lt;&lt; ", " &lt;&lt; cdr&lt;c1&gt;::head::value &lt;&lt; std::endl; // 1, 2
</span><span class='line'>std::cout &lt;&lt; car&lt;c1&gt;::value &lt;&lt; ", " &lt;&lt; car&lt;cdr&lt;c1&gt;&gt;::value &lt;&lt; std::endl; // 1, 2</span></code></pre></td></tr></table></div></figure>


<p>对于上面的实现，稍微解释一下：<code>car</code>是对<code>car_t</code>的封装，这样使用起来更为方便，对比如下用法就能明了，后面这样的封装手法还会用到：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>car&lt;cons&lt;int_&lt;1&gt;, int_&lt;2&gt;&gt;::value                   // == 1
</span><span class='line'>car_f::template apply&lt;cons&lt;int_&lt;1&gt;, int_&lt;2&gt;&gt;::value // == 1</span></code></pre></td></tr></table></div></figure>


<h3>list的实现</h3>

<p><code>list</code>其实一种特殊的<code>cons</code>，其实现如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename first = empty, typename ...rest&gt;
</span><span class='line'>struct list_t : std::conditional &lt;
</span><span class='line'>    sizeof...(rest) == 0,
</span><span class='line'>    cons&lt;first, empty&gt;,
</span><span class='line'>    cons&lt;first, typename list_t&lt;rest...&gt;::type&gt;&gt;::type
</span><span class='line'>{};
</span><span class='line'>
</span><span class='line'>template &lt;&gt;
</span><span class='line'>struct list_t&lt;empty&gt; : empty {};
</span><span class='line'>
</span><span class='line'>template &lt;typename T, T ...elements&gt;
</span><span class='line'>struct list : list_t&lt;type_&lt;T, elements&gt;...&gt; {};</span></code></pre></td></tr></table></div></figure>


<p>这里用到了C++11中的变长模板参数，<code>std::conditional</code>以及对<code>empty</code>的特化处理。
 - 变长模板参数：<code>list</code>接收变长模板参数<code>elements</code>，然后封装类型为成<code>type_</code>的变长模板参数forward给<code>list_t</code>；
 - <code>std::conditional</code>：相当于<code>if &hellip; else &hellip;</code>，如果第一参数为真，则返回第二参数，否则返回第三参数；
 - &lt;第一参数中的code>sizeof&hellip;(rest)</code>：<code>sizeof</code>是C++11的新用法，用于获取变长参数的个数；
 - 第二参数的作用是终止递归；
 - 第三参数的作用是递归调用<code>list_t</code>构造点对。
 - 因为<code>empty</code>比较特殊，所以需要特化处理</p>

<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>using l1 = list&lt;int, 1, 2, 3&gt;;
</span><span class='line'>using l2 = list&lt;int, 4, 5, 6, 7&gt;;
</span><span class='line'>using l3 = list_t&lt;int_&lt;1&gt;, int_&lt;2&gt;, int_&lt;3&gt;&gt;;
</span><span class='line'>
</span><span class='line'>std::cout &lt;&lt; "\n&gt;list" &lt;&lt; std::endl;
</span><span class='line'>print&lt;l1&gt;();    // 1, 2, 3
</span><span class='line'>print&lt;l3&gt;();    // 1, 2, 3
</span><span class='line'>std::cout &lt;&lt; car&lt;l1&gt;::value &lt;&lt; ", " &lt;&lt; cdr&lt;l1&gt;::head::value &lt;&lt; std::endl;   // 1, 2</span></code></pre></td></tr></table></div></figure>


<h3>length &amp; is_empty的实现</h3>

<p>先来看看<code>length<code>的实现，其思路与list的实现一样：递归调用自身，并针对<code>empty</code>特化处理。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename list&gt;
</span><span class='line'>struct length_t
</span><span class='line'>{
</span><span class='line'>    static constexpr unsigned int value =
</span><span class='line'>        1 + length_t&lt;typename cdr&lt;list&gt;::type&gt;::value;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;&gt;
</span><span class='line'>struct length_t&lt;empty&gt;
</span><span class='line'>{
</span><span class='line'>    static constexpr unsigned int value = 0;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename list&gt;
</span><span class='line'>struct length
</span><span class='line'>{
</span><span class='line'>    static constexpr unsigned int value = length_t&lt;typename list::type&gt;::value;
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p><code>is_empty</code>可以简单实现为判断<code>length</code>为0：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename list&gt;
</span><span class='line'>struct is_empty
</span><span class='line'>{
</span><span class='line'>    static constexpr bool value = (0 == length&lt;list&gt;::value);
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>当然这样的实现效率并不高，因此可以通过对<code>list</code>以及<code>empty</code>的特化处理来高效实现：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename list&gt;
</span><span class='line'>struct is_empty_t
</span><span class='line'>{
</span><span class='line'>    static constexpr bool value = false;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;&gt;
</span><span class='line'>struct is_empty_t&lt;empty&gt;
</span><span class='line'>{
</span><span class='line'>    static constexpr bool value = true;
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename list&gt;
</span><span class='line'>struct is_empty
</span><span class='line'>{
</span><span class='line'>    static constexpr bool value = is_empty_t&lt;typename list::type&gt;::value;
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>std::cout &lt;&lt; "is_empty&lt;empty&gt; : " &lt;&lt; is_empty&lt;empty&gt;::value &lt;&lt; std::endl;            // 1
</span><span class='line'>std::cout &lt;&lt; "is_empty&lt;list&lt;int&gt;&gt; : " &lt;&lt; is_empty&lt;list&lt;int&gt;&gt;::value &lt;&lt; std::endl;    // 1
</span><span class='line'>std::cout &lt;&lt; "is_empty&lt;list&lt;int, 1, 2, 3&gt;&gt; : " &lt;&lt; is_empty&lt;l1&gt;::value &lt;&lt; std::endl;  // 0
</span><span class='line'>std::cout &lt;&lt; "length&lt;empty&gt; : " &lt;&lt; length&lt;empty&gt;::value &lt;&lt; std::endl;                // 0
</span><span class='line'>std::cout &lt;&lt; "length&lt;list&lt;int&gt;&gt; : " &lt;&lt; length&lt;list&lt;int&gt;&gt;::value &lt;&lt; std::endl;        // 0
</span><span class='line'>std::cout &lt;&lt; "length&lt;list&lt;int, 1, 2, 3&gt;&gt; : " &lt;&lt; length&lt;l1&gt;::value &lt;&lt; std::endl;      // 3</span></code></pre></td></tr></table></div></figure>


<h3>append &amp; reverse的实现</h3>

<p><code>append</code>是将一个列表list2追加到已有列表list1的后面，其实现思路是递归地将car<list1>当做head，然后将cdr<list1>作为新的list1递归调用append。不要忘记特化<code>empty</code>的情况。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct append_t {
</span><span class='line'>    template &lt;typename list1, typename list2&gt;
</span><span class='line'>    struct apply : cons&lt;
</span><span class='line'>        typename car&lt;list1&gt;::type,
</span><span class='line'>        typename append_t::template apply&lt;typename cdr&lt;list1&gt;::type, list2&gt;::type&gt;
</span><span class='line'>    {};
</span><span class='line'>
</span><span class='line'>    template&lt;typename list2&gt;
</span><span class='line'>    struct apply &lt;empty, list2&gt;: list2
</span><span class='line'>    {};
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename list1, typename list2&gt;
</span><span class='line'>struct append : std::conditional &lt;
</span><span class='line'>    is_empty&lt;list1&gt;::value,
</span><span class='line'>    list2,
</span><span class='line'>    append_t::template apply&lt;list1, list2&gt;
</span><span class='line'>    &gt;::type
</span><span class='line'>{};</span></code></pre></td></tr></table></div></figure>


<p><code>reverse</code>的实现思路与<code>append</code>类似，只不过是要逆序罢了：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct reverse_t {
</span><span class='line'>    template &lt;typename reset, typename ready&gt;
</span><span class='line'>    struct apply : reverse_t::template apply&lt;
</span><span class='line'>            typename cdr&lt;reset&gt;::type,
</span><span class='line'>            cons&lt;typename car&lt;reset&gt;::type, ready&gt;&gt;
</span><span class='line'>    {};
</span><span class='line'>
</span><span class='line'>    template&lt;typename ready&gt;
</span><span class='line'>    struct apply &lt;empty, ready&gt; : ready
</span><span class='line'>    {};
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename list&gt;
</span><span class='line'>struct reverse : std::conditional &lt;
</span><span class='line'>    is_empty&lt;list&gt;::value,
</span><span class='line'>    list,
</span><span class='line'>    reverse_t::template apply&lt;typename list::type, empty&gt;
</span><span class='line'>    &gt;::type
</span><span class='line'>{};</span></code></pre></td></tr></table></div></figure>


<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// reverse
</span><span class='line'>using r1 = reverse&lt;l1&gt;;
</span><span class='line'>using r2 = reverse&lt;list&lt;int&gt;&gt;;
</span><span class='line'>print&lt;r1&gt;();    // 3, 2, 1
</span><span class='line'>print&lt;r2&gt;();
</span><span class='line'>
</span><span class='line'>// append
</span><span class='line'>using a1 = append&lt;l1, l2&gt;;
</span><span class='line'>using a2 = append&lt;l1, list&lt;int&gt;&gt;;
</span><span class='line'>using a3 = append&lt;list&lt;int&gt;, l1&gt;;
</span><span class='line'>print&lt;a1&gt;();    // 1, 2, 3, 4, 5, 6, 7
</span><span class='line'>print&lt;a2&gt;();    // 1, 2, 3
</span><span class='line'>print&lt;a3&gt;();    // 1, 2, 3</span></code></pre></td></tr></table></div></figure>


<h3>函数式编程</h3>

<p><code>lisp</code>系语言的最大特性就是支持函数式编程，它能够把无差别地对待数据与函数，实现了对数据与代码的同等抽象。下面我们来添加对函数式编程的支持：<code>enumerate</code>, <code>map</code>，<code>apply</code>, <code>lambda</code> 以及 <code>transform</code>。</p>

<h4>map的实现</h4>

<p><code>map</code>的语义是迭代地将某个方法作用于列表中的每个元素，然后得到结果<code>list</code>。先来定义一些辅助的方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename T, typename N&gt;
</span><span class='line'>struct plus : int_ &lt; T::value + N::value &gt; {};
</span><span class='line'>
</span><span class='line'>template &lt;typename T, typename N&gt;
</span><span class='line'>struct minus : int_ &lt; T::value - N::value &gt; {};
</span><span class='line'>
</span><span class='line'>struct inc_t {
</span><span class='line'>    template &lt;typename n&gt;
</span><span class='line'>    struct apply : int_ &lt; n::value + 1 &gt; {};
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename n&gt;
</span><span class='line'>struct inc : int_ &lt; n::value + 1 &gt; {};</span></code></pre></td></tr></table></div></figure>


<p>下面来看map的实现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct map_t {
</span><span class='line'>    template &lt;typename fn, typename list&gt;
</span><span class='line'>    struct apply : cons &lt;
</span><span class='line'>        typename fn::template apply&lt;typename car&lt;list&gt;::type&gt;,
</span><span class='line'>        map_t::template apply&lt;fn, typename cdr&lt;list&gt;::type&gt;
</span><span class='line'>    &gt;{};
</span><span class='line'>
</span><span class='line'>    template &lt;typename fn&gt;
</span><span class='line'>    struct apply &lt;fn, empty&gt;: empty{};
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename fn, typename list&gt;
</span><span class='line'>struct map : std::conditional &lt;
</span><span class='line'>    is_empty&lt;list&gt;::value,
</span><span class='line'>    list,
</span><span class='line'>    map_t::template apply&lt;fn, list&gt;
</span><span class='line'>    &gt;::type
</span><span class='line'>{};</span></code></pre></td></tr></table></div></figure>


<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>using m1 = map&lt;inc_t, list&lt;int, 1, 2, 3&gt;&gt;;
</span><span class='line'>using m2 = map&lt;inc_t, list&lt;int&gt;&gt;;
</span><span class='line'>print&lt;m1&gt;();    // 2, 3, 4
</span><span class='line'>print&lt;m2&gt;();</span></code></pre></td></tr></table></div></figure>


<p>为了让<code>map</code>支持形如<code>inc</code>这样的模板类，而不仅仅是形如<code>inc_t</code>，我们需要定义一个转换器：<code>lambda</code>：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct apply_t {
</span><span class='line'>    template &lt;template &lt;typename...&gt; class F, typename ...args&gt;
</span><span class='line'>    struct apply : F&lt;typename args::type...&gt; {};
</span><span class='line'>
</span><span class='line'>    template &lt;template &lt;typename...&gt; class F&gt;
</span><span class='line'>    struct apply &lt;F, empty&gt; : empty {};
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;template &lt;typename...&gt; class F, typename ...args&gt;
</span><span class='line'>struct apply : apply_t::template apply&lt;F, args...&gt; {};
</span><span class='line'>
</span><span class='line'>template &lt;template &lt;typename...&gt; class F&gt;
</span><span class='line'>struct lambda {
</span><span class='line'>    template &lt;typename ...args&gt;
</span><span class='line'>    struct apply : apply_t::template apply&lt;F, args...&gt; {};
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>std::cout &lt;&lt; lambda&lt;inc&gt;::template apply&lt;int_&lt;0&gt;&gt;::value &lt;&lt; std::endl;  // 1
</span><span class='line'>using ml1 = map&lt;lambda&lt;inc&gt;, list&lt;int, 1, 2, 3&gt;&gt;;
</span><span class='line'>print&lt;ml1&gt;();  // 2, 3, 4</span></code></pre></td></tr></table></div></figure>


<h3>transform的实现</h3>

<p><code>transform</code>的语义是对迭代地将某个方法作用于两个列表上的元素，然后得到结果<code>list</code>。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct transform_t {
</span><span class='line'>    template &lt;typename list1, typename list2, typename fn&gt;
</span><span class='line'>    struct apply : cons &lt;
</span><span class='line'>        typename fn::template apply&lt;
</span><span class='line'>            typename car&lt;list1&gt;::type, typename car&lt;list2&gt;::type&gt;::type,
</span><span class='line'>        typename transform_t::template apply &lt;
</span><span class='line'>            typename cdr&lt;list1&gt;::type, typename cdr&lt;list2&gt;::type, fn&gt;::type
</span><span class='line'>    &gt; {};
</span><span class='line'>
</span><span class='line'>    template &lt;typename list1, typename fn&gt;
</span><span class='line'>    struct apply&lt;list1, empty, fn&gt; : cons &lt;
</span><span class='line'>        typename fn::template apply&lt;typename car&lt;list1&gt;::type, empty&gt;,
</span><span class='line'>        typename transform_t::template apply &lt;typename cdr&lt;list1&gt;::type, empty, fn&gt;::type
</span><span class='line'>    &gt; {};
</span><span class='line'>
</span><span class='line'>    template &lt;typename list2, typename fn&gt;
</span><span class='line'>    struct apply&lt;empty, list2, fn&gt; : cons &lt;
</span><span class='line'>        typename fn::template apply&lt;empty, typename car&lt;list2&gt;::type&gt;::type,
</span><span class='line'>        typename transform_t::template apply &lt;empty, typename cdr&lt;list2&gt;::type, fn&gt;::type
</span><span class='line'>    &gt; {};
</span><span class='line'>
</span><span class='line'>    template &lt;typename fn&gt;
</span><span class='line'>    struct apply&lt;empty, empty, fn&gt; : empty {};
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename list1, typename list2, typename fn&gt;
</span><span class='line'>struct transform : std::conditional &lt;
</span><span class='line'>    is_empty&lt;list1&gt;::value,
</span><span class='line'>    list1,
</span><span class='line'>    transform_t::template apply&lt;list1, list2, fn&gt;
</span><span class='line'>    &gt;::type
</span><span class='line'>{
</span><span class='line'>    static_assert(length&lt;list1&gt;::value == length&lt;list2&gt;::value, "transform: length of lists mismatch!");
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>其实现是最为复杂的，我们先来看使用示例，再来讲解实现细节。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>using t1 = list&lt;int, 1, 2, 3&gt;;
</span><span class='line'>using t2 = list&lt;int, 3, 2, 1&gt;;
</span><span class='line'>using ml = transform&lt;t1, t2, lambda&lt;minus&gt;&gt;;
</span><span class='line'>using pl = transform&lt;t1, t2, lambda&lt;plus&gt;&gt;;
</span><span class='line'>using te = transform&lt;list&lt;int&gt;, list&lt;int&gt;, lambda&lt;plus&gt;&gt;;
</span><span class='line'>using el = transform&lt;t1, list&lt;int&gt;, lambda&lt;plus&gt;&gt;;
</span><span class='line'>print&lt;ml&gt;();    // -2, 0, 2
</span><span class='line'>print&lt;pl&gt;();    // 4, 4, 4
</span><span class='line'>print&lt;te&gt;();
</span><span class='line'>// print&lt;el&gt;(); // assertion: length mismatch!</span></code></pre></td></tr></table></div></figure>


<p>实现细节：</p>

<ul>
<li>使用<code>C++11</code>新特性<code>static_assert</code>对两个列表的长度相等做断言；</li>
<li>使用<code>std::conditional</code>处理空列表，如果非空<code>forward</code>给<code>transform_t</code>；</li>
<li>对<code>transform_t</code>特化处理空列表的情况；</li>
<li>如果<code>list1</code>与<code>list2</code>均非空，那么通过<code>car</code>取出两个列表的<code>head</code>作用于方法，然后递归调用<code>transform_t</code>作用于两个列表的<code>tail</code>。</li>
</ul>


<h3>enumerate的实现</h3>

<p><code>enumerate</code>的语义是迭代将某个方法作用于列表元素。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename fn, typename list, bool is_empty&gt;
</span><span class='line'>struct enumerate_t;
</span><span class='line'>
</span><span class='line'>template &lt;typename fn, typename list&gt;
</span><span class='line'>void enumerate(fn f)
</span><span class='line'>{
</span><span class='line'>    enumerate_t&lt;fn, list, is_empty&lt;list&gt;::value&gt; impl;
</span><span class='line'>    impl(f);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>template &lt;typename fn, typename list, bool is_empty = false&gt;
</span><span class='line'>struct enumerate_t
</span><span class='line'>{
</span><span class='line'>    void operator()(fn f) {
</span><span class='line'>        f(car&lt;list&gt;::value);
</span><span class='line'>        enumerate&lt;fn, typename cdr&lt;list&gt;::type&gt;(f);
</span><span class='line'>    }
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename fn, typename list&gt;
</span><span class='line'>struct enumerate_t&lt;fn, list, true&gt;
</span><span class='line'>{
</span><span class='line'>    void operator()(fn f) {
</span><span class='line'>        // nothing for empty
</span><span class='line'>    }
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p><code>enumerate</code>的实现与之前的<code>map</code>的实现很不一样，它是通过模板方法与函数子来实现的。模板方法内部调用函数子来做事情，函数子又是一个模板类，并对空列表做了特化处理。</p>

<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>using value_type = typename car&lt;e1&gt;::value_type;
</span><span class='line'>auto sqr_print = [](value_type val) { std::cout &lt;&lt; val * val &lt;&lt; " "; };
</span><span class='line'>enumerate&lt;decltype(sqr_print), e1&gt;(sqr_print);      // 1 4 9</span></code></pre></td></tr></table></div></figure>


<h3>equal的实现</h3>

<p><code>equal</code>用于判断两个列表是否等价。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>struct equal_t {
</span><span class='line'>    // both lists are not empty
</span><span class='line'>    template &lt;typename list1, typename list2, int empty_value = 0,
</span><span class='line'>        typename pred = lambda&lt;std::is_same&gt;&gt;
</span><span class='line'>    struct apply : std::conditional &lt;
</span><span class='line'>        !pred::template apply &lt;
</span><span class='line'>            typename car&lt;list1&gt;::type,
</span><span class='line'>            typename car&lt;list2&gt;::type
</span><span class='line'>            &gt;::type::value,
</span><span class='line'>        bool_&lt;false&gt;,
</span><span class='line'>        typename equal_t::template apply &lt;
</span><span class='line'>            typename cdr&lt;list1&gt;::type,
</span><span class='line'>            typename cdr&lt;list2&gt;::type,
</span><span class='line'>            (is_empty&lt;typename cdr&lt;list1&gt;::type&gt;::value
</span><span class='line'>                + is_empty&lt;typename cdr&lt;list2&gt;::type&gt;::value),
</span><span class='line'>            pred
</span><span class='line'>        &gt;::type
</span><span class='line'>    &gt; {};
</span><span class='line'>
</span><span class='line'>    // one of the list is empty.
</span><span class='line'>    template &lt;typename list1, typename list2, typename pred&gt;
</span><span class='line'>    struct apply&lt;list1, list2, 1, pred&gt;: bool_&lt;false&gt;
</span><span class='line'>    {};
</span><span class='line'>
</span><span class='line'>    // both lists are empty.
</span><span class='line'>    template &lt;typename list1, typename list2, typename pred&gt;
</span><span class='line'>    struct apply&lt;list1, list2, 2, pred&gt;: bool_&lt;true&gt;
</span><span class='line'>    {};
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename list1, typename list2, typename pred = lambda&lt;std::is_same&gt;&gt;
</span><span class='line'>struct equal : equal_t::template apply&lt;list1, list2,
</span><span class='line'>    (is_empty&lt;list1&gt;::value + is_empty&lt;list2&gt;::value), pred&gt;::type
</span><span class='line'>{};</span></code></pre></td></tr></table></div></figure>


<p><code>equal</code>的实现也有点复杂。</p>

<ul>
<li><code>pred</code>是等价比较谓词，默认是使用<code>std::is_same</code>来做比较；</li>
<li>关键部分依然是通过<code>std::conditional</code>来实现的；</li>
<li>第一参数是判断两个列表的<code>head</code>是否相等；</li>
<li>如果不等就返回第二参数；</li>
<li>如果相等就递归比较两个列表的剩余元素；</li>
<li>这里使用了一个小小的技巧来简化模板类特化的情况：如果其中一个列表为空，那么<code>empty_value</code>为1；如果两个列表均为空，那么<code>empty_value</code>为2，这两种情况都会调用特化版本。</li>
</ul>


<p>使用示例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>using e1 = list&lt;int, 1, 2, 3&gt;;
</span><span class='line'>using e2 = list&lt;int, 1, 2, 3&gt;;
</span><span class='line'>using e3 = list&lt;int, 1, 2, 1&gt;;
</span><span class='line'>std::cout &lt;&lt; "equal&lt;e1, e2&gt; : " &lt;&lt; equal&lt;e1, e2&gt;::value &lt;&lt; std::endl;   // 1
</span><span class='line'>std::cout &lt;&lt; "equal&lt;e1, e3&gt; : " &lt;&lt; equal&lt;e1, e3&gt;::value &lt;&lt; std::endl;   // 0
</span><span class='line'>std::cout &lt;&lt; "equal&lt;e1, list&lt;int&gt;&gt; : " &lt;&lt; equal&lt;e1, list&lt;int&gt;&gt;::value &lt;&lt; std::endl; // 0
</span><span class='line'>std::cout &lt;&lt; "equal&lt;list&lt;int&gt;, e1&gt; : " &lt;&lt; equal&lt;list&lt;int&gt;, e1&gt;::value &lt;&lt; std::endl; // 0
</span><span class='line'>std::cout &lt;&lt; "equal&lt;list&lt;int&gt;, list&lt;int&gt;&gt; : " &lt;&lt; equal&lt;list&lt;int&gt;, list&lt;int&gt;&gt;::value &lt;&lt; std::endl;   // 1</span></code></pre></td></tr></table></div></figure>


<h3>print的实现</h3>

<p><code>print</code>是依次打印列表元素，也可以使用<code>enumerate</code>来实现：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>template &lt;typename list, bool is_empty&gt;
</span><span class='line'>struct print_t;
</span><span class='line'>
</span><span class='line'>template &lt;typename list&gt;
</span><span class='line'>void print()
</span><span class='line'>{
</span><span class='line'>    print_t&lt;list, is_empty&lt;list&gt;::value&gt; impl;
</span><span class='line'>    impl();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>template &lt;typename list, bool is_empty = true&gt;
</span><span class='line'>struct print_t
</span><span class='line'>{
</span><span class='line'>    void operator()() {
</span><span class='line'>        std::cout &lt;&lt; std::endl;
</span><span class='line'>    }
</span><span class='line'>};
</span><span class='line'>
</span><span class='line'>template &lt;typename list&gt;
</span><span class='line'>struct print_t&lt;list, false&gt;
</span><span class='line'>{
</span><span class='line'>    void operator()() {
</span><span class='line'>        std::cout &lt;&lt; car&lt;list&gt;::value;
</span><span class='line'>        using rest = typename cdr&lt;list&gt;::type;
</span><span class='line'>        if (false == is_empty&lt;rest&gt;::value) {
</span><span class='line'>            std::cout &lt;&lt; ", ";
</span><span class='line'>        }
</span><span class='line'>        print&lt;rest&gt;();
</span><span class='line'>    }
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p><code>print</code>的实现思路与<code>enumerate</code>，是通过模板方法与函数子来实现的。模板方法内部调用函数子来做事情，函数子又是一个模板类，并对空列表做了特化处理。</p>

<h2>总结</h2>

<p><code>C++</code>尤其是<code>C++</code>11，14，17等新特性使得这把实用的瑞士军刀越发锋利与实用，虽然实现的形式上不如<code>Scheme</code>、<code>Python</code>等优雅，但它确实能够，而且无需获得语言层面上的支持。纸上得来终觉浅，绝知此事要躬行。看过本文的读者不妨自己实现一番本文中的提到的相关概念。</p>

<h3>参考阅读</h3>

<p><a href="https://book.douban.com/subject/1148282/">《计算机程序的构造与解释》</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2016年阅读统计]]></title>
    <link href="http://luozhaohui.github.io/blog/2017/01/01/reading/"/>
    <updated>2017-01-01T05:42:38+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2017/01/01/reading</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>2016年又即将过去了，这一年阅读时间相比往年少了许多，总计只阅读了 46 本书，评价以四星、五星图书为主，主题以历史、编程、育儿为主。其中有几本是重读，如《万历十五年》、《论美国的民主》、《士与中国文化》、《COM本质论》等。</p>

<h2>2016年阅读统计，本页面由代码自动生成</h2>

<h2>总计阅读 46 本</h2>

<h3>评价统计:</h3>

<p><img src="https://i.imgur.com/553cdL2.png" alt="评价统计" /></p>

<blockquote><p>五星图书 14 本，占比 30.4%<br/>
四星图书 25 本，占比 54.3%<br/>
三星图书 6 本，占比 13.0%<br/>
两星图书 1 本，占比 2.2%</p></blockquote>

<!--more-->


<h3>标签统计:</h3>

<p><img src="https://i.imgur.com/WppBj6Y.png" alt="标签统计" /></p>

<blockquote><p>历史 10 本<br/>
软件开发 9 本<br/>
教育 7 本<br/>
科学 4 本<br/>
管理 4 本<br/>
思维 3 本<br/>
文学 2 本<br/>
政治 2 本<br/>
心理 2 本<br/>
商业 1 本<br/>
社会 1 本<br/>
哲学 1 本</p></blockquote>

<h3>历史: 10 本</h3>

<h4>No.1 万历十五年（增订本）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1981042/">万历十五年（增订本）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1981042/">https://book.douban.com/subject/1981042/</a><br/>
出版信息：[美] 黄仁宇 / 中华书局 / 2007-1 / 18.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：通过解读明末六个上层人物的故事，设计政治、军事、文化、经济等多方面，让我们了解那个时代官场的运作方式，明白中国道德官僚体制的缺陷。</p></blockquote>

<h4>No.2 中国近百年政治史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10532831/">中国近百年政治史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10532831/">https://book.douban.com/subject/10532831/</a><br/>
出版信息：李剑农 / 商务印书馆 / 2011-11-1 / 45.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：1840~1926年近百年政治史，作者是很多事件的亲历者，学贯中西，详细阐述了各个时段中的重大事件及其影响，思路清晰明了，文笔有趣有料。</p></blockquote>

<h4>No.3 大动乱的年代</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1659807/">大动乱的年代</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1659807/">https://book.douban.com/subject/1659807/</a><br/>
出版信息：王年一 / 河南人民出版社 / 2004-6 / 320.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：比较少见的先允许出版再到变成禁书的书籍。</p></blockquote>

<h4>No.4 剑桥中国隋唐史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1014192/">剑桥中国隋唐史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1014192/">https://book.douban.com/subject/1014192/</a><br/>
出版信息：(英) 崔瑞德 (Twitchett Denis)、(美) 费正清、(英)鲁惟 (Loewe Michael) / 中国社会科学院历史研究所西方汉学研究课题组 / 中国社会科学出版社 / 1990-12 / 76.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：隋唐可以说都是西北贵族建立的天下，隋的悲剧在于执着打高丽，唐的悲剧在边疆强敌林立不得不重兵把守，以致中央式微，藩镇坐大，节度使失控。</p></blockquote>

<h4>No.5 剑桥中国秦汉史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1253638/">剑桥中国秦汉史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1253638/">https://book.douban.com/subject/1253638/</a><br/>
出版信息：(英)崔瑞德、(英)鲁惟一 / 杨品泉 / 中国社会科学出版社 / 1992-2-1 / 96.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：以西方框架史观来分析中国历史，比中国传统的帝王将相道德中心史观更加宏大与全面，考证并去除史籍中虚大的内容，全面探讨政、军、外交、经、思想、宗教方面的内容。</p></blockquote>

<h4>No.6 叫魂</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25912076/">叫魂</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25912076/">https://book.douban.com/subject/25912076/</a><br/>
出版信息：孔飞力 (Philip A.Kuhn) / 陈兼、刘昶 / 生活·读书·新知三联书店 上海三联书店 / 2014-6 / 38.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：框架历史观，最后一章以及译后记的诠释与分析非常到位。</p></blockquote>

<h4>No.7 东大爸爸写给我的日本史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26612919/">东大爸爸写给我的日本史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26612919/">https://book.douban.com/subject/26612919/</a><br/>
出版信息：[日]小岛毅 / 王筱玲 / 北京联合出版公司·后浪出版公司 / 2015-10 / 32.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：不仅仅是史料与分析，更讲述思辨批判的历史观。作为日本史料入门还是不错的，玩《太阁立志传》时也不至于傻傻地没半点背景了。</p></blockquote>

<h4>No.8 何以中国</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25850080/">何以中国</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25850080/">https://book.douban.com/subject/25850080/</a><br/>
出版信息：许宏 / 生活·读书·新知三联书店 / 2014-3-1 / CNY 28.00<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：以考古挖掘资料为依据来推测公元两千年前夏以及商早期的社会形态，打破了教科书中统一强势的夏王朝形象．上古时期的华夏大地不过是傍水傍铜盐资源的一些国家联盟，夏或商或周王朝只是较大较强的盟主．洛阳盆地的二里头文化已经初具国家雏形，并且华夏文化基于礼的秩序根基也已初步形成．</p></blockquote>

<h4>No.9 上帝与黄金</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26260335/">上帝与黄金</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26260335/">https://book.douban.com/subject/26260335/</a><br/>
出版信息：沃尔特•拉塞尔•米德 (Walter Russell Mead) / 涂怡超、罗怡清 / 社会科学文献出版社·甲骨文 / 2014-12 / 69.00<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：历史部分写得很不错，需要庞大的欧洲以及美国历史储备．论证过程不过严谨，所以最后一章的结论来得有点突兀．所谓历史的终极就是一个传统&amp;宗教&amp;理性的混合体积极拥抱变化，这三结合的保守进步主义相信变革且一直向上，也就无所谓终结与否了，一致都在前进路上．</p></blockquote>

<h4>No.10 秩序的沦陷</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26392829/">秩序的沦陷</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26392829/">https://book.douban.com/subject/26392829/</a><br/>
出版信息：卜正民 / 潘敏 / 商务印书馆 / 2015-10-1 / CNY 29.00<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：除了黑白两个极端，中间自然大部分都是灰色地带，诚然国共双方都有意忽略这个地带。但中国沦陷区的情况与法国投降区的情况性质是不同的，合作对于维希政府来说事实，但当时正统的国民政府依然存在，依然在抗日。刀架在脖子上的合作不是合作，虽然作者和译者都认为合作这个词没有表达出西方那种贬义来，用勾结又过了点。书中虽不乏独特的见解，但明显有硬套发生在法国的模式的嫌疑，在丛林中往下看灌木丛，与在沙漠中往下看是不一样的。</p></blockquote>

<h3>软件开发: 9 本</h3>

<h4>No.11 现代操作系统（第3版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3852290/">现代操作系统（第3版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3852290/">https://book.douban.com/subject/3852290/</a><br/>
出版信息：Andrew S. Tanenbaum / 陈向群、马洪兵 / 机械工业出版社 / 2009-7 / 75.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：概念讲解得非常到位，比如说讲消费者&amp;生产者模型，讲银行间算法等，有图有代码。最后还分别介绍linux、windows、symbian系统，但symbian已经不再了。</p></blockquote>

<h4>No.12 世界是数字的</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24749903/">世界是数字的</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24749903/">https://book.douban.com/subject/24749903/</a><br/>
出版信息：[美] Brian W. Kernighan / 李松峰、徐建刚 / 人民邮电出版社 / 2013-6 / 49.00<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：计算机知识扫盲入门科普书，非计算机专业或文科生必读。讲述硬件、软件、操作系统、编程、网络、人工智能等多个领域的基本概念。</p></blockquote>

<h4>No.13 通灵芯片</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3423021/">通灵芯片</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3423021/">https://book.douban.com/subject/3423021/</a><br/>
出版信息：Daniel Hillis / 崔良沂 / 上海世纪出版集团 / 2009-1 / 19.80元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：一本能够深入浅出地介绍计算机&amp;软件工作原理的简短科普书籍。高屋建瓴式的概括，既不失深度，又妙趣横生。现在的计算机本质上一切都是计算以及分层求解，未来的计算机软件或说人工智能应该能够自适应自组织地演化。</p></blockquote>

<h4>No.14 代码的未来</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24536403/">代码的未来</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24536403/">https://book.douban.com/subject/24536403/</a><br/>
出版信息：[日] 松本行弘 / 周自恒 / 人民邮电出版社 / 2013-6 / 79.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：中文名有点哗众取宠，这是作者在技术的剖析专栏的合集，看看高手对各种技术的见解，可拓宽知识面，增进对各种技术的认识。</p></blockquote>

<h4>No.15 STL源码剖析</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1110934/">STL源码剖析</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1110934/">https://book.douban.com/subject/1110934/</a><br/>
出版信息：侯捷 / 华中科技大学出版社 / 2002-6 / 68.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：源码剖析所以源码篇幅占了很大一部分，对一些数据机构的算法分析很到位，模板妙用除了traits并无太多出众的地方，CPP码农还是推荐看看。</p></blockquote>

<h4>No.16 COM本质论</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1231481/">COM本质论</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1231481/">https://book.douban.com/subject/1231481/</a><br/>
出版信息：[美] Don Box / 潘爱民 / 中国电力出版社 / 2001-8 / 49.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：了解COM的设计思想，曾经为二进制兼容而付出的努力。</p></blockquote>

<h4>No.17 深入理解Android内核设计思想</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25921329/">深入理解Android内核设计思想</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25921329/">https://book.douban.com/subject/25921329/</a><br/>
出版信息：林学森 / 人民邮电出版社 / 2014-5-1 / 108.00<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：书名起的有点大，内容其实一些基础与源码分析，作者善用比喻，总体来说算是一本还不错的源码分析。</p></blockquote>

<h4>No.18 深入Java虚拟机(原书第2版)</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1138768/">深入Java虚拟机(原书第2版)</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1138768/">https://book.douban.com/subject/1138768/</a><br/>
出版信息：（美）文纳斯 / 曹晓钢、蒋靖 / 机械工业出版社 / 2003-9 / 58.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：虽然有点老，讲JVM架构这方面的书真心不太多，这本十多年前的书依然是了解JVM不二之选。书中从平台无关、安全以及网络移动性三个方面考量JVM的设计与架构，后面十章是JVM指令的介绍，可作手册，精华在前九章：设计考量（相当于《C++设计与演化》），class格式及其装载、解析，符号链接，垃圾回收策略等等。</p></blockquote>

<h4>No.19 深入解析Android 5.0系统</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26377840/">深入解析Android 5.0系统</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26377840/">https://book.douban.com/subject/26377840/</a><br/>
出版信息：刘超 / 人民邮电出版社 / 2015-4-1 / CNY 99.00<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：作者选择解析的源码不够全面，可能作者选择的是他最熟悉的吧，如果就当这本书算是源码解析方面的补漏还可以。</p></blockquote>

<h3>教育: 7 本</h3>

<h4>No.20 如何培养孩子的社会能力</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3909967/">如何培养孩子的社会能力</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3909967/">https://book.douban.com/subject/3909967/</a><br/>
出版信息：默娜·R.舒尔 / 张雪兰 / 京华 / 2009-8 / 22.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：碰到问题，引导孩子思考多种解决方案，并评估对应的后果，而不是替他解决问题。大概也就一两页纸的干货吧。</p></blockquote>

<h4>No.21 理解孩子的成长</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1912252/">理解孩子的成长</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1912252/">https://book.douban.com/subject/1912252/</a><br/>
出版信息：[英] 彼得·史密斯、[英] 海伦·考伊、[英] 马克·布莱兹 / 寇彧 等 / 人民邮电出版社 / 2006-9 / 68.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：本书专注儿童身体、认知、心智、社交发展与成长，综述许多著名实验与儿童发展流派，专业性较强，内容广而全。</p></blockquote>

<h4>No.22 孩子：挑战</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26304087/">孩子：挑战</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26304087/">https://book.douban.com/subject/26304087/</a><br/>
出版信息：【美】鲁道夫·德雷克斯、【美】薇姬·索尔兹 / 甄颖 / 生活·读书·新知三联书店 生活书店出版有限公司 / 2015-1-1 / 48.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：在民主的理念下与孩子相处，依然不外乎“温柔而坚定”的原则。</p></blockquote>

<h4>No.23 不能错过的英语启蒙</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6523827/">不能错过的英语启蒙</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6523827/">https://book.douban.com/subject/6523827/</a><br/>
出版信息：安妮鲜花 / 外语教学与研究出版社 / 2011-5 / 39.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：作者推崇自然拼读法，先用动画片、儿歌、绘本阅读培养语感，然后学习拼读，然后阅读。以音为着重点，同级别大量常见生活场景内容的阅读为手段，培养对阅读的兴趣。方法确实可取</p></blockquote>

<h4>No.24 正面管教</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3420606/">正面管教</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3420606/">https://book.douban.com/subject/3420606/</a><br/>
出版信息：[美] 简·尼尔森 (Jane Nelsen) / 玉冰 / 京华出版社 / 2009-1 / 29.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：育儿先育己：怎么可能先让孩子感觉很糟，却期待孩子变得更好。所以要优先照顾情绪：是为和善，要让孩子变得更好呢又需要坚定：授权、试错。承担自然后果，和善而坚定结合起来才能培养出自律、责任感、合作以及自己解决问题的能力。</p></blockquote>

<h4>No.25 农民进城防骗手册</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1929825/">农民进城防骗手册</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1929825/">https://book.douban.com/subject/1929825/</a><br/>
出版信息：蔡建文、马文胜 / 湖南人民出版社 / 2006-8 / 13.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：谨记：莫贪小便宜，天下没有免费的午餐。</p></blockquote>

<h4>No.26 培养高情商的孩子</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25834256/">培养高情商的孩子</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25834256/">https://book.douban.com/subject/25834256/</a><br/>
出版信息：约翰 戈特曼 / 付瑞娟 / 浙江人民出版社 / 2014-2-1 / CNY 46.90<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：情绪优先，有点拼凑的感觉。不如其他几本如《父母效能训练手册》等。</p></blockquote>

<h3>科学: 4 本</h3>

<h4>No.27 众病之王</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/20507206/">众病之王</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/20507206/">https://book.douban.com/subject/20507206/</a><br/>
出版信息：[美] 悉达多·穆克吉 / 李虎 / 中信出版社 / 2013-2-4 / 42.00元<br/>
标签：科学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：中信难得出一本翻译得不错的好书。这本书从癌症这个话题切入，从发现它，到认识它了解它；从试错法治疗，到科学地验证治疗；从局限于病人医生，到正确政府支持，再到大众宣传；从治疗到预防。横跨科技、人文、方法论、政治、宣传、社会学多个领域。与疾病的斗争不仅仅是技术问题，还是科学问题、哲学问题、伦理问题和社会政治问题。作者的文笔构思非常好，字里行间散发着深深的人文关怀，这本书之所以好，这两点功不可没。</p></blockquote>

<h4>No.28 我们为什么生病</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1046620/">我们为什么生病</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1046620/">https://book.douban.com/subject/1046620/</a><br/>
出版信息：[美] R.M.尼斯、[美] G.C.威廉斯 / 易凡、禹宽平 / 湖南科学技术出版社 / 1998-01 / 16.50元<br/>
标签：科学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：新达尔文医学观：从演化观点看待医学！生病与衰老是一种演化适应。可以《基因组》结合着看。超赞！</p></blockquote>

<h4>No.29 基因组</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26281143/">基因组</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26281143/">https://book.douban.com/subject/26281143/</a><br/>
出版信息：马特·里德利 / 刘菁 / 湖南科学技术出版社 / 2014-11-1 / 38<br/>
标签：科学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：这是一本比较全面、新颖、引人深思的书籍。相比《自私的基因》那种宏大概括的叙事方式，更注重个别基因这个微观层面的故事。全书选取与我们密切相关的一些基因探讨了：生命、物种、疾病、环境、智力、死亡、性别、压力、个性、死亡、基因疗法、政治、自由意志等科学的，哲学的，社会的，政治的，伦理的问题。</p></blockquote>

<h4>No.30 科学革命的结构</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/20376550/">科学革命的结构</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/20376550/">https://book.douban.com/subject/20376550/</a><br/>
出版信息：[美]托马斯·库恩、[美]伊安·哈金 (导读) / 金吾伦、胡新和 / 北京大学出版社 / 2012-11 / 29.00元<br/>
标签：科学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：科学革命是跳跃式的，是范式的新旧替代，亦是世界观的变革，而非教科书中暗示的累积式进步。说某个领域的科学已经成熟其实是指某种范式获得了那个领域中科学共同体的认同与维护。</p></blockquote>

<h3>管理: 4 本</h3>

<h4>No.31 权力与领导（第5版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26288194/">权力与领导（第5版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26288194/">https://book.douban.com/subject/26288194/</a><br/>
出版信息：[美]詹姆斯·克劳森（James G. Clawson） / 马昕 / 世界图书出版公司·后浪出版公司 / 2015-2 / 52.00元<br/>
标签：管理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：领导就是管理能量，首先是管理你自己的能量，然后管理周围人的能量。具体来说是要根据愿景建立战略任务、设计合适的组织、影响他人去达成任务。有三个层次的领导：行为、思想、VABE(价值观、假设、信念、期望)。第三层次的领导是最为持久与固化的。OK，以上书中的主干内容。这本书是集心理、管理、生理之大成的经典，书中综合大量管理、心理学方面的书籍的观点，如：《从优秀到卓越》、《高效能人士的七个习惯》、《第五项修炼》、《少有人走的路》等等。无论是个人（自我领导）还是组织（组织领导）都值得阅读。</p></blockquote>

<h4>No.32 横向领导力</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26641761/">横向领导力</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26641761/">https://book.douban.com/subject/26641761/</a><br/>
出版信息：[美]罗杰·费希尔（Roger Fisher）、艾伦·夏普（Alan Sharp） / 刘清山 / 北京联合出版公司·后浪出版公司 / 2015-11 / 32.00元<br/>
标签：管理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：任何人都是潜在的领导者，在一个组织中发挥领导作用的人不论是否有职位就是实际上的领导者，因此下级也可以领导或影响上级。</p></blockquote>

<h4>No.33 领导力</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/20492915/">领导力</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/20492915/">https://book.douban.com/subject/20492915/</a><br/>
出版信息：[美]詹姆斯·M.库泽斯、[美]巴里·Z.波斯纳 / 徐中、周政、王俊杰 / 电子工业出版社 / 2013-1 / 48.00元<br/>
标签：管理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：有点快餐的味道，深度与广度都不及《权力与领导》，优点在通俗易懂，挺多令人深省的妙句。书中用精炼出领导的五个关键原则：以身作则、共启愿景、挑战现状、使众人行、激励人心 。如果用一句话就是：领导是一种关系，这个关系不是中国式管理中的权术或操纵关系，而是真诚&amp;共赢理念下的人际关系。</p></blockquote>

<h4>No.34 成为技术领导者</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26419762/">成为技术领导者</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26419762/">https://book.douban.com/subject/26419762/</a><br/>
出版信息：Gerald M. Weinberg / 余晟 / 电子工业出版社 / 2015-7 / 69.00元<br/>
标签：管理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：盛名在外其实不符。内容短短，观点平平，价格高高。</p></blockquote>

<h3>思维: 3 本</h3>

<h4>No.35 心理定向与成功</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2309200/">心理定向与成功</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2309200/">https://book.douban.com/subject/2309200/</a><br/>
出版信息：卡罗尔·德韦克 / 王成全 / 人民邮电出版社 / 2007-12 / 29.90元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：本书另有中信译本《看见成长的自己》，成长式思维VS僵固式思维，非常正三观，越早读到这本书越有益。以发展的眼光来看待自己与周边的一切，而不是把自己或他人贴上固化的标签。成长是硬道理！</p></blockquote>

<h4>No.36 看见成长的自己</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6510688/">看见成长的自己</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6510688/">https://book.douban.com/subject/6510688/</a><br/>
出版信息：卡罗尔·徳韦克 / 杨百彦、乔慧存、杨馨 / 中信出版社 / 2011-6 / 29.80元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：成长式思维VS僵固式思维，非常正三观，越早读到这本书越有益。以发展的眼光来看待自己与周边的一切，而不是把自己或他人贴上固化的标签。成长是硬道理！</p></blockquote>

<h4>No.37 最好的告别</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26576861/">最好的告别</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26576861/">https://book.douban.com/subject/26576861/</a><br/>
出版信息：[美] 阿图·葛文德（Atul Gawande） / 彭小华 / 浙江人民出版社 / 2015-7-31 / 49.90<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：生的愉悦与死的坦然都将成为生命圆满的标志。本书关注未来如何养老，是在疗养院或医院中行尸走肉般活着还是有意义有尊严地死去。畅销书特质，几句话能表达的事情。</p></blockquote>

<h3>文学: 2 本</h3>

<h4>No.38 白鹿原</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10564071/">白鹿原</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10564071/">https://book.douban.com/subject/10564071/</a><br/>
出版信息：陈忠实 / 人民文学出版社 / 2012-9 / 39.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：这是一本乡土文化&amp;近代史书，写于80年代末，最后的文学黄金时期。看官看前要留心是不是删节版。</p></blockquote>

<h4>No.39 解忧杂货店</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25862578/">解忧杂货店</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25862578/">https://book.douban.com/subject/25862578/</a><br/>
出版信息：[日] 东野圭吾 / 李盈春 / 南海出版公司 / 2014-5 / 39.50元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：对东野圭吾笔下这种淡如水的推理小说真心不喜欢，虽然自成逻辑。</p></blockquote>

<h3>政治: 2 本</h3>

<h4>No.40 经济人的末日</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26378573/">经济人的末日</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26378573/">https://book.douban.com/subject/26378573/</a><br/>
出版信息：[美] 彼得·德鲁克 / 洪世民、赵志恒 / 上海译文出版社 / 2015-8<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：很多人都知道彼得.德鲁克是管理大师，却少有人知道他也是敏锐的社会政治观察家与预言者。在这本出版于1939年的《经济人的末日：极权主义的起源》小册子里，他详细分析了是什么导致了德意的极权主义（旧秩序的崩溃&amp;新秩序的缺失，大众的绝望），极权主义控制下的社会形态是什么样（非经济人社会，希望寄托于非理性的奇迹），以及如何战胜这股非理性混乱（在现有的经济社会基础上，发展出一个新的、自由平等的非经济社会）。德鲁克敏锐地预见了苏德同盟瓜分波兰，以及法西斯与法英美的大战。</p></blockquote>

<h4>No.41 论美国的民主</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1041385/">论美国的民主</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1041385/">https://book.douban.com/subject/1041385/</a><br/>
出版信息：(法)托克维尔 / 董果良 / 商务印书馆 / 1989-1 / 60.00<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：董译信达雅，大赞！要想了解美国的立国之本以及政治体制，上卷是不二选择。美国式民主得益于得天独厚的地理环境，制衡的法制以及深入骨髓的自治自由精神。乡镇自治与联邦政府分权而至，前者是自由精神的源泉，后者是强大的物质保证。</p></blockquote>

<h3>心理: 2 本</h3>

<h4>No.42 天生敏感</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25858882/">天生敏感</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25858882/">https://book.douban.com/subject/25858882/</a><br/>
出版信息：伊莱恩· 阿伦 / 于娟娟 / 华夏出版社 / 2014-1 / 36.8<br/>
标签：心理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：理解天生敏感的人，敏感特质是遗传性的。敏感的人在生活中会注意到超多的细节，很多时候这些细节属于80%的噪音类，而他们无法过滤掉。他们被这些细节困扰，也不被不敏感的人理解，导致敏感的人容易缺乏安全感与抑郁。而敏感其实是把双刃剑，敏感人可以向内-心灵寻求帮助与发展。不敏感人的阅读此书可以更好地理解敏感的人，从而更好地与他们相处。</p></blockquote>

<h4>No.43 心智的构建</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10864488/">心智的构建</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10864488/">https://book.douban.com/subject/10864488/</a><br/>
出版信息：[英] Chris Frith / 杨南昌 / 华东师范大学出版社 / 2012-7 / 32.00元<br/>
标签：心理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：眼见并不为实。富有创造性的脑利用外界的信息构建关于物质世界与他人心智的模型，当我们与外界交互时，脑根据这些模型来预测接下来会发生什么。如果预测准确，那么累积经验强化模型；如果预测不准确，那么根据反馈改善模型。这个遵循贝叶斯定律的脑活动过程往往是下意识的。这就是我们脑构建心智与完善心智的过程。</p></blockquote>

<h3>商业: 1 本</h3>

<h4>No.44 用户体验要素</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6523997/">用户体验要素</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6523997/">https://book.douban.com/subject/6523997/</a><br/>
出版信息：Jesse James Garrett / 范晓燕 / 机械工业出版社 / 2011-7-1 / 39.00元<br/>
标签：商业&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：以用户为中心的产品设计理念。战略层面关注用户需求与产品目标，框架层面关注用户在使用场景中的行为，实现层面关注用户的感知体念。用五层十要素讲述功能性与信息型网站的设计理念与要素。</p></blockquote>

<h3>社会: 1 本</h3>

<h4>No.45 中国文化的深层结构</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1068912/">中国文化的深层结构</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1068912/">https://book.douban.com/subject/1068912/</a><br/>
出版信息：孙隆基 / 广西师范大学出版社 / 2011-6 / 49.80元<br/>
标签：社会&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：观点五星,结构&amp;推理三星.对传统中国社会文化层面上的总结很精辟,确实做到了深这个程度,但结构散乱,重复啰嗦,一些论据过于牵强.很明显作者受到中共特殊的"心"的照顾,正所谓拿人手短.</p></blockquote>

<h3>哲学: 1 本</h3>

<h4>No.46 士与中国文化</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1016864/">士与中国文化</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1016864/">https://book.douban.com/subject/1016864/</a><br/>
出版信息：余英时 / 上海人民出版社 / 2003-01 / 63.00元<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：这是余英时的文集，但大体上可由“士”这根绳串起来，仅仅确实隋唐以及科举部分。士起源于低级贵族，春秋战国从王官之学到“天下裂”，下层贵族与庶民流动融合，孔子的巨大影响之下，士遂专为文士。士在战国抗争的背景下收到追捧，齐国的“稷下”制度达到顶峰，树立了道高于政的理念。随后大一统政府的控制下，道统渐弱。汉初朝廷尊黄老，体制从秦制（儒表法里），循吏从儒（以吏为师，先富后教）。到魏晋，士不再是战国时的游士而豪族门第，在精神上也走向标新立异的清谈玄理之风。到宋明，新儒家受佛教影响，弥补形而上而成理学、心学，而商业的发达，四民重新异业同道：士魂商才。</p></blockquote>

<h2>私人阅读年度统计：</h2>

<ul>
<li><a href="https://luozhaohui.github.io/blog/2018/01/01/reading/">2017，37本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2017/01/01/reading/">2016，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2016/01/01/reading/">2015，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2015/01/01/reading/">2014，65本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2014/01/01/reading/">2013，33本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2013/01/01/reading/">2012，43本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2012/01/01/reading/">2011，41本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2011/01/01/reading/">2010，47本</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android5 Zygote 与 SystemServer 启动流程分析]]></title>
    <link href="http://luozhaohui.github.io/blog/2016/02/25/android-zygote-server/"/>
    <updated>2016-02-25T22:13:20+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2016/02/25/android-zygote-server</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p><code>Android5.0.1</code> 的启动流程与之前的版本相比变化并不大，OK，变化虽然还是有：<code>SystemServer</code> 启动过程的 <code>init1()</code>, <code>init2()</code>没有了，但主干流程依然不变：<code>Linux</code> 内核加载完毕之后，首先启动 <code>init</code> 进程，然后解析 <code>init.rc</code>，并根据其内容由 <code>init</code> 进程装载 <code>Android</code> 文件系统、创建系统目录、初始化属性系统、启动一些守护进程，其中最重要的守护进程就是 <code>Zygote</code> 进程。<code>Zygote</code> 进程初始化时会创建 <code>Dalvik</code> 虚拟机、预装载系统的资源和 <code>Java</code> 类。所有从 <code>Zygote</code> 进程 <code>fork</code> 出来的用户进程都将继承和共享这些预加载的资源。<code>init</code> 进程是 <code>Android</code> 的第一个进程，而 <code>Zygote</code> 进程则是所有用户进程的根进程。<code>SystemServer</code> 是 <code>Zygote</code> 进程 <code>fork</code> 出的第一个进程，也是整个 <code>Android</code> 系统的核心进程。</p>

<!--more-->


<h2>zygote 进程</h2>

<h3>解析 zygote.rc</h3>

<p>在文件中 /system/core/rootdir/init.rc 中包含了 zygote.rc:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import /init.${ro.zygote}.rc</span></code></pre></td></tr></table></div></figure>


<p><code>${ro.zygote}</code>是平台相关的参数，实际可对应到 <code>init.zygote32.rc</code>， <code>init.zygote64.rc</code>， <code>init.zygote64_32.rc</code>， <code>init.zygote32_64.rc</code>，前两个只会启动单一<code>app_process(64)</code> 进程，而后两个则会启动两个<code>app_process</code>进程：第二个<code>app_process</code>进程称为 <code>secondary</code>，在后面的代码中可以看到相应 <code>secondary socket</code> 的创建过程。为简化起见，在这里就不考虑这种创建两个<code>app_process</code>进程的情形。</p>

<p>以 <code>/system/core/rootdir/init.zygote32.rc</code> 为例：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
</span><span class='line'>class main
</span><span class='line'>socket zygote stream 660 root system
</span><span class='line'>onrestart write /sys/android_power/request_state wake
</span><span class='line'>onrestart write /sys/power/state on
</span><span class='line'>onrestart restart media
</span><span class='line'>onrestart restart netd</span></code></pre></td></tr></table></div></figure>


<p>第一行创建了名为 <code>zygote</code> 的进程，这个进程是通过 <code>app_process</code> 的 <code>main</code> 启动并以<code>-Xzygote /system/bin &ndash;zygote &ndash;start-system-server</code>作为<code>main</code>的入口参数。</p>

<p><code>app_process</code> 对应代码为 <code>framework/base/cmds/app_process/app_main.cpp</code>。在这个文件的 <code>main</code> 函数中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">AppRuntime</span> <span class="nf">runtime</span><span class="o">(</span><span class="n">argv</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">computeArgBlockSize</span><span class="o">(</span><span class="n">argc</span><span class="o">,</span> <span class="n">argv</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">zygote</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">runtime</span><span class="o">.</span><span class="na">start</span><span class="o">(</span><span class="s">&quot;com.android.internal.os.ZygoteInit&quot;</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">className</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">runtime</span><span class="o">.</span><span class="na">start</span><span class="o">(</span><span class="s">&quot;com.android.internal.os.RuntimeInit&quot;</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>根据入口参数，我们知道 <code>zygote</code> 为<code>true</code>，<code>args</code>参数中包含了<code>&ldquo;start-system-server&rdquo;</code>。</p>

<p><code>AppRuntime</code> 继承自 <code>AndroidRuntime</code>，因此下一步就执行到 <code>AndroidRuntime</code> 的 <code>start</code> 函数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">void</span> <span class="nl">AndroidRuntime:</span><span class="o">:</span><span class="n">start</span><span class="o">(</span><span class="kd">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">className</span><span class="o">,</span> <span class="kd">const</span> <span class="n">Vector</span><span class="o">&lt;</span><span class="n">String8</span><span class="o">&gt;&amp;</span> <span class="n">options</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="cm">/* start the virtual machine */</span> <span class="c1">// 创建虚拟机</span>
</span><span class='line'>    <span class="n">JniInvocation</span> <span class="n">jni_invocation</span><span class="o">;</span>
</span><span class='line'>    <span class="n">jni_invocation</span><span class="o">.</span><span class="na">Init</span><span class="o">(</span><span class="n">NULL</span><span class="o">);</span>
</span><span class='line'>    <span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">startVm</span><span class="o">(&amp;</span><span class="n">mJavaVM</span><span class="o">,</span> <span class="o">&amp;</span><span class="n">env</span><span class="o">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">onVmCreated</span><span class="o">(</span><span class="n">env</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="c1">//调用className对应类的静态main()函数</span>
</span><span class='line'>    <span class="kt">char</span><span class="o">*</span> <span class="n">slashClassName</span> <span class="o">=</span> <span class="n">toSlashClassName</span><span class="o">(</span><span class="n">className</span><span class="o">);</span>
</span><span class='line'>    <span class="n">jclass</span> <span class="n">startClass</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="o">(</span><span class="n">slashClassName</span><span class="o">);</span>
</span><span class='line'>    <span class="n">jmethodID</span> <span class="n">startMeth</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">GetStaticMethodID</span><span class="o">(</span><span class="n">startClass</span><span class="o">,</span> <span class="s">&quot;main&quot;</span><span class="o">,</span>
</span><span class='line'>    <span class="n">env</span><span class="o">-&gt;</span><span class="n">CallStaticVoidMethod</span><span class="o">(</span><span class="n">startClass</span><span class="o">,</span> <span class="n">startMeth</span><span class="o">,</span> <span class="n">strArray</span><span class="o">);</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>start</code>函数主要做两件事：创建虚拟机和调用传入类名对应类的 <code>main</code> 函数。因此下一步就执行到 <code>com.android.internal.os.ZygoteInit</code> 的 <code>main</code> 函数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">argv</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">boolean</span> <span class="n">startSystemServer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">socketName</span> <span class="o">=</span> <span class="s">&quot;zygote&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">argv</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="s">&quot;start-system-server&quot;</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">argv</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">startSystemServer</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="o">...</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">registerZygoteSocket</span><span class="o">(</span><span class="n">socketName</span><span class="o">);</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>        <span class="n">preload</span><span class="o">();</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">startSystemServer</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">startSystemServer</span><span class="o">(</span><span class="n">abiList</span><span class="o">,</span> <span class="n">socketName</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Accepting command socket connections&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">runSelectLoop</span><span class="o">(</span><span class="n">abiList</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">closeServerSocket</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MethodAndArgsCaller</span> <span class="n">caller</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">caller</span><span class="o">.</span><span class="na">run</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">RuntimeException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Zygote died with exception&quot;</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>        <span class="n">closeServerSocket</span><span class="o">();</span>
</span><span class='line'>        <span class="k">throw</span> <span class="n">ex</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>它主要做了三件事情:
1. 调用 <code>registerZygoteSocket</code> 函数创建了一个 <code>socket</code> 接口，用来和 <code>ActivityManagerService</code> 通讯；
2. 调用 <code>startSystemServer</code> 函数来启动 <code>SystemServer</code>;
3. 调用 <code>runSelectLoop</code> 函数进入一个无限循环在前面创建的 <code>socket</code> 接口上等待 <code>ActivityManagerService</code> 请求创建新的应用程序进程。</p>

<p>这里要留意 <code>catch (MethodAndArgsCaller caller)</code> 这一行，<code>android</code> 在这里通过抛出一个异常来处理正常的业务逻辑。</p>

<h3>创建 zygote socket</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">ANDROID_SOCKET_PREFIX</span> <span class="o">=</span> <span class="s">&quot;ANDROID_SOCKET_&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">registerZygoteSocket</span><span class="o">(</span><span class="n">String</span> <span class="n">socketName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">sServerSocket</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">fileDesc</span><span class="o">;</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">String</span> <span class="n">fullSocketName</span> <span class="o">=</span> <span class="n">ANDROID_SOCKET_PREFIX</span> <span class="o">+</span> <span class="n">socketName</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">env</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="n">fullSocketName</span><span class="o">);</span>
</span><span class='line'>            <span class="n">fileDesc</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">env</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">RuntimeException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">fullSocketName</span> <span class="o">+</span> <span class="s">&quot; unset or invalid&quot;</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">sServerSocket</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">LocalServerSocket</span><span class="o">(</span>
</span><span class='line'>                    <span class="n">createFileDescriptor</span><span class="o">(</span><span class="n">fileDesc</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span>
</span><span class='line'>                    <span class="s">&quot;Error binding to local socket &#39;&quot;</span> <span class="o">+</span> <span class="n">fileDesc</span> <span class="o">+</span> <span class="s">&quot;&#39;&quot;</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在这里根据传入参数<code>&ldquo;zygote&rdquo;</code>拼成名为 <code>fullSocketName</code> 的<code>key</code>，该 <code>key</code> 的值为：<code>ANDROID_SOCKET_zygote</code>，然后查找它对应的环境变量值，解析该值得到文件描述符号，再根据该文件描述符创建 <code>socket</code>。那么这个文件描述符是什么地方创建并写到环境变量里去的呢？还记得前面 <code>init.zygote32.rc</code> 的第二行么？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">socket</span> <span class="n">zygote</span> <span class="n">stream</span> <span class="mi">660</span> <span class="n">root</span> <span class="n">system</span>
</span></code></pre></td></tr></table></div></figure>


<p>系统启动脚本文件 <code>init.rc</code> 是由 <code>init</code> 进程来解释执行的，而 <code>init</code> 进程的源代码位于 <code>system/core/init</code> 目录中，在 <code>init.c</code> 文件中，是由 <code>service_start</code> 函数来解释 <code>init.zygote32.rc</code> 文件中的 <code>service</code> 命令的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="nf">service_start</span><span class="p">(</span><span class="k">struct</span> <span class="n">service</span> <span class="o">*</span><span class="n">svc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">dynamic_args</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>    <span class="n">pid</span> <span class="o">=</span> <span class="n">fork</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">socketinfo</span> <span class="o">*</span><span class="n">si</span><span class="p">;</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">si</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">sockets</span><span class="p">;</span> <span class="n">si</span><span class="p">;</span> <span class="n">si</span> <span class="o">=</span> <span class="n">si</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">socket_type</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'>                    <span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">si</span><span class="o">-&gt;</span><span class="n">type</span><span class="p">,</span> <span class="s">&quot;stream&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="nl">SOCK_STREAM</span> <span class="p">:</span>
</span><span class='line'>                        <span class="p">(</span><span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">si</span><span class="o">-&gt;</span><span class="n">type</span><span class="p">,</span> <span class="s">&quot;dgram&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="nl">SOCK_DGRAM</span> <span class="p">:</span> <span class="n">SOCK_SEQPACKET</span><span class="p">));</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="n">create_socket</span><span class="p">(</span><span class="n">si</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">socket_type</span><span class="p">,</span>
</span><span class='line'>                                  <span class="n">si</span><span class="o">-&gt;</span><span class="n">perm</span><span class="p">,</span> <span class="n">si</span><span class="o">-&gt;</span><span class="n">uid</span><span class="p">,</span> <span class="n">si</span><span class="o">-&gt;</span><span class="n">gid</span><span class="p">,</span> <span class="n">si</span><span class="o">-&gt;</span><span class="n">socketcon</span> <span class="o">?:</span> <span class="n">scon</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">s</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">publish_socket</span><span class="p">(</span><span class="n">si</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>每一个 service 命令都会促使 init 进程调用 fork 函数来创建一个新的进程，在新的进程里面，会分析里面的 socket 选项，对于每一个 socket 选项，都会通过 <code>create_socket</code> 函数来在 <code>/dev/socket</code> 目录下创建一个文件，在 zygote 进程中 socket 选项为<code>socket zygote stream 660 root system</code>，因此这个文件便是 zygote了，然后得到的文件描述符通过 <code>publish_socket</code> 函数写入到环境变量中去：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">publish_socket</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">int</span> <span class="n">fd</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">key</span><span class="p">[</span><span class="mi">64</span><span class="p">]</span> <span class="o">=</span> <span class="n">ANDROID_SOCKET_ENV_PREFIX</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">val</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">strlcpy</span><span class="p">(</span><span class="n">key</span> <span class="o">+</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ANDROID_SOCKET_ENV_PREFIX</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>            <span class="n">name</span><span class="p">,</span>
</span><span class='line'>            <span class="k">sizeof</span><span class="p">(</span><span class="n">key</span><span class="p">)</span> <span class="o">-</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ANDROID_SOCKET_ENV_PREFIX</span><span class="p">));</span>
</span><span class='line'>    <span class="n">snprintf</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">val</span><span class="p">),</span> <span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">fd</span><span class="p">);</span>
</span><span class='line'>    <span class="n">add_environment</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">val</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* make sure we don&#39;t close-on-exec */</span>
</span><span class='line'>    <span class="n">fcntl</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">F_SETFD</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里传进来的参数name值为"zygote"，而 <code>ANDROID_SOCKET_ENV_PREFIX</code> 在 <code>system/core/include/cutils/sockets.h</code> 定义为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#define ANDROID_SOCKET_ENV_PREFIX   &quot;ANDROID_SOCKET_&quot;</span>
</span><span class='line'><span class="cp">#define ANDROID_SOCKET_DIR          &quot;/dev/socket&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>因此，这里就把上面得到的文件描述符写入到以 <code>ANDROID_SOCKET_zygote</code> 为 key 值的环境变量中。又因为上面的 <code>ZygoteInit.registerZygoteSocket</code> 函数与这里创建 socket 文件的 create_socket 函数是运行在同一个进程中，因此，上面的 <code>ZygoteInit.registerZygoteSocket</code> 函数可以直接使用这个文件描述符来创建一个 Java 层的 LocalServerSocket 对象。如果其它进程也需要打开这个 <code>/dev/socket/zygote</code> 文件来和 zygote 进程进行通信，那就必须要通过文件名来连接这个 LocalServerSocket了。也就是说创建 zygote socket 之后，ActivityManagerService 就能够通过该 socket 与 zygote 进程通信从而 fork 创建新进程，android 中的所有应用进程都是通过这种方式 fork zygote 进程创建的。在 ActivityManagerService中 的 <code>startProcessLocked</code> 中调用了 <code>Process.start()</code> 方法，进而调用 <code>Process.startViaZygote</code> 和 <code>Process.openZygoteSocketIfNeeded</code>。</p>

<h3>启动 SystemServer</h3>

<p>socket 创建完成之后，紧接着就通过 <code>startSystemServer</code> 函数来启动 <code>SystemServer</code> 进程。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">startSystemServer</span><span class="o">(</span><span class="n">String</span> <span class="n">abiList</span><span class="o">,</span> <span class="n">String</span> <span class="n">socketName</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">capabilities</span> <span class="o">=</span> <span class="n">posixCapabilitiesAsBits</span><span class="o">(</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_BLOCK_SUSPEND</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_KILL</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_NET_ADMIN</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_NET_BIND_SERVICE</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_NET_BROADCAST</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_NET_RAW</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_SYS_MODULE</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_SYS_NICE</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_SYS_RESOURCE</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_SYS_TIME</span><span class="o">,</span>
</span><span class='line'>        <span class="n">OsConstants</span><span class="o">.</span><span class="na">CAP_SYS_TTY_CONFIG</span>
</span><span class='line'>    <span class="o">);</span>
</span><span class='line'>    <span class="cm">/* Hardcoded command line to start the system server */</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">args</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>        <span class="s">&quot;--setuid=1000&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--setgid=1000&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1032,3001,3002,3003,3006,3007&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--capabilities=&quot;</span> <span class="o">+</span> <span class="n">capabilities</span> <span class="o">+</span> <span class="s">&quot;,&quot;</span> <span class="o">+</span> <span class="n">capabilities</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--runtime-init&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;--nice-name=system_server&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="s">&quot;com.android.server.SystemServer&quot;</span><span class="o">,</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>    <span class="n">ZygoteConnection</span><span class="o">.</span><span class="na">Arguments</span> <span class="n">parsedArgs</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">pid</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">parsedArgs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZygoteConnection</span><span class="o">.</span><span class="na">Arguments</span><span class="o">(</span><span class="n">args</span><span class="o">);</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* Request to fork the system server process */</span>
</span><span class='line'>        <span class="n">pid</span> <span class="o">=</span> <span class="n">Zygote</span><span class="o">.</span><span class="na">forkSystemServer</span><span class="o">(</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">uid</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gid</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gids</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">debugFlags</span><span class="o">,</span>
</span><span class='line'>                <span class="kc">null</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">permittedCapabilities</span><span class="o">,</span>
</span><span class='line'>                <span class="n">parsedArgs</span><span class="o">.</span><span class="na">effectiveCapabilities</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalArgumentException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">ex</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* For child process */</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">pid</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">hasSecondZygote</span><span class="o">(</span><span class="n">abiList</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">waitForSecondaryZygote</span><span class="o">(</span><span class="n">socketName</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">handleSystemServerProcess</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里我们可以从参数推测出：创建名为<code>“system_server"</code>的进程，其入口是： <code>com.android.server.SystemServer</code> 的 <code>main</code> 函数。<code>zygote</code> 进程通过 <code>Zygote.forkSystemServer</code> 函数来创建一个新的进程来启动 <code>SystemServer</code> 组件，返回值 <code>pid</code> 等 0 的地方就是新的进程要执行的路径，即新创建的进程会执行 <code>handleSystemServerProcess</code> 函数。<code>hasSecondZygote</code> 是针对 <code>init.zygote64_32.rc</code>， <code>init.zygote32_64.rc</code> 这两者情况的，在这里跳过不谈。接下来来看 <code>handleSystemServerProcess</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Finish remaining work for the newly forked system server process.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">handleSystemServerProcess</span><span class="o">(</span>
</span><span class='line'>        <span class="n">ZygoteConnection</span><span class="o">.</span><span class="na">Arguments</span> <span class="n">parsedArgs</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="n">closeServerSocket</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// set umask to 0077 so new files and directories will default to owner-only permissions.</span>
</span><span class='line'>    <span class="n">Os</span><span class="o">.</span><span class="na">umask</span><span class="o">(</span><span class="n">S_IRWXG</span> <span class="o">|</span> <span class="n">S_IRWXO</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">parsedArgs</span><span class="o">.</span><span class="na">niceName</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Process</span><span class="o">.</span><span class="na">setArgV0</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">.</span><span class="na">niceName</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">final</span> <span class="n">String</span> <span class="n">systemServerClasspath</span> <span class="o">=</span> <span class="n">Os</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s">&quot;SYSTEMSERVERCLASSPATH&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ClassLoader</span> <span class="n">cl</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">systemServerClasspath</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">cl</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">PathClassLoader</span><span class="o">(</span><span class="n">systemServerClasspath</span><span class="o">,</span> <span class="n">ClassLoader</span><span class="o">.</span><span class="na">getSystemClassLoader</span><span class="o">());</span>
</span><span class='line'>        <span class="n">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">setContextClassLoader</span><span class="o">(</span><span class="n">cl</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * Pass the remaining arguments to SystemServer.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">RuntimeInit</span><span class="o">.</span><span class="na">zygoteInit</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">.</span><span class="na">targetSdkVersion</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">remainingArgs</span><span class="o">,</span> <span class="n">cl</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* should never reach here */</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>handleSystemServerProcess</code> 会抛出 <code>MethodAndArgsCaller</code> 异常，前面提到这个异常其实是处理正常业务逻辑的，相当于一个回调。由于由 <code>zygote</code> 进程创建的子进程会继承 <code>zygote</code> 进程在前面创建的 <code>socket</code> 文件描述符，而这里的子进程又不会用到它，因此，这里就调用 <code>closeServerSocket</code> 函数来关闭它。<code>SYSTEMSERVERCLASSPATH</code> 是包含 <code>/system/framework/framework.jar</code> 的环境变量，它定义在 <code>system/core/rootdir/init.environ.rc.in</code> 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">on</span> <span class="n">init</span>
</span><span class='line'>    <span class="n">export</span> <span class="n">PATH</span> <span class="o">/</span><span class="nl">sbin:</span><span class="o">/</span><span class="n">vendor</span><span class="o">/</span><span class="nl">bin:</span><span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="nl">sbin:</span><span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="nl">bin:</span><span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">xbin</span>
</span><span class='line'>    <span class="n">export</span> <span class="n">ANDROID_BOOTLOGO</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">export</span> <span class="n">ANDROID_ROOT</span> <span class="o">/</span><span class="n">system</span>
</span><span class='line'>    <span class="n">export</span> <span class="n">SYSTEMSERVERCLASSPATH</span> <span class="o">%</span><span class="n">SYSTEMSERVERCLASSPATH</span><span class="o">%</span>
</span><span class='line'>    <span class="n">export</span> <span class="n">LD_PRELOAD</span> <span class="n">libsigchain</span><span class="o">.</span><span class="na">so</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>handleSystemServerProcess</code> 函数接着调用 <code>RuntimeInit.zygoteInit</code> 函数来进一步执行启动 <code>SystemServer</code> 组件的操作。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">zygoteInit</span><span class="o">(</span><span class="kt">int</span> <span class="n">targetSdkVersion</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">,</span> <span class="n">ClassLoader</span> <span class="n">classLoader</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">commonInit</span><span class="o">();</span>
</span><span class='line'>    <span class="n">nativeZygoteInit</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">applicationInit</span><span class="o">(</span><span class="n">targetSdkVersion</span><span class="o">,</span> <span class="n">argv</span><span class="o">,</span> <span class="n">classLoader</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>commonInit</code> 设置线程未处理异常 <code>handler</code>，时区等，<code>JNI</code> 方法 <code>nativeZygoteInit</code> 实现在 <code>frameworks/base/core/jni/AndroidRuntime.cpp</code> 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">AndroidRuntime</span><span class="o">*</span> <span class="n">gCurRuntime</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">com_android_internal_os_RuntimeInit_nativeZygoteInit</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">clazz</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">gCurRuntime</span><span class="o">-&gt;</span><span class="n">onZygoteInit</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>AndroidRuntime</code> 是个带虚函数的基类，真正的实现是在 <code>app_main.cpp</code> 中的 <code>AppRuntime</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">AppRuntime</span> <span class="o">:</span> <span class="k">public</span> <span class="n">AndroidRuntime</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">void</span> <span class="n">onStarted</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">sp</span><span class="o">&lt;</span><span class="n">ProcessState</span><span class="o">&gt;</span> <span class="n">proc</span> <span class="o">=</span> <span class="n">ProcessState</span><span class="o">::</span><span class="n">self</span><span class="p">();</span>
</span><span class='line'>        <span class="n">ALOGV</span><span class="p">(</span><span class="s">&quot;App process: starting thread pool.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">proc</span><span class="o">-&gt;</span><span class="n">startThreadPool</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">AndroidRuntime</span><span class="o">*</span> <span class="n">ar</span> <span class="o">=</span> <span class="n">AndroidRuntime</span><span class="o">::</span><span class="n">getRuntime</span><span class="p">();</span>
</span><span class='line'>        <span class="n">ar</span><span class="o">-&gt;</span><span class="n">callMain</span><span class="p">(</span><span class="n">mClassName</span><span class="p">,</span> <span class="n">mClass</span><span class="p">,</span> <span class="n">mArgs</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">IPCThreadState</span><span class="o">::</span><span class="n">self</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">stopProcess</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">void</span> <span class="n">onZygoteInit</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Re-enable tracing now that we&#39;re no longer in Zygote.</span>
</span><span class='line'>        <span class="n">atrace_set_tracing_enabled</span><span class="p">(</span><span class="nb">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">sp</span><span class="o">&lt;</span><span class="n">ProcessState</span><span class="o">&gt;</span> <span class="n">proc</span> <span class="o">=</span> <span class="n">ProcessState</span><span class="o">::</span><span class="n">self</span><span class="p">();</span>
</span><span class='line'>        <span class="n">ALOGV</span><span class="p">(</span><span class="s">&quot;App process: starting thread pool.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">proc</span><span class="o">-&gt;</span><span class="n">startThreadPool</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">void</span> <span class="n">onExit</span><span class="p">(</span><span class="kt">int</span> <span class="n">code</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">mClassName</span><span class="p">.</span><span class="n">isEmpty</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// if zygote</span>
</span><span class='line'>            <span class="n">IPCThreadState</span><span class="o">::</span><span class="n">self</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">stopProcess</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">AndroidRuntime</span><span class="o">::</span><span class="n">onExit</span><span class="p">(</span><span class="n">code</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过执行 <code>AppRuntime::onZygoteInit</code> 函数，这个进程的 <code>Binder</code> 进程间通信机制基础设施就准备好了，参考代码 <code>frameworks/native/libs/binder/ProcessState.cpp</code>。</p>

<p>接下来，看 applicationInit ：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">applicationInit</span><span class="o">(</span><span class="kt">int</span> <span class="n">targetSdkVersion</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">,</span> <span class="n">ClassLoader</span> <span class="n">classLoader</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">final</span> <span class="n">Arguments</span> <span class="n">args</span><span class="o">;</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">args</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Arguments</span><span class="o">(</span><span class="n">argv</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalArgumentException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Slog</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">ex</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>        <span class="c1">// let the process exit</span>
</span><span class='line'>        <span class="k">return</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Remaining arguments are passed to the start class&#39;s static main</span>
</span><span class='line'>    <span class="n">invokeStaticMain</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">startClass</span><span class="o">,</span> <span class="n">args</span><span class="o">.</span><span class="na">startArgs</span><span class="o">,</span> <span class="n">classLoader</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>applicationInit</code> 仅仅是转调 <code>invokeStaticMain</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">invokeStaticMain</span><span class="o">(</span><span class="n">String</span> <span class="n">className</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">,</span> <span class="n">ClassLoader</span> <span class="n">classLoader</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="n">Class</span> <span class="n">cl</span><span class="o">;</span>
</span><span class='line'>    <span class="n">cl</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">className</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="n">classLoader</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Method</span> <span class="n">m</span><span class="o">;</span>
</span><span class='line'>    <span class="n">m</span> <span class="o">=</span> <span class="n">cl</span><span class="o">.</span><span class="na">getMethod</span><span class="o">(</span><span class="s">&quot;main&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Class</span><span class="o">[]</span> <span class="o">{</span> <span class="n">String</span><span class="o">[].</span><span class="na">class</span> <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * This throw gets caught in ZygoteInit.main(), which responds</span>
</span><span class='line'><span class="cm">     * by invoking the exception&#39;s run() method. This arrangement</span>
</span><span class='line'><span class="cm">     * clears up all the stack frames that were required in setting</span>
</span><span class='line'><span class="cm">     * up the process.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">throw</span> <span class="k">new</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span><span class="o">(</span><span class="n">m</span><span class="o">,</span> <span class="n">argv</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>invokeStaticMain</code> 也很简单，通过反射找到参数 <code>className</code> 对应的类的静态 <code>main</code> 方法，然后将该方法与参数生成 <code>ZygoteInit.MethodAndArgsCaller</code> 对象当做异常抛出，这个异常对象在 <code>ZygoteInit</code> 的 <code>main</code> 函数被捕获并执行该对象的 <code>run</code> 方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Helper exception class which holds a method and arguments and</span>
</span><span class='line'><span class="cm"> * can call them. This is used as part of a trampoline to get rid of</span>
</span><span class='line'><span class="cm"> * the initial process setup stack frames.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">MethodAndArgsCaller</span> <span class="kd">extends</span> <span class="n">Exception</span>
</span><span class='line'>        <span class="kd">implements</span> <span class="n">Runnable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>        <span class="n">mMethod</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="n">mArgs</span> <span class="o">});</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这么复杂的跳转，其实就做了一件简单的事情：根据 <code>className </code>反射调用该类的静态 <code>main</code> 方法。这个类名是 <code>ZygoteInit.startSystemServer</code> 方法中写死的 <code>com.android.server.SystemServer</code>。 从而进入 <code>SystemServer</code> 类的 <code>main()</code>方法。</p>

<h3>执行 ZygoteInit.runSelectLoop</h3>

<p>在 <code>startSystemServer</code> 函数中，创建 <code>system_server</code> 进程之后，<code>pid</code> 等于 0 时在该新进程中执行 <code>SystemServer.main</code>，否则回到 <code>zygote</code> 进程进行执行 <code>ZygoteInit.runSelectLoop</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">runSelectLoop</span><span class="o">(</span><span class="n">String</span> <span class="n">abiList</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">FileDescriptor</span><span class="o">&gt;</span> <span class="n">fds</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">FileDescriptor</span><span class="o">&gt;();</span>
</span><span class='line'>    <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">ZygoteConnection</span><span class="o">&gt;</span> <span class="n">peers</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">ZygoteConnection</span><span class="o">&gt;();</span>
</span><span class='line'>    <span class="n">FileDescriptor</span><span class="o">[]</span> <span class="n">fdArray</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileDescriptor</span><span class="o">[</span><span class="mi">4</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fds</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sServerSocket</span><span class="o">.</span><span class="na">getFileDescriptor</span><span class="o">());</span>
</span><span class='line'>    <span class="n">peers</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">loopCount</span> <span class="o">=</span> <span class="n">GC_LOOP_COUNT</span><span class="o">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">index</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * Call gc() before we block in select().</span>
</span><span class='line'><span class="cm">         * It&#39;s work that has to be done anyway, and it&#39;s better</span>
</span><span class='line'><span class="cm">         * to avoid making every child do it.  It will also</span>
</span><span class='line'><span class="cm">         * madvise() any free memory as a side-effect.</span>
</span><span class='line'><span class="cm">         *</span>
</span><span class='line'><span class="cm">         * Don&#39;t call it every time, because walking the entire</span>
</span><span class='line'><span class="cm">         * heap is a lot of overhead to free a few hundred bytes.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">loopCount</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">gc</span><span class="o">();</span>
</span><span class='line'>            <span class="n">loopCount</span> <span class="o">=</span> <span class="n">GC_LOOP_COUNT</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">loopCount</span><span class="o">--;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">fdArray</span> <span class="o">=</span> <span class="n">fds</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="n">fdArray</span><span class="o">);</span>
</span><span class='line'>            <span class="n">index</span> <span class="o">=</span> <span class="n">selectReadable</span><span class="o">(</span><span class="n">fdArray</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;Error in select()&quot;</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;Error in select()&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">index</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ZygoteConnection</span> <span class="n">newPeer</span> <span class="o">=</span> <span class="n">acceptCommandPeer</span><span class="o">(</span><span class="n">abiList</span><span class="o">);</span>
</span><span class='line'>            <span class="n">peers</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">newPeer</span><span class="o">);</span>
</span><span class='line'>            <span class="n">fds</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">newPeer</span><span class="o">.</span><span class="na">getFileDescriptor</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="kt">boolean</span> <span class="n">done</span><span class="o">;</span>
</span><span class='line'>            <span class="n">done</span> <span class="o">=</span> <span class="n">peers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">index</span><span class="o">).</span><span class="na">runOnce</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">done</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">peers</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>                <span class="n">fds</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">index</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>runSelectLoop</code> 函数的逻辑比较简单，主要有两点：
1、 处理客户端的连接和请求。前面创建的 <code>LocalServerSocket</code> 对象保存 <code>sServerSocket</code>，这个 <code>socket</code> 通过 <code>selectReadable</code> 等待 <code>ActivityManagerService</code>(简写 <code>AMS</code>) 与之通信。<code>selectReadable</code>是一个<code>native</code>函数，内部调用<code>select</code>等待 <code>AMS</code> 连接，<code>AMS</code> 连接上之后就会返回: 返回值 &lt; 0：内部发生错误；返回值 = 0：第一次连接到服务端 ；返回值 > 0：与服务端已经建立连接，并开始发送数据。每一个链接在 <code>zygote</code> 进程中使用 <code>ZygoteConnection</code> 对象表示。</p>

<p>2、 客户端的请求由 <code>ZygoteConnection.runOnce</code> 来处理，这个方法也抛出 <code>MethodAndArgsCaller</code> 异常，从而进入 <code>MethodAndArgsCaller.run</code> 中调用根据客户请求数据反射出的类的 <code>main</code> 方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">String</span><span class="o">[]</span> <span class="nf">readArgumentList</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">argc</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">mSocketReader</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">s</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// EOF reached.</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">argc</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;invalid Zygote wire format: non-int at argc&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">IOException</span><span class="o">(</span><span class="s">&quot;invalid wire format&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">String</span><span class="o">[]</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">argc</span><span class="o">];</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">argc</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">result</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">mSocketReader</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// We got an unexpected EOF.</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IOException</span><span class="o">(</span><span class="s">&quot;truncated request&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">boolean</span> <span class="nf">runOnce</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">ZygoteInit</span><span class="o">.</span><span class="na">MethodAndArgsCaller</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">args</span><span class="o">[];</span>
</span><span class='line'>    <span class="n">Arguments</span> <span class="n">parsedArgs</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="n">args</span> <span class="o">=</span> <span class="n">readArgumentList</span><span class="o">();</span>
</span><span class='line'>    <span class="n">parsedArgs</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Arguments</span><span class="o">(</span><span class="n">args</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="n">pid</span> <span class="o">=</span> <span class="n">Zygote</span><span class="o">.</span><span class="na">forkAndSpecialize</span><span class="o">(</span><span class="n">parsedArgs</span><span class="o">.</span><span class="na">uid</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gid</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">gids</span><span class="o">,</span>
</span><span class='line'>            <span class="n">parsedArgs</span><span class="o">.</span><span class="na">debugFlags</span><span class="o">,</span> <span class="n">rlimits</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">mountExternal</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">seInfo</span><span class="o">,</span>
</span><span class='line'>            <span class="n">parsedArgs</span><span class="o">.</span><span class="na">niceName</span><span class="o">,</span> <span class="n">fdsToClose</span><span class="o">,</span> <span class="n">parsedArgs</span><span class="o">.</span><span class="na">instructionSet</span><span class="o">,</span>
</span><span class='line'>            <span class="n">parsedArgs</span><span class="o">.</span><span class="na">appDataDir</span><span class="o">);</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SystemServer 启动过程</h2>

<p>在前面启动 SystemServer一节讲到，通过反射调用类 <code>com.android.server.SystemServer</code> main() 函数，从而开始执行 SystemServer 的初始化流程。</p>

<p>SystemServer.main()</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * The main entry point from zygote.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">new</span> <span class="nf">SystemServer</span><span class="o">().</span><span class="na">run</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>main 函数创建一个 SystemServer 对象，调用其 run() 方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// If a device&#39;s clock is before 1970 (before 0), a lot of</span>
</span><span class='line'>    <span class="c1">// APIs crash dealing with negative numbers, notably</span>
</span><span class='line'>    <span class="c1">// java.io.File#setLastModified, so instead we fake it and</span>
</span><span class='line'>    <span class="c1">// hope that time from cell towers or NTP fixes it shortly.</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">&lt;</span> <span class="n">EARLIEST_SUPPORTED_TIME</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Slog</span><span class="o">.</span><span class="na">w</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;System clock is before 1970; setting to 1970.&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">SystemClock</span><span class="o">.</span><span class="na">setCurrentTimeMillis</span><span class="o">(</span><span class="n">EARLIEST_SUPPORTED_TIME</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="c1">// 检测时间设置</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Here we go!</span>
</span><span class='line'>    <span class="n">Slog</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Entered the Android system server!&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">EventLog</span><span class="o">.</span><span class="na">writeEvent</span><span class="o">(</span><span class="n">EventLogTags</span><span class="o">.</span><span class="na">BOOT_PROGRESS_SYSTEM_RUN</span><span class="o">,</span> <span class="n">SystemClock</span><span class="o">.</span><span class="na">uptimeMillis</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// In case the runtime switched since last boot (such as when</span>
</span><span class='line'>    <span class="c1">// the old runtime was removed in an OTA), set the system</span>
</span><span class='line'>    <span class="c1">// property so that it is in sync. We can&#39;t do this in</span>
</span><span class='line'>    <span class="c1">// libnativehelper&#39;s JniInvocation::Init code where we already</span>
</span><span class='line'>    <span class="c1">// had to fallback to a different runtime because it is</span>
</span><span class='line'>    <span class="c1">// running as root and we need to be the system user to set</span>
</span><span class='line'>    <span class="c1">// the property. http://b/11463182</span>
</span><span class='line'>    <span class="n">SystemProperties</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">&quot;persist.sys.dalvik.vm.lib.2&quot;</span><span class="o">,</span> <span class="n">VMRuntime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">vmLibrary</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Enable the sampling profiler.</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">SamplingProfilerIntegration</span><span class="o">.</span><span class="na">isEnabled</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">SamplingProfilerIntegration</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mProfilerSnapshotTimer</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">Timer</span><span class="o">();</span>
</span><span class='line'>        <span class="n">mProfilerSnapshotTimer</span><span class="o">.</span><span class="na">schedule</span><span class="o">(</span><span class="k">new</span> <span class="nf">TimerTask</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">SamplingProfilerIntegration</span><span class="o">.</span><span class="na">writeSnapshot</span><span class="o">(</span><span class="s">&quot;system_server&quot;</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">},</span> <span class="n">SNAPSHOT_INTERVAL</span><span class="o">,</span> <span class="n">SNAPSHOT_INTERVAL</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="c1">// 启动性能分析采样</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Mmmmmm... more memory!</span>
</span><span class='line'>    <span class="n">VMRuntime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">clearGrowthLimit</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The system server has to run all of the time, so it needs to be</span>
</span><span class='line'>    <span class="c1">// as efficient as possible with its memory usage.</span>
</span><span class='line'>    <span class="n">VMRuntime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">setTargetHeapUtilization</span><span class="o">(</span><span class="mf">0.8f</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Some devices rely on runtime fingerprint generation, so make sure</span>
</span><span class='line'>    <span class="c1">// we&#39;ve defined it before booting further.</span>
</span><span class='line'>    <span class="n">Build</span><span class="o">.</span><span class="na">ensureFingerprintProperty</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Within the system server, it is an error to access Environment paths without</span>
</span><span class='line'>    <span class="c1">// explicitly specifying a user.</span>
</span><span class='line'>    <span class="n">Environment</span><span class="o">.</span><span class="na">setUserRequired</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Ensure binder calls into the system always run at foreground priority.</span>
</span><span class='line'>    <span class="n">BinderInternal</span><span class="o">.</span><span class="na">disableBackgroundScheduling</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Prepare the main looper thread (this thread).</span>
</span><span class='line'>    <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">setThreadPriority</span><span class="o">(</span>
</span><span class='line'>            <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">THREAD_PRIORITY_FOREGROUND</span><span class="o">);</span>
</span><span class='line'>    <span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Process</span><span class="o">.</span><span class="na">setCanSelfBackground</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Looper</span><span class="o">.</span><span class="na">prepareMainLooper</span><span class="o">();</span> <span class="c1">// 准备主线程循环</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Initialize native services.</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">loadLibrary</span><span class="o">(</span><span class="s">&quot;android_servers&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">nativeInit</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Check whether we failed to shut down last time we tried.</span>
</span><span class='line'>    <span class="c1">// This call may not return.</span>
</span><span class='line'>    <span class="n">performPendingShutdown</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Initialize the system context.</span>
</span><span class='line'>    <span class="n">createSystemContext</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create the system service manager.</span>
</span><span class='line'>    <span class="n">mSystemServiceManager</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">SystemServiceManager</span><span class="o">(</span><span class="n">mSystemContext</span><span class="o">);</span>
</span><span class='line'>    <span class="n">LocalServices</span><span class="o">.</span><span class="na">addService</span><span class="o">(</span><span class="n">SystemServiceManager</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">mSystemServiceManager</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Start services.  // 启动服务</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">startBootstrapServices</span><span class="o">();</span>
</span><span class='line'>        <span class="n">startCoreServices</span><span class="o">();</span>
</span><span class='line'>        <span class="n">startOtherServices</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Slog</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="s">&quot;System&quot;</span><span class="o">,</span> <span class="s">&quot;******************************************&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Slog</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="s">&quot;System&quot;</span><span class="o">,</span> <span class="s">&quot;************ Failure starting system services&quot;</span><span class="o">,</span> <span class="n">ex</span><span class="o">);</span>
</span><span class='line'>        <span class="k">throw</span> <span class="n">ex</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// For debug builds, log event loop stalls to dropbox for analysis.</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">StrictMode</span><span class="o">.</span><span class="na">conditionallyEnableDebugLogging</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Slog</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Enabled StrictMode for system server main thread.&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Loop forever.</span>
</span><span class='line'>    <span class="n">Looper</span><span class="o">.</span><span class="na">loop</span><span class="o">();</span>  <span class="c1">// 启动线程循环，等待消息处理</span>
</span><span class='line'>    <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;Main thread loop unexpectedly exited&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在这个 run 方法中，主要完成三件事情，创建 system context 和 system service manager，启动一些系统服务，进入主线程消息循环。</p>

<h2>Zygote 的 fork 本地方法分析</h2>

<p>接下来我们仔细分析 <code>Zygote.forkSystemServer</code> 与 <code>Zygote.forkAndSpecialize</code> 两个方法。</p>

<h3>forkSystemServer</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">ZygoteHooks</span> <span class="n">VM_HOOKS</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">ZygoteHooks</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">forkSystemServer</span><span class="o">(</span><span class="kt">int</span> <span class="n">uid</span><span class="o">,</span> <span class="kt">int</span> <span class="n">gid</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">gids</span><span class="o">,</span> <span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span><span class="o">[][]</span> <span class="n">rlimits</span><span class="o">,</span> <span class="kt">long</span> <span class="n">permittedCapabilities</span><span class="o">,</span> <span class="kt">long</span> <span class="n">effectiveCapabilities</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">VM_HOOKS</span><span class="o">.</span><span class="na">preFork</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">pid</span> <span class="o">=</span> <span class="n">nativeForkSystemServer</span><span class="o">(</span>
</span><span class='line'>            <span class="n">uid</span><span class="o">,</span> <span class="n">gid</span><span class="o">,</span> <span class="n">gids</span><span class="o">,</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">rlimits</span><span class="o">,</span> <span class="n">permittedCapabilities</span><span class="o">,</span> <span class="n">effectiveCapabilities</span><span class="o">);</span>
</span><span class='line'>    <span class="n">VM_HOOKS</span><span class="o">.</span><span class="na">postForkCommon</span><span class="o">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pid</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在调用 <code>nativeForkSystemServer</code> 创建 <code>system_server</code> 进程之前与之后，都会调用 ZygoteHooks 进行一些前置与后置处理。</p>

<h4>ZygoteHooks.preFork</h4>

<p>前置处理 <code>ZygoteHooks.preFork</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">preFork</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Daemons</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="n">waitUntilAllThreadsStopped</span><span class="o">();</span>
</span><span class='line'>    <span class="n">token</span> <span class="o">=</span> <span class="n">nativePreFork</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Daemons.stop()</code>; 停止虚拟机中一些守护线程操作：如引用队列、终接器、GC等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">stop</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ReferenceQueueDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="n">FinalizerDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="n">FinalizerWatchdogDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="n">HeapTrimmerDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>    <span class="n">GCDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>waitUntilAllThreadsStopped</code> 保证被 <code>fork</code> 的进程是单线程，这样可以确保通过 <code>copyonwrite fork</code> 出来的进程也是单线程，从而节省资源。与前面提到的在新建 <code>system_server</code> 进程中调用 <code>closeServerSocket</code> 关闭 <code>sockect</code> 有异曲同工之妙。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * We must not fork until we&#39;re single-threaded again. Wait until /proc shows we&#39;re</span>
</span><span class='line'><span class="cm"> * down to just one thread.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">waitUntilAllThreadsStopped</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">File</span> <span class="n">tasks</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="s">&quot;/proc/self/task&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">while</span> <span class="o">(</span><span class="n">tasks</span><span class="o">.</span><span class="na">list</span><span class="o">().</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// Experimentally, booting and playing about with a stingray, I never saw us</span>
</span><span class='line'>            <span class="c1">// go round this loop more than once with a 10ms sleep.</span>
</span><span class='line'>            <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">ignored</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>本地方法 <code>nativePreFork</code> 实现在 <code>art/runtime/native/dalvik_system_ZygoteHooks.cc</code> 中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">jlong</span> <span class="nf">ZygoteHooks_nativePreFork</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jclass</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">Runtime</span><span class="o">*</span> <span class="n">runtime</span> <span class="o">=</span> <span class="n">Runtime</span><span class="o">::</span><span class="n">Current</span><span class="p">();</span>
</span><span class='line'>  <span class="n">CHECK</span><span class="p">(</span><span class="n">runtime</span><span class="o">-&gt;</span><span class="n">IsZygote</span><span class="p">())</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;runtime instance not started with -Xzygote&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">runtime</span><span class="o">-&gt;</span><span class="n">PreZygoteFork</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Grab thread before fork potentially makes Thread::pthread_key_self_ unusable.</span>
</span><span class='line'>  <span class="n">Thread</span><span class="o">*</span> <span class="n">self</span> <span class="o">=</span> <span class="n">Thread</span><span class="o">::</span><span class="n">Current</span><span class="p">();</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="n">jlong</span><span class="o">&gt;</span><span class="p">(</span><span class="n">self</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>ZygoteHooks_nativePreFork</code> 通过调用 <code>Runtime::PreZygoteFork</code> 来完成 <code>gc</code> 堆的一些初始化，这部分代码在 <code>art/runtime/runtime.cc</code> 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">heap_</span> <span class="o">=</span> <span class="k">new</span> <span class="n">gc</span><span class="o">::</span><span class="n">Heap</span><span class="p">(...);</span>
</span><span class='line'><span class="kt">void</span> <span class="n">Runtime</span><span class="o">::</span><span class="n">PreZygoteFork</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">heap_</span><span class="o">-&gt;</span><span class="n">PreZygoteFork</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>创建 system_server 进程：</h4>

<p><code>nativeForkSystemServer</code> 实现在 <code>framework/base/core/jni/com_android_internal_os_Zygote.cpp</code> 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">jint</span> <span class="nf">com_android_internal_os_Zygote_nativeForkSystemServer</span><span class="p">(</span>
</span><span class='line'>        <span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="kt">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="kt">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="n">jintArray</span> <span class="n">gids</span><span class="p">,</span>
</span><span class='line'>        <span class="n">jint</span> <span class="n">debug_flags</span><span class="p">,</span> <span class="n">jobjectArray</span> <span class="n">rlimits</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">permittedCapabilities</span><span class="p">,</span>
</span><span class='line'>        <span class="n">jlong</span> <span class="n">effectiveCapabilities</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">pid_t</span> <span class="n">pid</span> <span class="o">=</span> <span class="n">ForkAndSpecializeCommon</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gids</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">debug_flags</span><span class="p">,</span> <span class="n">rlimits</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">permittedCapabilities</span><span class="p">,</span> <span class="n">effectiveCapabilities</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">MOUNT_EXTERNAL_NONE</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">true</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span>
</span><span class='line'>                    <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// The zygote process checks whether the child process has died or not.</span>
</span><span class='line'>        <span class="n">ALOGI</span><span class="p">(</span><span class="s">&quot;System server process %d has been created&quot;</span><span class="p">,</span> <span class="n">pid</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gSystemServerPid</span> <span class="o">=</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">// There is a slight window that the system server process has crashed</span>
</span><span class='line'>        <span class="c1">// but it went unnoticed because we haven&#39;t published its pid yet. So</span>
</span><span class='line'>        <span class="c1">// we recheck here just to make sure that all is well.</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">status</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">waitpid</span><span class="p">(</span><span class="n">pid</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">status</span><span class="p">,</span> <span class="n">WNOHANG</span><span class="p">)</span> <span class="o">==</span> <span class="n">pid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">ALOGE</span><span class="p">(</span><span class="s">&quot;System server process %d has died. Restarting Zygote!&quot;</span><span class="p">,</span> <span class="n">pid</span><span class="p">);</span>
</span><span class='line'>            <span class="n">RuntimeAbort</span><span class="p">(</span><span class="n">env</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>它转调 <code>ForkAndSpecializeCommon</code> 来创建新进程，并确保 <code>system_server</code> 创建成功，若不成功便成仁：重启 <code>zygote</code>，因为没有 <code>system_server</code> 就干不了什么事情。<code>ForkAndSpecializeCommon</code> 实现如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">kZygoteClassName</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;com/android/internal/os/Zygote&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">gZygoteClass</span> <span class="o">=</span> <span class="p">(</span><span class="n">jclass</span><span class="p">)</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">NewGlobalRef</span><span class="p">(</span><span class="n">env</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">kZygoteClassName</span><span class="p">));</span>
</span><span class='line'><span class="n">gCallPostForkChildHooks</span> <span class="o">=</span> <span class="n">env</span><span class="o">-&gt;</span><span class="n">GetStaticMethodID</span><span class="p">(</span><span class="n">gZygoteClass</span><span class="p">,</span> <span class="s">&quot;callPostForkChildHooks&quot;</span><span class="p">,</span>
</span><span class='line'>                                       <span class="s">&quot;(ILjava/lang/String;)V&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Utility routine to fork zygote and specialize the child process.</span>
</span><span class='line'><span class="k">static</span> <span class="kt">pid_t</span> <span class="nf">ForkAndSpecializeCommon</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="kt">uid_t</span> <span class="n">uid</span><span class="p">,</span> <span class="kt">gid_t</span> <span class="n">gid</span><span class="p">,</span> <span class="n">jintArray</span> <span class="n">javaGids</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">jint</span> <span class="n">debug_flags</span><span class="p">,</span> <span class="n">jobjectArray</span> <span class="n">javaRlimits</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">jlong</span> <span class="n">permittedCapabilities</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">effectiveCapabilities</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">jint</span> <span class="n">mount_external</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">jstring</span> <span class="n">java_se_info</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">java_se_name</span><span class="p">,</span>
</span><span class='line'>                 <span class="kt">bool</span> <span class="n">is_system_server</span><span class="p">,</span> <span class="n">jintArray</span> <span class="n">fdsToClose</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">jstring</span> <span class="n">instructionSet</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">dataDir</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">SetSigChldHandler</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">pid_t</span> <span class="n">pid</span> <span class="o">=</span> <span class="n">fork</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// The child process.</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>        <span class="n">rc</span> <span class="o">=</span> <span class="n">selinux_android_setcontext</span><span class="p">(</span><span class="n">uid</span><span class="p">,</span> <span class="n">is_system_server</span><span class="p">,</span> <span class="n">se_info_c_str</span><span class="p">,</span> <span class="n">se_name_c_str</span><span class="p">);</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>        <span class="n">UnsetSigChldHandler</span><span class="p">();</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>        <span class="n">env</span><span class="o">-&gt;</span><span class="n">CallStaticVoidMethod</span><span class="p">(</span><span class="n">gZygoteClass</span><span class="p">,</span> <span class="n">gCallPostForkChildHooks</span><span class="p">,</span> <span class="n">debug_flags</span><span class="p">,</span>
</span><span class='line'>                      <span class="n">is_system_server</span> <span class="o">?</span> <span class="nb">NULL</span> <span class="o">:</span> <span class="n">instructionSet</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">pid</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// the parent process</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>ForkAndSpecializeCommon</code> 首先设置子进程异常处理<code>handler</code>，然后 </ode>fork</code> 新进程，在新进程中设置 <code>SELinux</code>，并清除它的子进程异常处理 <code>handler</code>，然后调用 <code>Zygote.callPostForkChildHooks</code> 方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">callPostForkChildHooks</span><span class="o">(</span><span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">String</span> <span class="n">instructionSet</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="n">SystemClock</span><span class="o">.</span><span class="na">elapsedRealtime</span><span class="o">();</span>
</span><span class='line'>    <span class="n">VM_HOOKS</span><span class="o">.</span><span class="na">postForkChild</span><span class="o">(</span><span class="n">debugFlags</span><span class="o">,</span> <span class="n">instructionSet</span><span class="o">);</span>
</span><span class='line'>    <span class="n">checkTime</span><span class="o">(</span><span class="n">startTime</span><span class="o">,</span> <span class="s">&quot;Zygote.callPostForkChildHooks&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>callPostForkChildHooks</code> 又转调 <code>ZygoteHooks.postForkChild</code> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">postForkChild</span><span class="o">(</span><span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">String</span> <span class="n">instructionSet</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">nativePostForkChild</span><span class="o">(</span><span class="n">token</span><span class="o">,</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">instructionSet</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>本地方法 <code>nativePostForkChild</code> 又进到 <code>dalvik_system_ZygoteHooks.cc</code> 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">ZygoteHooks_nativePostForkChild</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">token</span><span class="p">,</span> <span class="n">jint</span> <span class="n">debug_flags</span><span class="p">,</span>
</span><span class='line'>                                        <span class="n">jstring</span> <span class="n">instruction_set</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Thread</span><span class="o">*</span> <span class="kr">thread</span> <span class="o">=</span> <span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="n">Thread</span><span class="o">*&gt;</span><span class="p">(</span><span class="n">token</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// Our system thread ID, etc, has changed so reset Thread state.</span>
</span><span class='line'>    <span class="kr">thread</span><span class="o">-&gt;</span><span class="n">InitAfterFork</span><span class="p">();</span>
</span><span class='line'>    <span class="n">EnableDebugFeatures</span><span class="p">(</span><span class="n">debug_flags</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">instruction_set</span> <span class="o">!=</span> <span class="k">nullptr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">ScopedUtfChars</span> <span class="n">isa_string</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">instruction_set</span><span class="p">);</span>
</span><span class='line'>        <span class="n">InstructionSet</span> <span class="n">isa</span> <span class="o">=</span> <span class="n">GetInstructionSetFromString</span><span class="p">(</span><span class="n">isa_string</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
</span><span class='line'>        <span class="n">Runtime</span><span class="o">::</span><span class="n">NativeBridgeAction</span> <span class="n">action</span> <span class="o">=</span> <span class="n">Runtime</span><span class="o">::</span><span class="n">NativeBridgeAction</span><span class="o">::</span><span class="n">kUnload</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">isa</span> <span class="o">!=</span> <span class="n">kNone</span> <span class="o">&amp;&amp;</span> <span class="n">isa</span> <span class="o">!=</span> <span class="n">kRuntimeISA</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">action</span> <span class="o">=</span> <span class="n">Runtime</span><span class="o">::</span><span class="n">NativeBridgeAction</span><span class="o">::</span><span class="n">kInitialize</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">Runtime</span><span class="o">::</span><span class="n">Current</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">DidForkFromZygote</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">action</span><span class="p">,</span> <span class="n">isa_string</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Runtime</span><span class="o">::</span><span class="n">Current</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">DidForkFromZygote</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">Runtime</span><span class="o">::</span><span class="n">NativeBridgeAction</span><span class="o">::</span><span class="n">kUnload</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>thread->InitAfterFork()</code>; 实现在 <code>art/runtime/thread.cc</code> 中，设置新进程主线程的线程<code>id</code>： <code>tid</code>。<code>DidForkFromZygote</code> 实现在 <code>Runtime.cc</code> 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">Runtime</span><span class="o">::</span><span class="n">DidForkFromZygote</span><span class="p">(</span><span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">NativeBridgeAction</span> <span class="n">action</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">isa</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">is_zygote_</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">switch</span> <span class="p">(</span><span class="n">action</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">NativeBridgeAction</span><span class="o">::</span><span class="nl">kUnload</span><span class="p">:</span>
</span><span class='line'>        <span class="n">UnloadNativeBridge</span><span class="p">();</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="n">NativeBridgeAction</span><span class="o">::</span><span class="nl">kInitialize</span><span class="p">:</span>
</span><span class='line'>        <span class="n">InitializeNativeBridge</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">isa</span><span class="p">);</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create the thread pool.</span>
</span><span class='line'>    <span class="n">heap_</span><span class="o">-&gt;</span><span class="n">CreateThreadPool</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">StartSignalCatcher</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Start the JDWP thread. If the command-line debugger flags specified &quot;suspend=y&quot;,</span>
</span><span class='line'>    <span class="c1">// this will pause the runtime, so we probably want this to come last.</span>
</span><span class='line'>    <span class="n">Dbg</span><span class="o">::</span><span class="n">StartJdwp</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>首先根据 <code>action</code> 参数来卸载或转载用于跨平台桥接用的库。然后启动 <code>gc</code> 堆的线程池。<code>StartSignalCatcher</code> 设置信号处理 <code>handler</code>，其代码在 <code>signal_catcher.cc</code> 中。</p>

<h4>ZygoteHooks.postForkCommon</h4>

<p>后置处理 <code>ZygoteHooks.postForkCommon</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">postForkCommon</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Daemons</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>postForkCommon</code> 转调 <code>Daemons.start</code>，以初始化虚拟机中引用队列、终接器以及 <code>gc</code> 的守护线程。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ReferenceQueueDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="n">FinalizerDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="n">FinalizerWatchdogDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="n">HeapTrimmerDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>    <span class="n">GCDaemon</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>forkAndSpecialize</h3>

<p><code>Zygote.forkAndSpecialize</code> 方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">forkAndSpecialize</span><span class="o">(</span><span class="kt">int</span> <span class="n">uid</span><span class="o">,</span> <span class="kt">int</span> <span class="n">gid</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">gids</span><span class="o">,</span> <span class="kt">int</span> <span class="n">debugFlags</span><span class="o">,</span>
</span><span class='line'>      <span class="kt">int</span><span class="o">[][]</span> <span class="n">rlimits</span><span class="o">,</span> <span class="kt">int</span> <span class="n">mountExternal</span><span class="o">,</span> <span class="n">String</span> <span class="n">seInfo</span><span class="o">,</span> <span class="n">String</span> <span class="n">niceName</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">fdsToClose</span><span class="o">,</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">instructionSet</span><span class="o">,</span> <span class="n">String</span> <span class="n">appDataDir</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">startTime</span> <span class="o">=</span> <span class="n">SystemClock</span><span class="o">.</span><span class="na">elapsedRealtime</span><span class="o">();</span>
</span><span class='line'>    <span class="n">VM_HOOKS</span><span class="o">.</span><span class="na">preFork</span><span class="o">();</span>
</span><span class='line'>    <span class="n">checkTime</span><span class="o">(</span><span class="n">startTime</span><span class="o">,</span> <span class="s">&quot;Zygote.preFork&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">pid</span> <span class="o">=</span> <span class="n">nativeForkAndSpecialize</span><span class="o">(</span>
</span><span class='line'>              <span class="n">uid</span><span class="o">,</span> <span class="n">gid</span><span class="o">,</span> <span class="n">gids</span><span class="o">,</span> <span class="n">debugFlags</span><span class="o">,</span> <span class="n">rlimits</span><span class="o">,</span> <span class="n">mountExternal</span><span class="o">,</span> <span class="n">seInfo</span><span class="o">,</span> <span class="n">niceName</span><span class="o">,</span> <span class="n">fdsToClose</span><span class="o">,</span>
</span><span class='line'>              <span class="n">instructionSet</span><span class="o">,</span> <span class="n">appDataDir</span><span class="o">);</span>
</span><span class='line'>    <span class="n">checkTime</span><span class="o">(</span><span class="n">startTime</span><span class="o">,</span> <span class="s">&quot;Zygote.nativeForkAndSpecialize&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">VM_HOOKS</span><span class="o">.</span><span class="na">postForkCommon</span><span class="o">();</span>
</span><span class='line'>    <span class="n">checkTime</span><span class="o">(</span><span class="n">startTime</span><span class="o">,</span> <span class="s">&quot;Zygote.postForkCommon&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pid</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>前置处理与后置处理与 <code>forkSystemServer</code> 中一样的，这里就跳过不讲了。本地方法 <code>nativeForkAndSpecialize</code> 实现在 <code>framework/base/core/jni/com_android_internal_os_Zygote.cpp</code> 中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">jint</span> <span class="nf">com_android_internal_os_Zygote_nativeForkAndSpecialize</span><span class="p">(</span>
</span><span class='line'>        <span class="n">JNIEnv</span><span class="o">*</span> <span class="n">env</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jint</span> <span class="n">uid</span><span class="p">,</span> <span class="n">jint</span> <span class="n">gid</span><span class="p">,</span> <span class="n">jintArray</span> <span class="n">gids</span><span class="p">,</span>
</span><span class='line'>        <span class="n">jint</span> <span class="n">debug_flags</span><span class="p">,</span> <span class="n">jobjectArray</span> <span class="n">rlimits</span><span class="p">,</span>
</span><span class='line'>        <span class="n">jint</span> <span class="n">mount_external</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">se_info</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">se_name</span><span class="p">,</span>
</span><span class='line'>        <span class="n">jintArray</span> <span class="n">fdsToClose</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">instructionSet</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">appDataDir</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Grant CAP_WAKE_ALARM to the Bluetooth process.</span>
</span><span class='line'>    <span class="n">jlong</span> <span class="n">capabilities</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">uid</span> <span class="o">==</span> <span class="n">AID_BLUETOOTH</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">capabilities</span> <span class="o">|=</span> <span class="p">(</span><span class="mi">1LL</span> <span class="o">&lt;&lt;</span> <span class="n">CAP_WAKE_ALARM</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">ForkAndSpecializeCommon</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gids</span><span class="p">,</span> <span class="n">debug_flags</span><span class="p">,</span>
</span><span class='line'>            <span class="n">rlimits</span><span class="p">,</span> <span class="n">capabilities</span><span class="p">,</span> <span class="n">capabilities</span><span class="p">,</span> <span class="n">mount_external</span><span class="p">,</span> <span class="n">se_info</span><span class="p">,</span>
</span><span class='line'>            <span class="n">se_name</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="n">fdsToClose</span><span class="p">,</span> <span class="n">instructionSet</span><span class="p">,</span> <span class="n">appDataDir</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个函数与 <code>com_android_internal_os_Zygote_nativeForkSystemServer</code> 非常类似，只不过少了一个确保子进程创建成功的步骤。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读书笔记: 基因组-人种自传23章]]></title>
    <link href="http://luozhaohui.github.io/blog/2016/01/31/book-genome/"/>
    <updated>2016-01-31T21:51:38+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2016/01/31/book-genome</id>
    <content type="html"><![CDATA[<h2>简评</h2>

<p>这是一本比较全面、新颖、引人深思的书籍。相比<a href="http://book.douban.com/subject/11445548/">《自私的基因》</a>那种宏大概括的叙事方式，更注重个别基因这个微观层面的故事。全书选取与我们密切相关的一些基因探讨了：生命、物种、疾病、环境、智力、死亡、性别、压力、个性、死亡、基因疗法、政治、自由意志等科学的，哲学的，社会的，政治的，伦理的问题。</p>

<!--more-->


<hr />

<h2>导言</h2>

<p>2006年6月26日，比尔.克林顿总统咋白宫，托尼.布莱尔在唐宁街同时宣布，基因组的草稿已经完成。</p>

<p>人类细胞（生殖细胞和血红细胞除外）的细胞核中有两套完全的人类基因组。一套来自父亲，一套来自母亲。从原理上讲，每一套都有着相同的23条染色体，上面有相同的3万~8万个基因。每个基因由外显子或内含子的段落组成，每个段落是由称为密码子的词（总共64种）组成，每个词是由三个称为碱基的字母组成。整个基因组使用三个字母的词写成的，只用四个字母：A（腺嘌呤），C（胞嘧啶），G（鸟嘌呤）和T（胸腺嘧啶）。它们不是写在平平的纸上，而是写在糖与磷酸组成的DNA分子的长链上，碱基就附着在这长链的侧面形成侧环。每一条染色体是一对非常长的互补的DNA分子缠绕而成，形成著名的“双螺旋”结构。</p>

<p>基因组是非常巧妙的一本书，因为在合适的条件下他可以复印自己也可以读出自己。复印的过程叫做复制，读出自己叫做翻译。</p>

<p>翻译的过程是这样的：基因（DNA）根据碱基配对规则被转录成复制品（信使RNA，用U-尿嘧啶替代T-胸腺嘧啶），信使RNA通过把所有内含子都切除把所有外显子都连接起来的方式进行编辑。然后，信使RNA在核糖体的作用下把三个字母组成的密码子翻译成由转运RNA的分子带来的某种氨基酸（一共有20种不同的氨基酸）。每个氨基酸都链接在上一个后面形成与密码子顺序一致的长链。当整个信息被翻译完成之后，氨基酸链就把自己折叠成一个特殊的形状，这个形状是由它的序列决定，这时，它被叫做蛋白质。身体里几乎所有东西要么是由蛋白质组成的，要么是由蛋白质造出来的。每个蛋白质都是一个翻译出来的基因。具体点说，身体里面的化学反应是由叫酶的蛋白质来催化的。</p>

<p>总结一下，根据DNA配对规则转录得到的信使RNA，在核糖体的帮助下被翻译成由转运RNA带来的氨基酸，从而形成氨基酸链-也就是蛋白质。简单地说，基因是蛋白质的配方，而蛋白质是人体内的化学反应的催化剂，从而基因通过蛋白质来表达。</p>

<p>当基因被复制时，有时候会出差错，一个字母（碱基）偶尔被丢掉，或翻译成错误的字母，一个句子或段落有时会被重复、或被丢掉，或顺序错乱。这些称为突变。</p>

<h2>第一号染色体：生命</h2>

<p>所有的生命都有两种能力：复制自己和制造秩序的能力。前者指的是繁殖的遗传特性，后者说的新陈代谢的生理特性。用薛定谔的说来说就是：生命是从环境里“把秩序喝进来”的。</p>

<p>遗传，实际上就是一种可以修改的内存程序；新陈代谢就是多功能的机器。把两者连接起来的是一种密码，是以物理的、化学的，甚至是非物质形式存在的一种抽象信息。它的秘密就在于它能够复制自己。任何能够利用这世界上的资源把这密码复制出来的事物，就是有生命的东西。</p>

<p>生命也是数码信息，是用DNA写成的。核糖体是把DNA翻译成蛋白质的地方，而蛋白质又是使得DNA能够复制的东西。生命就是蛋白质和基因这两种化学物质的相互作用。蛋白质代表的是化学反应，是生命活动、新陈代谢、是行为&ndash;生物学家称为“表现型”的那些东西。DNA代表的是信息，是复制、是繁殖&ndash;生物学家门称为“基因型”的那些东西。两者都不能单独存在。</p>

<p>越来越多的证明表面在蛋白质存在之前先有RNA，太初有词，这个词很可能就是RNA。最早的基因，“原基因”，很可能是把复制和催化合为一体的，是一个消耗自己周边化学物质以复制自己的“词”，它的结构很有可能就是RNA。这大概是40亿前，即第一种细菌出现之前的原始汤世界的情况。这些由RNA构成的“核糖生物体”因RNA的不稳定性，发展了一种更强的RNA变种：DNA，它还发明了一套从DNA复制RNA的系统，包括一种我们成为“原核糖体”的机器。这样，一个更复杂的生物就诞生了。它的遗传配方存储在DAN里，它体内的各种机器是蛋白质做成的，而RNA则在两者之间架起一座桥梁。这个生命名叫“露卡（Luca）”&ndash;所有物种在分化之前最后的一个共同祖先。</p>

<h2>第二号染色体 物种</h2>

<p>生存机器是那些大型的、用血肉构造成的生物体，它们善于把局部的熵减少（制造秩序）以更好地复制自己体内的基因。它们能做到这一点，是因为它们经历了漫长的、大规模的尝试与失败：自然选择。一开始，这只是一个比较简单的、化学反应是否高效的问题：最好的生物体是那些发现了怎样把其他化学物质转变成为DNA和蛋白质的细胞。这个阶段持续了大约30忆年。大约10忆年前，很突然地出现了一种新的世界秩序：更大的、多细胞的生物体被发明了，大型生物爆炸性地大批出现了，这个被俗称为寒武纪大爆发的过程大约持续了1000万到2000万年。此后，进化的路线朝智慧走去&ndash;进化出越来越大的大脑。即基因们发现了一种实现自己野心的新方法：制造一种不仅仅能够生存，而且还具有智慧行为的机器。</p>

<p>猿类动物都有24对染色体，只有人类是例外，在人体中两对猩猩的染色体融合成一对了。在人类进化过程中，发达的大脑、食肉、缓慢的发育、在成年之后依然保留孩童时期的特征，这些必须同时存在。如果不吃肉，需要大量蛋白质的大脑就成了昂贵的奢侈品；如果头骨过早定型就不会有大脑所需的空间；如果不是发育缓慢，就不可能有时间去学习如何充分发挥一个发达大脑所具备的优势。这整个过程可能是由性选择来推动的，随着男女身体大小方面的性别差异减少，食物生产上形成的性别分工（狩猎采集），交配方式变为一夫一妻制，后代的质量，而不是数量更为重要。</p>

<p>通过性别分工而培养出来的一些习惯也延伸到了生活的其他方面：我们擅长分享东西，这就带来新的好处：每个个体可以发展专门的技能。这种专业分工，是我们这个物种成适应环境的关键，因为它促进了技术的发展。</p>

<p>自然选择就是基因改变其序列的过程。在改变的过程中，那些基因留下了一份我们这个星球上40亿年的生命的记录。换句话说，我与我们过去的记录是刻在我们的基因里的。基因组中大约2%的成分讲述了我们在生产环境与社会环境方面的进化与黑猩猩的有什么不同。基因是动物结构的配方，也是动物行为的配方。</p>

<h2>第三号染色体 历史</h2>

<p>我们从父母那里得到的不是别的，是一份规模巨大的配方，用来制造蛋白质和制造蛋白质所用的机器。</p>

<p>孟德尔发现了生物学里的“原子理论”&ndash;遗传特征不会混杂起来，这种不可分的遗传颗粒最终被定名为基因。</p>

<p>人工诱发突变是现代遗传学的开始，穆勒因此获得诺贝尔奖。
弗兰西斯.克里克发现了DNA结构，因此获得诺贝尔奖。</p>

<p>基因通过重复含密码子的段落来减少突变的影响。</p>

<h2>第四号染色体 命运</h2>

<p>基因的存在不是为了导致疾病的。生病是因为正常基因发生了突变。</p>

<p>亨廷顿舞蹈病是遗传的一个极端，它是纯粹的宿命论，一点也不受环境因素的影响。</p>

<p>整个基因组的基因突变率，在男性里是女性的五倍，因为男性DNA在男性的一生中都要不断地复制以提供新鲜的精子。</p>

<p>至报告疾病检查结果却不给病人提供治疗的方法，是给人痛苦的一种方法。现在能够检测是否患有亨廷顿舞蹈病，却无法找到治疗的方法。“具有智慧，却不能从这智慧中获益，那么剩下的只有悲哀。”</p>

<h2>第五号染色体 环境</h2>

<p>这个世界是灰色的而不是黑白分明的，事物之间的差别可以很细微，描述事物的时候要很多修饰词、很多“视情况而定”。</p>

<p>多样性与多元论：多效性是指多个基因的多种效应。</p>

<p>哮喘病是呼吸道的收缩、阻塞，这时由肥大细胞释放的组胺引起的，肥大细胞又是由它们内部的免疫球蛋白E激活的，免疫球蛋白E本身又是因为它们能够识别的分子来到而被激活的。所以环境中的不卫生状况非常容易诱发哮喘。</p>

<p>你最好养成习惯接受类似寻找哮喘基因的不确定性。我们对基因组研究得越深，它就越显得不那么具有宿命意义。不那么黑白分明的不确定性、易变的因果关系、模模糊糊的先天因素，这些事这个系统的特征。基因组跟生命一样负责和有很强的不确定性，因为它就是生命。</p>

<h2>第六号染色体 智慧</h2>

<p>等位基因是遗传信息中同一段落的不同形式，对于环境有同样的适应性，都是“合法”存在的。正常的基因有不止一种形式。如不同颜色的眼珠基因。</p>

<p>科学应该是建立假说然后试图证伪他们而前进的。</p>

<p>Robet Sternberg 提出智慧可以分为三类：分析能力、创造力、实践能力。学习和智商测验注重的是分析能力。各种智力能力不是独立存在的，而是互相关联的。Charles Spearman把这成为广义智慧，或者简称g。</p>

<p>事实上，一个婴儿适应一种新的感官刺激所需的时间跟他今后的智商有很强的关联。</p>

<p>“智慧基因”不是在真空里运作的，智慧需要环境刺激才能发展。</p>

<p>子宫的重要性是最近才被人们认识到。子宫里发生的各种事件与变化对于我们智力的影响，比我们出生之后父母对我们的教育所起的作用高两倍。但即便是属于先天因素的那些基因，直到青少年时期都在表达，因此不要在一个孩子很小的时候就对他的智力下定论。</p>

<p>智商大约有一半是由遗传决定的，不到五分之一是由你和你的兄弟姐妹们共同的环境-家庭-决定的。剩下的是子宫的作用、学校的作用和其他外部影响，如朋友的影响。此外，智商不仅随年龄会有变化，遗传因素对它的影响也会变化。随着年龄增长，积累了很多经验，遗传因素对它的影响也增加了。在儿童时期，遗传对智商的影响大约占45%。到了青春后期，就上升到75%了。在你长大的过程中，你内在的智力逐渐显露出来，其他人对你施加的影响渐渐消失。你会选择与你的能力、喜好相符的环境，而不是调整你的能力、喜好去适应环境。这证明了两个至关重要的观点：基因的影响并不是从精子和卵子结合的时候就固定不变了，环境的影响并不是一直不断地累积的。智力是遗传的不等于它是不变的。</p>

<p>在一个公平的社会里，遗传的作用比在一个不公平的社会里大。事实上，有些荒诞的是，一个完美的英才社会的定义，就是一个人的成就取决于他的基因的社会，因为所有人都有同样好的环境。在身高方面，我们已经在飞速地接近这样一个状态了。今天，随着儿童营养的普遍提高，个体之间身高的差异主要是由遗传原因决定的。</p>

<p>智商测试方面最著名的先驱者法国人阿尔弗雷德.比内强烈地提倡过：智商测试的目的不是为了奖励那些有天赋的孩子，而是为了更多关注那些没有天赋的孩子。</p>

<p>平均来讲，智商高的人比智商低的人整个身体都更对称。这一事实说明人在母亲子宫里和在童年时期身体所受眼里比较少，也许他们的身体有更高的抗压性。也就是说，智商的遗传性是由那些鱼环境相互作用的基因决定的。你遗传到的不是一个高智商，而是在某种特定环境下发展出高智商的能力。支持这一理论的证据来自于所谓的“弗林效应”。新西兰政治学家詹姆斯.弗林注意到：在世界各国，一直以来人们的智商都是在增长的，大约每十年增长三点。原因很难确定，也许原因与身高的增长一样，也许智商测试并没有测到人的内在智力只测验在日常生活中常见的抽象推理能力。</p>

<p>一个孩子所处的环境不仅与他的基因有关，也与外界因素有关，而一个孩子有能力到甚至创造出适合自己的环境。智力的遗传特性也许不仅仅是先天能力的遗传，也是后天因素的遗传。</p>

<h2>第七号染色体 本能</h2>

<p>人类的行为表明，人类比动物有更多的本能，而不是更少。</p>

<p>为了学习人类语言，我们需要有的是人类语言的本能。语言的本能是在听到的语言上其作用，而不是记住的语法规则上起作用。儿童语言能力的发展都要以特定的方式经过特定的阶段。一个敏感期，在它之内有什么东西可以被学会，在它之外则不行，这时动物本能的明显特征。语言处理一般是左半脑的功能：布鲁卡区的功能看起来就像是制造话语，而威尔尼克区则是在告诉布鲁卡去应该制造什么样的活动。</p>

<p>当人类祖先第一次进化出语言本能的时候，它是从发生和声音处理的区域发展出来的（布鲁卡区）。发生于声音处理的区域依然存在，与脸部肌肉和耳朵都有链接，但是语言本能的区域在这之上发展起来了，形成另一种内在能力，可以把自己这个物种其它成员所用的语法规则加在由声音而产生的词汇上。</p>

<p>进化心理学寻找的是共同的人类行为&ndash;人类行为普遍性，并试图了解这些行为是为什么和怎样成了部分是本能的行为。因此，它假设个体之间没有区别，起码对于特别重要的行为是如此。这时因为自然选择的任务就是磨掉个体的差异。如果一个基因的一种形式比其他形式好得多，那么，好的这种形式很快就会成为普遍的形式，而差的形式就被淘汰了。因此，进化心理学得出这样一个结论：如果哪个基因有几种不同的形式，那么这个基因肯定不会很重要。</p>

<p>假设大脑里每一个区域都是通过参考发育过程中在胚胎大脑里建立的一系列化学梯度才得以发育为成年的形式，也就是化学梯度形成了给神经元的地图。那些化学梯度本身可以是遗传机制的产物。有些基因和蛋白质能够准确地知道它们在胚胎里的位置，这虽然难以想象却无疑是存在的。这样的行为基因是现代遗传学研究最激动人心的发现之一，它与发育基因一样让人费解，但是自然从来就不会因为人类对她不理解而改变自己的行事方式。</p>

<h2>X和Y染色体 冲突</h2>

<p>身体是基因的载体和战场，为的是基因自己的雄心壮志。</p>

<p>在我们的过去，有某一个时刻，我们的祖先从像两栖动物那样让环境温度决定性别，改成了用遗传决定性别。在人类里，决定性别的基因使我们成为男性，如果没有这些基因就是女性，在鸟类中却相反（雄性鸟类有两条X基因）。这个基因周围很快就吸引了一些有利于男性的基因，这些次要的基因就变得对一个性别有利而对另一性别有害。这样的基因就被称作性别对抗基因。当另一个基因突变抑制了两条性染色体之间进行正常遗传物质交换时，性别对抗基因就可以分道扬镳了。一个基因在Y染色体上的形式可以利用钙来造出鹿角，而它在X染色体上的形式却可以用钙来造出乳汁。这样，一对中等大小的染色体，本来是各种各样“正常”基因所在地，就能被性别决定这个过程给“劫持”了，最终成了性染色体，各自“吸引”了不同的基因。在Y染色体上积累了对雄性有好处而对雌性有坏处的基因，在X染色体上则相反。</p>

<p>在所有的性染色体中有四分之三是X，只有四分之一是Y，换句话说，一条X染色体三分之二的时间实在雌性体内度过的，有三分之一的时间是在雄性体内度过的。这样X染色体进化出攻击Y染色体的能力的可能性，是Y染色体进化出攻击X染色体能力的可能性的三倍。结果就是Y染色体扔掉了尽可能多的基因，并剩下的“关闭”，以减少受到的攻击。现在人类的Y染色体上绝大多数都是没有编码功能的DNA，但有一个极为重要的基因SRY基因，这个基因启动一系列事件，导致胚胎雄性化。这个基因因为X染色体上时不时出现攻击的推动作用，而进化得非常快。</p>

<p>威廉.赖斯认为性别对抗在各种环境下都是存在的，所留下的线索就是那些飞速进化的基因。比如胎盘可能是由来自父方的基因控制的、寄生在母体内的东西，它不顾母体的反对，试图控制母体内的血糖水平以及血压，以利于胚胎的成长。他的同事布雷特.霍兰认为雄孔雀的尾巴是进化来吸引雌孔雀的，但这是因为雌孔雀对这种吸引力越来越不感冒推动的。就这样，性别之间的选择是“勾引”基因与“抵制”基因之间的对抗的表达。这样每一个基因的进化都刺激着另一个的进化，即使这两个基因是被同一个人拥有。它们之间是赖斯与霍兰所说的“位点之间的竞争进化”。在过去的300万年间，推动人类智力进化的也许正是这样一个过程。马基雅维利理论认为：在操纵别人和抵御操纵这两者的“军备竞赛”中，体积大的脑子是很必要的。赖斯与霍兰写到：“我们称做智力的现象，也许只是基因组之间冲突的副产品。这种冲突，是用语言做武器的进攻与防守基因之间的冲突”。</p>

<p>同性恋有高度的遗传性。同性恋在当代人群中占有可观的比例，或许有4%的男性毫无疑问是同性恋，还有更少的一些人是双性恋。</p>

<p>现在变得越来越清楚的是，性取向与出生的顺序有关。在一个已经孕育过男孩的子宫里出生的男孩成为男同的可能性更大。因为Y染色体上三个叫做H-Y的抗原会“挑衅”母体的免疫系统产生一种反应，从而增强了母体的免疫系统，母体的这个免疫系统会对胚胎大脑的男性化起部分抑制作用，但却不会影响生殖器官的男性化。</p>

<p>基因之间有冲突。基因组是父辈基因与孩子的基因，男性基因与女性基因之间的战场。</p>

<h2>第八号染色体 自身利益</h2>

<p>人类的基因组里有97%的基因是垃圾基因，有些时候也被叫做“自私的基因”，这种叫法比较准确。这些东西里有些是一种特殊的基因，但大多数就是一段一段的永远也不会被转录成蛋白质语言的DNA。</p>

<p>好笑的是垃圾DNA是人们在人类基因组里发现的第一个有真正实际用途、在日常生活里能够用到的东西。它导致DNA身份验证。在整个人类基因组中最常见的蛋白质配方是编码一个叫做逆转录酶的蛋白质的基因。逆转录酶基因对人类来说一点用处也没有，它把一个基因RNA拷贝翻录成DNA，又把这段DNA“缝”回基因组里去。它是于一个基因的回程车票。这样就给了病毒可乘之机&ndash;把病毒基因整合到人体的基因组里去。人类的基因组中含有几千种病毒的几乎完整的基因组，大多数现在已经不再活跃，但基因组却没有能够把它们清理出去，只是通过甲基化把它这些基因关闭了。</p>

<p>自然选择的进化方式不是物种之间的竞争，而是关于基因之间的竞争。道金斯语：基因是自私的复制机器，而身体是可以丢弃的载体。大约35%的人类基因组是各种形式的自私DNA。它们如此之多的原因很简单，它们善于复制自己。它们的基因中有一小段序列，能够把它们自己很好地复制出来。这些短序列中的一种就被用来当做“基因指纹”。DNA指纹验证在亲子鉴定中被发扬光大，这引发精子竞争理论。个小的黑猩猩是随机交配的，因此需要产生大量的精子以频繁交配，而个大的大猩猩对他们的配偶是完全占有，它们的精子没有精子对手。所以不到大猩猩身体四分之一的黑猩猩的睾丸是大猩猩的四倍大。</p>

<h2>第九号染色体 疾病</h2>

<p>血型：A，B，AB和O型。A和B是同意基因“共同显性”的两种形式，O是这个基因的隐性形式。</p>

<p>血型与一些疾病有者某种关联，某种血型都有更容易感染的疾病。由此某个时期特定血型的人较多，但优势总是在较少的基因型那边。所以，A和B都不会消失，因为它们中的任何一个如果少了，它就会变成“时髦”的东西，又“流行”起来。在生物学上，这叫做由频率决定的选择，而这是我们的基因为什么如此多样的最常见原因之一。</p>

<p>不管你往哪里看，基因多样性背后的原因好像都与传染病有关。从某种意义上说，基因组就是一份我们过去的病史的数码记录，是每一个民族每一个种族的医学圣经。</p>

<p>基因组是不断变化的动态图景。生态学与遗传学一样不是关于平衡的学科，它们是关于变化的学科。变化，再变化，没有任何事是永远不变的。</p>

<h2>第十号染色体 压力</h2>

<p>有五种至关重要的激素是由胆固醇出发制成的，每一种都有独特的功能：孕酮、醛固酮、皮质醇、睾酮和雌二醇。它们总称类固醇。这些激素与身体中的基因的关系既亲密又迷人，却也让人不安。</p>

<p>皮质醇，人体内几乎每一个系统都用得上皮质醇，它名副其实地是一个把身体和精神结合起来的激素，因为它可以改变大脑的结构。皮质醇干预免疫系统、改变耳朵、鼻子和眼睛的灵敏度、改变各种身体机能。当你的血管里流动着很多皮质醇的时候，你就处于压力之下，这是压力的定义。皮质醇与压力几乎就是同义词。皮质醇最惊人的效应之一是它能够抑制免疫系统的工作。这是通过激活基因来做到这一点的，它会抑制免疫白细胞的警惕性，从而使人更容易得病。</p>

<p>脑子里的下丘脑会发出一个信号，让脑垂体释放一种激素，它会告诉肾上腺皮质去制造和分泌皮质醇。下丘脑则是从大脑里有意识的那些区域接受指令，而这些区域又是从外部世界中得到消息。这是如同经济系统一样的分散没有控制中心的系统。大脑和身体是同一个系统的两个部分。如果大脑在回应心理上的压力时刺激了皮质醇的释放，而皮质醇抑制了免疫系统的活性，从而一个潜伏在体内的病毒感染得以发作起来，或是一个新的病毒得以进入身体，那么症状虽然是生理上的，原因却是心理上的。如果一种疾病影响到大脑，而从改变人的心情，那么原因虽然是生理上的，症状却是心理上的。这个题目被称作心理神经免疫学。焦虑的人比起心情好的乐天派，更容易得阵发性的生殖系统疱疹。</p>

<p>基因是需要被激活的，而外界事件&ndash;或者说自由意志控制的行为&ndash;可以激活基因。即生理变化可以被行为调动。</p>

<p>一个人在工作中的地位比他是否肥胖、是否吸烟和是否血压更高更能准确地预示这个人是否有心脏病。心脏病是自己无法控制自己的生活时出现的症状。</p>

<p>行为远不是受我们的生物特性所控制，我们的生物特性常常是受我们的行为控制的。心理变化先于生理变化出现。精神驱动身体，身体驱动基因组。</p>

<p>睾丸酮和皮质醇一样可以抑制免疫系统，这就解释了为什么很多物种里雄性比雌性更容易感染，染病之后的死亡率也更高。雄性体表那些“装饰物”的质量以某种方式反映了他的基因的质量，尤其是反映了他对流行疾病的抵抗力。因为睾丸酮越多，炫耀性体征就越明显，其免疫系统就越强大，其基因自然很牛逼。这个理论叫做性别选择下的免疫竞争力缺陷。</p>

<h2>第十一号染色体 个性</h2>

<p>个性是指内在的、个性化的性格特点。</p>

<p>多巴胺受体的任务是在伸到神经细胞膜以外的突触处，等待接纳化学物质多巴胺。多巴胺是一种神经递质，在得到一个电子信号之后，从其他神经细胞顶端被释放出来。当多巴胺受体与多巴胺接触的时候，多巴胺受体就会使它自己所在的神经细胞发出自己的一个电子信号。这就是大脑工作的方法：电子信号导致化学信号再导致电子信号。</p>

<p>多巴胺也许是大脑里主管“动机”的化学物质。多巴胺太少，一个人就会失去做事的动机和主动性。多巴胺太多，一个人就会很快厌倦目前的事，而频繁地寻找新的冒险。</p>

<p>父母的正确抚养方法能够改变内在的个性。如果不把人们根本的性格倾向说成是疾病，而是允许他们是什么样的人就当什么样的人-即让他们与自己天生、内在的性格达成“谅解”，好像是最可靠的提升自信和提高人际交往能力的办法。</p>

<p>意识到一种性格是天生的，远不是一个判决，很多时候是一种解脱。</p>

<p>多巴胺和去甲肾上腺素是所谓的单胺。它们的一个表亲，5-羟色胺，是存在于大脑里的另一种单胺。它是个性的化学表现，很复杂，其特点很难比抓住。如果5-羟色胺水平异常地高，你可能会是一个有强迫症的人，有洁癖，异常小心，甚至会到神经质的地步。如果5-羟色胺水平异常地低，你可能易有冲动行为。治疗胆固醇会降低5-羟色胺的水平，提高暴力水平，因而是有害的。5-羟色胺水平并不是先天的和不变的，它们本身就是社会地位的产物。你的大脑里的化学反应是由你接收到的由社会环境传来的信号所决定的。生物结构决定行为，社会又决定生物结构。社会对行为的影响是通过启动与关闭基因而完成的。这就是基因与环境的现实情况：它们之间复杂的相互作用形成了一个迷宫，而不是一个决定另一个的单向通道。我们的基因不仅事先已编好程序去产生社会行为，它们也对社会行为做出适当的反应。</p>

<h2>第十二号染色体 自我组装</h2>

<p>同源发育：所有的生物体都是由有秩序的一系列部件或“节”所组成。</p>

<p>Hox基因：科学家发现在同一条染色体上排列在一起的八个同源框基因。它们的排列顺序与它们所影响身体结构的顺序是一样的。所有的同源框基因都是用来激活或关闭其他基因的。最前面的基因不仅仅是表达在身体的最前部，同时也是第一个表达的基因。在动物进化史上也有同样的顺序。这样Hox基因就重演了历史上的进化过程。“个体发育重现种系发育”。胚胎发育是以它的祖先进化的同样顺序出现的。</p>

<h2>第十三号染色体 史前</h2>

<p>基因为来自语言学的证据提供了支持：拥有新技术的人群的扩张与迁移在人类的进化史上占有重要地位。在一定程度上，语言与人群是共同迁移的。</p>

<p>世界的基因地理学既有绘图上的作用也有功能上的作用。举两个例子：酒精和奶。消化酒精的能力是为抵抗喝脏水冒感染疾病的风险而喝蒸馏水的选择。消化乳糖的乳糖酶基因是游牧人群为适应游牧生活方式进化而来。这时一个重要的发现，它提供了一个文化上的变化导致进化上的、生物结构上的变化。基因们可以被自愿的、自由意志所选择的、有意识的行为诱发而产生改变。</p>

<h2>第十四号染色体 永生</h2>

<p>缺少端粒酶会导致衰老，添加端粒酶则会使一些细胞长生不老。</p>

<p>每条染色体除了两头的末端，都能够被复制。在两端，有一些重复出现的没有意义的末端结构被称作“端粒”。每次染色体被复制的时候，端粒的一小部分就被丢掉了。几百次复制之后，染色体末端已经短到使有意义的基因有了被丢失的危险。这就是为什么在一定年龄之后细胞就变老，不在兴旺成长。</p>

<p>在卵细胞和精子细胞中，基因不会被丢失的原因，是因为端粒酶的存在。它的任务是修复被损坏的染色体末端，把端粒重新加长。这些端粒酶基因也许是我们所能找到的基因里面最接近于“青春基因”的东西了。端粒酶好像是使细胞长生不老的灵药。</p>

<p>每一个物种都带有一个程序，里面是计划好的衰老过程，用来与它的期望寿命和它结束生育年龄相适应。自然选择小心地除去了所有那些可能在生育年龄到来之前或生育之中损害身体的基因。它是通过杀死所有在年轻时表达这些基因的个体或降低它们的生育成功率来达到这个目的的。所有其他个体都可以生育。但是，自然选择无法除掉那些在生育年龄过后的老年时期损害身体的基因，因为在老年时期生育不会成功了。</p>

<p>自然选择把我们的身体的各部件都设计得能够坚持到看到我们孩子的独立，不再更多。自然选择把我们的端粒长度控制在这样一个范围：它们可以经受得起75~90年的磨损、消耗和修复。</p>

<p>癌症要求活跃的端粒酶。使一个肿瘤精神焕发的，是青春和长寿的生物化学灵丹。癌症是典型的老年病，其主要风险因素就是年龄，环境的风险因素，部分在于它加快了衰老的过程。那些容易得癌症的地方往往是那些在一生中经常要进行细胞分裂的组织，不管是要进行修补还是别的什么原因：皮肤、睾丸、乳房、结肠、胃和白血细胞。</p>

<p>这样我们有了一个矛盾：缩短了的端粒导致衰老导致癌症的高风险，而保持端粒长度的端粒酶却是肿瘤的催化剂。</p>

<h2>第十五号染色体 性别</h2>

<p>一个基因上带有印记，标识着它是从父亲还是母亲那遗传而来。</p>

<p>遗传自父方的基因负责制造胎盘；遗传自母方的基因负责胚胎大部分的发育，特别是头部好大脑。父亲的基因不太信任母亲的基因能够造就一个侵入性足够强的胎盘，所以它们自己来完成这项工作。基因标记是有胎盘的哺乳动物与种子依靠母体才能存活的植物所特有的。</p>

<p>带有标记的基因通常会在这样相互作对的基因对里被发现。基因标记几乎没有任何内在的目的性；它只是基因自私理论和两性冲突的一个具体事例。</p>

<p>父方的基因在脑子里比较少，只在控制感情的“皮质下感情系统”的下丘脑、杏仁体、视前区的发育上出了些力。如果我们相信父方的基因不放心让母方的基因去造一个胎盘，那么大脑就是母方的基因不信任让父方的基因去造的，因为脑皮质需要完成与母方的亲友好好相处这样一项任务，而下丘脑是个自大的器官。我们有可能带着母亲的思想和父亲的情感在这世界上生活。</p>

<p>女性特有的行为应该只来自父方的X染色体上表达。如果它们也来自母方的X染色体上表达，它们就可能也会出现在男性身上，或者它们在女性体内会被表达得太多了。</p>

<p>有一个在正常情况下只在父方的X染色体上表达的基因，这个基因通过某种方式促进社交的适应能力。这个结论有深远的影响。第一，儿童自闭症、阅读困难症、语言障碍以及其他与人相处方面的问题都是在男孩中比在女孩中更普遍。第二，在最早开始的自主活动里，男孩和女孩就有系统的差役。男孩有更强的竞争性，女孩则对人、衣服和语言更感兴趣。先天因素在性别的决定上是有作用的。</p>

<h2>第十六号染色体 记忆</h2>

<p>自然选择的过程就是从环境中提取有用的信息并把它在基因里储存起来，你也许可以把人类基因组看成是40亿年积累起来的学习成果。</p>

<p>学习的过程就是改变神经细胞间突触的形状与功能，把以前没有连接或连接很弱的地方产生新的或增强的连接。整合蛋白的能力很重要，因为长效强化，需要突触性质的改变，而这个改变是通过整合蛋白把突触之间的连接“绑得更粗”。</p>

<p>鼻周皮质，在这里，来自视觉、嗅觉、听觉以及其他感觉器官的信息经过处理成为记忆之后，信息被送到海马区，然后又送到间脑，暂时储存。如果某个信息被认为是值得长久储存的，他就以长期记忆的形式被送回新皮质储存起来。记忆从中心颞叶传到新皮质的过程似乎有可能是在夜间睡觉的时候发生的。</p>

<h2>第十七号染色体 死亡</h2>

<p>学习过程中的经验强化了一部分连接，也导致了那些没得到强化不必要的连接衰弱和消失，因此把大脑从一个多用途的机器变成了很专门的机器。环境把多余的突触去掉以使大脑功能更强。这个修剪的过程，除了让一些突触连接消失之外，还有其它意义，它意味着整个细胞的死亡。</p>

<p>自私的细胞总是倾向于分裂从而复制自己，就好像它抵御不了基因要复制自己的古老召唤一样。如果这个细胞的分裂得不到制止，结果就是我们所说的癌症。但是，通常它是会被制止。所有身体比较大的动物都在细胞里带有一套精巧的开关，在细胞发现自己变得具有癌症性质的时候，这个装置可以用来引起细胞自杀。最著名和最重要的开关是TP53基因，它的主要功能就是防止癌症的产生。</p>

<p>癌症是细胞组织过多的生长，这是基因的病变引起的，因此癌症并不遗传。</p>

<p>癌基因是鼓励细胞生长的基因，肿瘤抑制基因则是识别细胞的过度增长，并使其停止。一个肿瘤里的细胞必须是同时具有开起了癌基因与关闭了肿瘤抑制基因。</p>

<p>TP53基因上的突变几乎是致命的癌症最典型的特征，它是一连串基因突变（癌基因、肿瘤抑制基因等突变）的最后一步。一个肿瘤越大，它就越可能进展到下一个步骤的病变，并且快速繁殖增多的细胞基数增大了进一步突变的可能性。因此越早诊断肿瘤非常重要。</p>

<p>癌症之所以与年龄密切相关，是因为我们活的越长，基因组里面就积累了越多的错误，在同一个细胞里一个癌基因与肿瘤抑制基因的突变可能性就越大。</p>

<p>p53是由TP53制造出来的蛋白质，它主要靠激活其他基因来告诉细胞做两件事：要么停止复制它的DNA，直到损伤被修复，要么自杀。因此p54得到了“基因组卫士”的昵称，甚至被叫做“基因组的守护天使”。TP53好像是在编码集体利益，它就像一个士兵嘴里含的自身药片，当它发现这个士兵要叛变了，就开始融化杀死士兵。以这样方式进行的细胞自杀叫做“程序性死亡”。它是身体对付癌症的重要武器，是最后一道防线。所有抗癌疗法之所以有效，是因为它们改变了p53及其同伴，因而引发程序性死亡。</p>

<p>化学药物疗法和放疗法之所以有效不是它们杀死了细胞，而是它们给DNA带来一些小小的损伤，这个损伤刚好能够提醒p53，然后p53会告诉细胞采取自杀行动。因此这些疗法是促使身体帮助自己的疗法。</p>

<p>癌基因在没有突变的情况下是动物一生中细胞生长于繁殖所必需的：皮肤需要不断更新，新的血液细胞需要产生，伤口需要被修复等等。</p>

<p>亨廷顿氏病是无计划的、过多的脑细胞的程序性死亡，而这些脑细胞一旦死亡就无法得到补充&ndash;因为这些脑细胞不是空白细胞，而是成长过程中被学习所塑造过蕴含经验的细胞。这就是为什么有些大脑损伤是不可修复的。</p>

<p>在人类胚胎卵巢发育过程中，5个月大的胚胎里，有大约700万个生殖细胞，到出生时，就只有200万个了，在这200万个里，只有400个左右会进入排卵过程。剩下的大多数都是通过程序性思维被除掉了。这是大自然的优化人种过程。</p>

<h2>第十八号染色体 疗法</h2>

<p>操作基因需要“剪刀”与“浆糊”，自然界为了她自己的目的已经把两者都发明了。浆糊叫做连接酶，剪刀叫做限制性内切酶。现在知道400中不同的限制性内切酶，每一种识别不同的DNA字母序列，然后把那一处切开。</p>

<p>1970年发现的逆转录酶病毒能够从RNA制造DNA拷贝，使得基因疗法变得可行。一个逆转录酶病毒带有由RNA写成的信息，它基本上是这么一个意思“做一份我的拷贝，把它缝到你的染色体里去”。</p>

<p>对于基因技术的运用命令很大的伦理压力与环保压力。</p>

<p>但对于转基因作物的反对，是出于对新技术的仇恨而不是对环境的热爱。一则转基因作物经受了大量的安全性实验，在不同物种之间进行基因交换，比我们所料想的要普遍。二则：基因改造的后果是提高对疾病和害虫的抵抗力以减少化学喷雾的使用；粮食产量的增长也减少了对土地的开发，反过来保护了环境。</p>

<p>同源基因重组利用了这样一个事实：修复破损DNA的机制通常是用另一个配对染色体上富余的那个基因作为模板。同源基因重组不仅可以修补基因，还可以做想法的事情：用安插有问题的基因去故意破坏正常工作的基因。这样做的结果是所谓的“剔除”老鼠。转基因动物就是利用“剔除”技术获得特定功能的动物。</p>

<h2>第十九号染色体 预防</h2>

<p>任何医疗技术的进步都带来一个道德难题。如果一个技术可以挽救生命，即使有风险相伴，不发展和应用它也是道德上的错误。</p>

<p>检查某人是否患有一种无药可治的病，说的最好听，也是值得怀疑的。</p>

<p>基因检测技术的运用会动摇保险业的基础，雇佣歧视。我的基因组是我的财产，不是国家的。我的基因我做主，是否做基因检测以及和谁分享我的基因内容都应该由我自己决定。</p>

<h2>第二十号染色体 政治</h2>

<p>对瘙痒症的研究，遗传学家普鲁西纳发现了PRP基因（抵抗蛋白酶的蛋白质）。PRP是老鼠与人体内正常的基因，它制造一个正常的蛋白质。它不是一个病毒的基因。但是，它们的产品，名叫蛋白侵染子的，是一个有着不同性质的蛋白质，它可以突然改变自己的形状，变成一个又硬又稠的东西，抵御住所有想要摧毁它的企图，并结成一团，破坏细胞的结构。这种新型的蛋白侵染子有能力改变正常的蛋白侵染子，使其成为像自己一样的形状。它不改变蛋白质的序列&ndash;蛋白质与基因一样也是由长长的数码序列组成&ndash;而是改变蛋白质的折叠方式。</p>

<p>蛋白侵染子的发现冲击力弗拉西斯.克里克那个遗传学的中心教义。它削弱了前面宣讲的内容：生物学的核心是数码式的。蛋白侵染子系统是个逻辑系统，不是数码系统。它的改变不是序列上的而是形状的改变，它还与剂量、位置等有关。</p>

<p>看来，蛋白侵染子引起的不同疾病的不同症状，是不同的大脑区域被侵蚀的结果。</p>

<p>蛋白侵染子疾病是一种链式反应引起的，一个蛋白侵染子把它的邻居变成跟它一样的形状，它的邻居再去改变其他的，就这样呈指数级地继续下去。</p>

<p>疯牛病就是一种蛋白侵染子病。就科学家们所关心的来说，不同物种之间口腔传播这种病的危险小得几乎不存在。但对政治家来说，安全是个绝对的概念，不是相对的。他们想看到的不是仅有个别人患病，而是没有一个人患病。这是个政治问题。禁止进口某国牛肉的决策往往夹杂着的非安全的经济利益在里面。</p>

<h2>第二十一号染色体 优化人种伦</h2>

<p>唐氏综合症是因为人类内有一条能在健康人体中有三份而不是两份的染色体。这时唯一的一条。唐氏综合症通的婴儿通常有大龄母亲。随着母亲年龄的增加，生出一个唐氏综合症婴儿的机会迅速呈指数级增长。</p>

<p>查尔斯.达尔文的第一代表兄臭名昭著的高尔顿提出了优化人种论：像改造其他物种那样改造人类自己。</p>

<p>优化人种论经历了从鼓励最“优秀”的人以优化人种“优基因”的名义生育到阻止最“差”的人生育的过程。“最差的”很快就成了“心智虚弱”的意思。很多国家包括美国，德国，加拿大，瑞典等，通过了给“心智虚弱”的人进行绝育手续的法律，并真实执行了。英国以及其它罗马天主教影响力较大的国家没能通过优化人种的法律。</p>

<p>美国对于优化人种伦的热情多是来自反对移民的热情。</p>

<p>英国反优化人种论的韦奇伍德指出：优化人种论的谬误不是错误的科学理论，也不是因为在实际中不可行，而是它归根结底是对人的压制而且很残酷，因为它要求政府的权利得到保证，凌驾于个人之上。优化人种论的错误不在于它背后的科学，而在于强制的方法。优化人种与其他任何把社会利益置于个人权利之上的计划并无不同。它是人道上的罪行，不是科学上的罪行。</p>

<p>基因筛选是要让人以个人的身份用个人的要求来做出个人的选择。</p>

<h2>第二十二号染色体 自由意志</h2>

<p>在塑造性格与能力方面最有力量的环境因素之一是子宫里的总体状况。你无法改变它。</p>

<p>“美丽新世界”这个词现在已经有了这样的意义：集权统治与先进的科学手挽手实现的恶劣的社会。</p>

<p>20世纪30年代统治了德国的极端的基因决定伦者与同一时期统治了苏联的极端的环境决定论者，两个极端都很恐怖。</p>

<p>幸运的事，我们抵抗洗脑的能力相当强大。我们从遗传得到一种仇视权威的倾向，特别是在我们的青少年时期，我们用它来保护我们的本性。</p>

<p>人们从他们的基因和他们的同伴那里得到他们的性格，而不是从他们的父母那里。</p>

<p>基因确实影响行为。但是，环境依然相当重要&ndash;在所有行为中也许环境的总和都比基因重要。但是在环境的影响中只有小得惊人的一部分是父母影响的作用。</p>

<p>我们都把自己生活中的公共生活和私人生活分开，而且我们并不见得会把在一个圈里学到的教训或表现的性格拿到另外一个圈里。我们很容易地在两个圈之间切换。</p>

<p>如果基因能够影响行为，行为又能够影响基因，那么就有一个循环的因果关系。在一个循环反馈的系统里，简单的因果过程可以产生非常难以预料的结果。这种说法出自于混沌理论。这个理论说即使你了解所有决定一个系统的因素，你可能还是无法预测这个系统的发展轨迹，这是因为不同的因素之间相互作用的结果。即使是因果关系简单的系统也可能有混沌状态的行为。它们这样是因为“自激”性，在这里，一个行动影响下一个的初始状态，所以，很小的结果可能会成为很大的原因。</p>

<p>基因与环境的相互作用使我的行为无法预测，但是它们并非没有决定我的行为。在字词的空隙里，有着自由。我们永远不可能逃避决定性，但是我们可以在好的决定性和坏的决定性之间做出区别：自由的与不自由的。</p>

<p>让基因在它们自己的体内为自己作决定，这样一个月执著的信念使我们反对把自由丢给外界因素的最强堡垒。</p>

<p>自由意志不会由一个基因决定，而是由于基因相比无限宏伟、给人激励的力量决定：它是人类本性的综合，事先建立在我们的基因组里，具有灵活性，又是每个人所持有的。每一个人都有一个独特的与众不同的内在实体，这就是“自我”。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015年阅读统计]]></title>
    <link href="http://luozhaohui.github.io/blog/2016/01/01/reading/"/>
    <updated>2016-01-01T05:42:38+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2016/01/01/reading</id>
    <content type="html"><![CDATA[<h2>2015年阅读统计，本页面由代码自动生成</h2>

<h2>总计阅读 46 本</h2>

<h3>评价统计:</h3>

<p><img src="https://i.imgur.com/dSfkq35.png" alt="评价统计" /></p>

<blockquote><p>五星图书 18 本，占比 39.1%<br/>
四星图书 17 本，占比 37.0%<br/>
三星图书 7 本，占比 15.2%<br/>
两星图书 4 本，占比 8.7%</p></blockquote>

<!--more-->


<h3>标签统计:</h3>

<p><img src="https://i.imgur.com/ilbxuoA.png" alt="标签统计" /></p>

<blockquote><p>历史 7 本<br/>
思维 7 本<br/>
软件开发 5 本<br/>
哲学 5 本<br/>
政治 4 本<br/>
社会 3 本<br/>
人类学 3 本<br/>
文学 3 本<br/>
商业 3 本<br/>
教育 2 本<br/>
经济 1 本<br/>
法学 1 本<br/>
科学 1 本<br/>
心理 1 本</p></blockquote>

<h3>历史: 7 本</h3>

<h4>No.1 现代世界史（影印第10版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25831575/">现代世界史（影印第10版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25831575/">https://book.douban.com/subject/25831575/</a><br/>
出版信息：[美]R.R.帕尔默、乔·科尔顿、劳埃德·克莱默 / 世界图书出版公司·后浪出版公司 / 2014-1 / 188.00元（上下册）<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：非常合适的世界史入门，没看过《全球通史》不好比较，但作者能把各时期的发展趋势、脉络以及前后关联影响分析的头头是道，让全球历史长河连贯系统地展现在读者眼前。</p></blockquote>

<h4>No.2 你一定爱读的极简欧洲史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/5366248/">你一定爱读的极简欧洲史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/5366248/">https://book.douban.com/subject/5366248/</a><br/>
出版信息：约翰·赫斯特（John Hirst） / 席玉苹 / 广西师范大学出版社 / 2011-11-25 / 25.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：关于欧洲史非常不错的入门书籍，框架梳理的不错；行文有趣，翻译也给力，如公国伯爵对皇帝的态度是“帝力于我何有哉！”，又如伏尔泰评神圣罗马帝国“既不神圣又不罗马亦非帝国”。全书讨论这个问题Q：“今天的欧洲和欧洲引领的现代文明是如何形成的?”。A：“希腊罗马的科学精神+基督教+日耳曼蛮族入侵”的三元合力形成了多元化、弱政府、多方角力的欧洲社会。</p></blockquote>

<h4>No.3 蒋介石与现代中国</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10797092/">蒋介石与现代中国</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10797092/">https://book.douban.com/subject/10797092/</a><br/>
出版信息：[美] 陶涵 / 林添贵 / 中信出版社 / 2012-8 / 68.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：作者给蒋家父子都写了传，当看台版无删节版。此书以在蒋与美关系上着墨甚多，对共党评价甚低。作者树立了一位正心诚意的儒家基督信仰相结合的民族英雄。蒋在政治，战略上还是很有远见的，可是生不逢时，上位亦不在时。</p></blockquote>

<h4>No.4 革命年代</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4229282/">革命年代</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4229282/">https://book.douban.com/subject/4229282/</a><br/>
出版信息：高华 / 广东人民出版社 / 2012-7 / 42.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：高华名声在外啊，书中对民国以及老蒋败退台湾的论述并无新意，不过对延安文化文化的形成以及50年代国家级别的“整合”进程倒是有很多不错的见解。因为稀少而弥足珍贵，所以四星。</p></blockquote>

<h4>No.5 大门口的陌生人</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25918704/">大门口的陌生人</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25918704/">https://book.douban.com/subject/25918704/</a><br/>
出版信息：[美] 魏斐德 / 王小荷 / 新星出版社 / 2014-7 / 39.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：本书以英国侵略中国的两次鸦片战争为线索，研究这一历史时期广州和广东省的社会动态，如官府、绅士、团练、农民等对外国的态度；各自的活动、相互间的关系以及变化，从而揭示中国近代史的开始阶段的某些动向。</p></blockquote>

<h4>No.6 清代学术概论</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1005567/">清代学术概论</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1005567/">https://book.douban.com/subject/1005567/</a><br/>
出版信息：梁启超 / 上海古籍出版社 / 1998-01-01 / 9.20<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：对清代学术发展的脉络把握得非常到位，值得了解。“以复古为解放”，敢于质疑、勤于考证，于是依次质疑驳明性理学、宋学、汉学等等。</p></blockquote>

<h4>No.7 蒋介石传</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4210829/">蒋介石传</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4210829/">https://book.douban.com/subject/4210829/</a><br/>
出版信息：布赖恩·克罗泽 / 封长虹 / 国际文化出版社 / 2010-1 / 36.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：挺不错的传记，书中对各历史人物与历史事件的评价都挺中肯与客观，这一本算是极简版的传记，结合之前看过《蒋介石日记》，《蒋经国传》对蒋的了解更加形象具体了。</p></blockquote>

<h3>思维: 7 本</h3>

<h4>No.8 沟通的艺术（插图修订第14版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26275861/">沟通的艺术（插图修订第14版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26275861/">https://book.douban.com/subject/26275861/</a><br/>
出版信息：[美]罗纳德·B·阿德勒、拉塞尔·F·普罗科特 / 黄素菲、李恩 / 世界图书出版公司·后浪出版公司 / 2015-1 / 68.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：很全，很潮，很有根据的关于沟通的书籍。首先是要能认识自我的需求，其后学会倾听别人的需求，运用语言表达自己的感受与请求，从而促进关系。</p></blockquote>

<h4>No.9 非暴力沟通实践篇</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25985811/">非暴力沟通实践篇</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25985811/">https://book.douban.com/subject/25985811/</a><br/>
出版信息：[美]马歇尔·卢森堡 / 梁欣琢 / 江苏人民出版社 / 2014-10-1 / 32.00<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：用作者的治疗案例演示如何将非暴力理论在实践中落地。最后一章“实践灵性”道出了非暴力沟通的人性关怀与哲学理念，从这个层面上去理解就能明白为什么要运用非暴力沟通。因为育儿，看过《怎么听 孩子才会说，如何说 孩子才会听》《父母效能训练手册》《孩子把你的手给我》《沟通的艺术》等书籍，发现各位大师推崇的沟通理念与技巧都相似，足可见这种沟通方式的重要。</p></blockquote>

<h4>No.10 非暴力沟通</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3533221/">非暴力沟通</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3533221/">https://book.douban.com/subject/3533221/</a><br/>
出版信息：[美] 马歇尔·卢森堡 / 阮胤华 / 华夏出版社 / 2009-1 / 29.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：非暴力沟通四部曲：观察行为，体会感受，发现需求，提出请求。无论是表达自己还是倾听他人都可以用上非暴力沟通，这样的沟通方式误会最少，成效最大，其根基在于尊重与体会自己或他人的需求，提出建设性的方案来满足这些需求，这是爱的表达与沟通方式。在情侣、夫妻、父子等之间交流中都能得到实践应用。</p></blockquote>

<h4>No.11 娱乐至死</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1062193/">娱乐至死</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1062193/">https://book.douban.com/subject/1062193/</a><br/>
出版信息：[美] 尼尔·波兹曼 / 章艳 / 广西师范大学出版社 / 2011-6 / 29.80元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：如果它强加于自己很高的使命，或者把自己表现成重要文化对话的载体，那么危险就出现了。具有讽刺意义的是，这样危险的事情正是知识分子和批评家一直不断鼓励电视去做的。</p></blockquote>

<h4>No.12 稀缺</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26178426/">稀缺</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26178426/">https://book.douban.com/subject/26178426/</a><br/>
出版信息：塞德希尔·穆来纳森、埃尔德·沙菲尔 / 魏薇、龙志勇 / 浙江人民出版社 / 2014-11 / 56.90元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：稀缺会抢占心智带宽，专注力提高但关注面缩小，所以稀缺有利有弊。通过设置提醒、自动关联、在余闲的时候未雨绸缪等方式可以减少稀缺导致的失误。这是一本典型的商业书籍，书后湛庐文化说“对于商业图书来说，80%的精华价值可能仅占20%的页码”，所以看看豆瓣以及评论足矣。</p></blockquote>

<h4>No.13 人生有何意义</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/19956259/">人生有何意义</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/19956259/">https://book.douban.com/subject/19956259/</a><br/>
出版信息：胡适 / 九州出版社 / 2013-1 / 32.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：前半部分科学的人生观值得看看,后面自传部分可以不看也罢.这一本的内容参差不齐,不如&lt;容忍比自由更重要>,编者有堆砌的嫌疑.</p></blockquote>

<h4>No.14 习惯的力量</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/20507212/">习惯的力量</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/20507212/">https://book.douban.com/subject/20507212/</a><br/>
出版信息：[美] 查尔斯·杜希格 (Charles Duhigg) / 吴奕俊、曹烨 / 中信出版社 / 2013-3 / 42.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：习惯回路：暗示-惯常行为-奖赏，改变习惯不是要去掉这个回路，而是替换其中的惯常行为。全书就这么点东西，看第一部分足矣，其他部分是凑字数的。</p></blockquote>

<h3>软件开发: 5 本</h3>

<h4>No.15 编码</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4822685/">编码</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4822685/">https://book.douban.com/subject/4822685/</a><br/>
出版信息：[美] Charles Petzold / 左飞、薛佟佟 / 电子工业出版社 / 2010 / 55.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：从硬件与软件角度讲述计算机是如何工作的，综合了物理学，电学，电子学，数学等多方面的知识，从亲自组装一个手电筒开始，讲述其工作原理，然后扩展到计算机的基础设施，如何表示信息、存储信息、传输信息，如何进行加减运算等等。总的来说是非常不错的一本计算机工作原理科普书籍。作者亦是大牛，写过《Windows程序设计》这边经典大作，现已经出到第五版了。</p></blockquote>

<h4>No.16 理解Unix进程</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24298701/">理解Unix进程</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24298701/">https://book.douban.com/subject/24298701/</a><br/>
出版信息：Jesse Storimer / 门佳 / 人民邮电出版社 / 2013-6 / 29.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：介绍 unix 进程知识，简洁实用．</p></blockquote>

<h4>No.17 Objective-C高级编程</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24720270/">Objective-C高级编程</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24720270/">https://book.douban.com/subject/24720270/</a><br/>
出版信息：坂本一树 (Kazuki Sakamoto)、古本智彦 (Tomohiko Furumoto) / 黎 华 / 人民邮电出版社 / 2013-6-1 / CNY 49.00<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：对objc的内存管理机制以及block的实现原理讲得很透彻，对GCD的使用也介绍得很全面。适合进阶阅读。前面两个主题稍显啰嗦，总体还是不错的。</p></blockquote>

<h4>No.18 Android开发精要</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/11530748/">Android开发精要</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/11530748/">https://book.douban.com/subject/11530748/</a><br/>
出版信息：范怀宇 / 机械工业出版社 / 2012-8 / 69.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：如果说前面的两本都和 App 开发都没多大直接联系，那么这一本就合 App 开发有较大关系了。这一本的好处是比较系统全面地讲述 App 相关的各要素，从这个角度来理解框架中的那些部分直接和 App 开发相关又起什么作用。</p></blockquote>

<h4>No.19 Android应用性能优化</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/19976838/">Android应用性能优化</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/19976838/">https://book.douban.com/subject/19976838/</a><br/>
出版信息：[法] Hervé Guihot / 白龙 / 人民邮电出版社 / 2012-10 / 49.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：专门讲app优化的各种实用技巧嘛说不上，有点东拼西凑凑页数的味道，只能说有一些零散的知识点在哪里吧，但也并不多。</p></blockquote>

<h3>哲学: 5 本</h3>

<h4>No.20 先秦政治思想史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/5990878/">先秦政治思想史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/5990878/">https://book.douban.com/subject/5990878/</a><br/>
出版信息：梁启超 / 岳麓书社 / 2010-12 / 24.00元<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：任公不愧为学贯中西的国学大师，文笔、见地、治学思路都超凡脱俗，对先秦四大流派儒道墨法都有精辟的概述与对比辨析，并能中西对比。书中观点亦有瑕疵，如认为道家的出现晚于儒家，但总体瑕不隐瑜。若论国学入门，力推此书！</p></blockquote>

<h4>No.21 儒家哲学</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4097069/">儒家哲学</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4097069/">https://book.douban.com/subject/4097069/</a><br/>
出版信息：梁启超 撰 / 世纪文景 上海人民出版社 / 2009年11月 / 32.00元<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：任公以其深厚的国学功底高屋建瓴地讲了儒家哲学是什么，两千年的的变迁史以及研究哪些问题。曰：用功所在：“修己安人”，最高目的：“内圣外王”，修炼之路：“格物致知诚意正心修身”以达修己与内圣，“齐家治国平天下”以达安人与外王。根基在修身，修“智仁勇”以达德。又分别就儒家历代所辩论的问题以说明其变迁之路：性之善恶（孟荀）、仁义之内外（告孟）、理欲（宋儒）、知行（明儒）。最后讨论了儒家的三大问题：性善恶、天命、心体问题。</p></blockquote>

<h4>No.22 梁启超讲阳明心学</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25847282/">梁启超讲阳明心学</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25847282/">https://book.douban.com/subject/25847282/</a><br/>
出版信息：许葆云 评注、梁启超 著 / 陕西人民出版社 / 2014-3 / 25.00<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：孔孟之后，只有儒教儒术，而无儒学，要到阳明才再度重新重视仁义的内圣观念：致良知，知行合一，就是要有辨是非之心，为善去恶之行。两人的讲解都还不错。</p></blockquote>

<h4>No.23 中国文化要义</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1315213/">中国文化要义</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1315213/">https://book.douban.com/subject/1315213/</a><br/>
出版信息：梁漱溟 / 上海人民出版社 / 2005-05 / 25.00元<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：梁提出的中国的家族生活与西方的集团生活导致中西方文化差异，不敢苟同，尤其是西方的集团生活。我觉得“熟人社会”与“陌生人社会”的区别导致的更为精准。书中关于阶级区别的论述亦是大受马克思主义阶级论影响。除此之外，书中大部分观点都很正，如中国人向内求索于心，而西方人向外求索于物。</p></blockquote>

<h4>No.24 哲学家们都干了些什么？</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6425061/">哲学家们都干了些什么？</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6425061/">https://book.douban.com/subject/6425061/</a><br/>
出版信息：林欣浩 / 辽宁教育出版社 / 2011-5 / 26.80元<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：西方哲学演化与哲学家八卦史，八卦挺多，语言诙谐网络化有趣，入门可以看看，但错误也不少。</p></blockquote>

<h3>政治: 4 本</h3>

<h4>No.25 狂热分子</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3057556/">狂热分子</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3057556/">https://book.douban.com/subject/3057556/</a><br/>
出版信息：[美] 埃里克·霍弗 / 梁永安 / 广西师范大学出版社 / 2011-6 / 34.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：自我若是软弱无力，最多的自由又有何用？我们参加群众运动，是为了逃避个人责任或为了得到“免于自由的自由”，即摆脱自主存在这个不能承受之重的负担的自由。 此书号称为群众运动的圣经，确名不虚传，蒙田式的行文，严谨的架构，优美的翻译，佳品。</p></blockquote>

<h4>No.26 独裁者手册</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25881102/">独裁者手册</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25881102/">https://book.douban.com/subject/25881102/</a><br/>
出版信息：布鲁斯·布尔诺·德·梅斯奎塔 (Mesquita B.B.D.)、阿拉斯泰尔·史密斯 (Smith A.) / 骆伟阳 / 江苏文艺出版社 / 2014-5-1 / CNY 42.00<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：这是一部解刨政治权力运作机制的大作，这个模式适用于民主政府，也适用于独裁政府，还适用于一切有权力的场所，如公司、组织等等。该模式以权力为中心，分析了权力的构成（三个维度），如何获取、维持权力，如何变革等等。将传统分离的民主、独裁认知统一到一个模式下，观点独到犀利。这样一本书能在中国出版实属不易，自然翻译过程中译者必须做一些和谐的功夫。坦白地说，这本书译文流畅，观点忠于原著，只有部分和中国相关的“敏感”论据被删除，其余都保留完整，实属佳品。鉴于很多人怀疑心重，我也有心一睹原著风貌，因此搜寻原文，将我找到的中英差异列在这里，让大家对这本删节书的质量心里有个谱。<a href="http://kesain.lofter.com/post/3aa744_65cd0a4">http://kesain.lofter.com/post/3aa744_65cd0a4</a></p></blockquote>

<h4>No.27 容忍与自由</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6558202/">容忍与自由</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6558202/">https://book.douban.com/subject/6558202/</a><br/>
出版信息：胡适 著、潘光哲 编 / 法律出版社 / 2011-6-1 / 34.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：容忍比自由更重要，大胆假设小心求证。OK，这是一本常识读本，浅显而又非常重要的常识。</p></blockquote>

<h4>No.28 社会主义</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3260366/">社会主义</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3260366/">https://book.douban.com/subject/3260366/</a><br/>
出版信息：（奥地利）路德维希·冯·米瑟斯 / 王建民、冯克利、崔树义 / 中国社会科学出版社 / 2008-05-01 / 45.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：系统地从经济与社会的角度比较社会主义与自由主义，论证社会主义的不可行，尤其是从不能进行经济预算这个根本缺陷判了社会主义的死刑－社会主义必然导致贫穷，他的学生哈耶克则通过《通往奴役之路》论证了社会主义导致奴役。作者是坚定的自由主义者，他从社会分工有利于社会全体福利这个根本点出发，论证了生产资料私有制的是一切合理经济制度的基础。书中小部分章节中有对社会主义骂街的文笔出现&ndash;这是令人遗憾的瑕疵。</p></blockquote>

<h3>社会: 3 本</h3>

<h4>No.29 增长的极限</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24745507/">增长的极限</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24745507/">https://book.douban.com/subject/24745507/</a><br/>
出版信息：（美）德内拉•梅多斯、乔根•兰德斯、丹尼斯•梅多斯 / 李涛、王智勇 / 机械工业出版社 / 2013-6 / 40.00<br/>
标签：社会&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：书中内容在现在已经算是常识了，放在30年前，确实是振聋发聩的：不要过度追求增长，要可持续发展。感谢作者们对这个理念的推广，使得人类对此重视并行动起来，同时这本书也是系统思考实践非常好的范例。内容给三星，另加一星致敬！</p></blockquote>

<h4>No.30 无缘社会</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25822105/">无缘社会</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25822105/">https://book.douban.com/subject/25822105/</a><br/>
出版信息：日本NHK特别节目录制组 / 高培明 / 上海译文出版社 / 2014-3-1 / CNY 38.00<br/>
标签：社会&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：有事实（越来越多的无人知晓的孤独死亡），还包括发现这个事实的采访过程，抛出问题但缺少观点以及稳妥的解决办法。挺薄的一本书，由多名一些记者采访记录而成，将采访过程当小说写，有堆砌文字的嫌疑。</p></blockquote>

<h4>No.31 群氓之族</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26300044/">群氓之族</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26300044/">https://book.douban.com/subject/26300044/</a><br/>
出版信息：[美] 哈罗德·伊罗生 / 邓伯宸 / 广西师范大学出版社 / 2015-1 / 43.00<br/>
标签：社会&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：人的归属感与自尊心需求使得人们渴望属于某个集体获得认同，而族群则是最易辨识与方便的集体。自“冻结位阶”的传统社会瓦解以来，世界各地的民族运动风起云涌，世界“被割裂”（欧洲是个异类），人群被重新划分，冲突再起。广师大出版社将这本书与《乌合之众》、《狂热分子》做在一起，个人感觉前两本确属佳品，而这本三句话能说清楚的东西却用畅销书的写法凑了一本书。btw，翻译还是不错的。同类型的书籍还有《文明的冲突与世界秩序的重建》，那本是以文化为模型，而这本是以族群为模型。</p></blockquote>

<h3>人类学: 3 本</h3>

<h4>No.32 人类简史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25985021/">人类简史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25985021/">https://book.douban.com/subject/25985021/</a><br/>
出版信息：[以色列]尤瓦尔·赫拉利 / 林俊宏 / 中信出版社 / 2014-11-1 / CNY 68.00<br/>
标签：人类学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：70后作者博闻广见，将生物学、生态学、经济学、政治学、人类学、历史、哲学等统摄进人类的演化史里。认知革命、农业革命与科学革命是演化路线，而讲故事或虚构或愿景的能力是区别于其他物种的必杀技，于是金钱、帝国或宗教能够形成合力。此书写得非常有趣，抱着普世关怀，从不同角度去看待问题，涵括了《枪炮》、《自私的基因》、《增长的极限》等众多书中的观点，非常适合入门与激发兴趣。</p></blockquote>

<h4>No.33 枪炮、病菌与钢铁</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1813841/">枪炮、病菌与钢铁</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1813841/">https://book.douban.com/subject/1813841/</a><br/>
出版信息：[美] 贾雷德·戴蒙德 / 谢延光 / 上海世纪出版集团 / 2006-4-1 / 45.00元<br/>
标签：人类学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：详细地论证了公元1800之前的历史很大部分是由于地理环境决定的。丰富的可驯化动植物以及适宜的气氛，导致新月地区与东亚最先进入生产粮食的定居社会，粮食生产与人口增多相互促进，引发文字、社会组织结构、技术以及病菌进化，而欧亚大陆东西向同纬度上气候条件相近的广阔大陆又有利于它们的传播。这一切积累到15世纪，欧洲人在枪炮、病菌以及其他先进技术与组织管理的帮助下踏上新大陆，将没有免疫力以及处于军事劣势的原住民征服或消灭了。</p></blockquote>

<h4>No.34 第三种黑猩猩</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10607615/">第三种黑猩猩</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10607615/">https://book.douban.com/subject/10607615/</a><br/>
出版信息：贾雷德·戴蒙德 / 王道还 / 上海世纪出版股份有限公司,上海译文出版社 / 2012-5 / 38.00元<br/>
标签：人类学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：有进化论方面的知识能大幅提升此书的阅读速度。这本书比较有新意的在于地理决定论，而且这个理论也只使用于蒸汽革命之前的慢速社会，而不适用于全球化的今天。作者认为游牧业的生活优于农业，农业带来阶级&amp;流行病等。这个观点不敢苟同，分工合作能提高物质生活水平，这点农业社会完胜，而幸福是主观感受无从比较。作者继而关注种族灭绝、物种消亡、环境破坏等，这些问题确实是曾经人类扩张的恶果，但现在人们意识到了，也在采取一些积极行动。从这个意义上讲，或许这正是作者写此书的目的。</p></blockquote>

<h3>文学: 3 本</h3>

<h4>No.35 水浒传（注评本）（套装3册）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26411281/">水浒传（注评本）（套装3册）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26411281/">https://book.douban.com/subject/26411281/</a><br/>
出版信息：[明] 施耐庵 著、[清] 金圣叹 评 / 上海古籍出版社 / 2015-1-1 / CNY 45.00<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：读了金圣叹点评本，才晓得水浒一书中许多的文法，百零八人百零八个性格，真是人物描写的典范！</p></blockquote>

<h4>No.36 呼兰河传</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1060852/">呼兰河传</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1060852/">https://book.douban.com/subject/1060852/</a><br/>
出版信息：萧红 / 百花文艺出版社 / 2005-01 / 19.00<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论："满天星光，满屋月亮，人生何如，为什么这么悲凉。" 这句话很能代表这部作品的文风，意境以及心境。</p></blockquote>

<h4>No.37 悟空传</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1003000/">悟空传</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1003000/">https://book.douban.com/subject/1003000/</a><br/>
出版信息：今何在 / 光明日报出版社 / 2001-4 / 14.80元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：适合十几岁那个年龄看：叛逆、张狂或是勇于做自己，推倒一切权威。这句话很能反映书中的主旨“我要这天，再遮不住我眼，要这地，再埋不了我心，要这众生，都明白我意，要那诸佛，都烟消云散! ”</p></blockquote>

<h3>商业: 3 本</h3>

<h4>No.38 精益创业</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10945606/">精益创业</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10945606/">https://book.douban.com/subject/10945606/</a><br/>
出版信息：[美] 埃里克·莱斯 / 吴彤 / 中信出版社 / 2012-8 / 49.00元<br/>
标签：商业&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：精华理念：低成本快速试错以找准需求。焦点是需求，手段是试错，策略是低成本＆快速。与《四步创业法》理念相通，以客户为导向。</p></blockquote>

<h4>No.39 四步创业法</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/11516567/">四步创业法</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/11516567/">https://book.douban.com/subject/11516567/</a><br/>
出版信息：[美] Steven Gary Blank / 七印部落 / 华中科技大学出版社 / 2012-8-1 / 48.00<br/>
标签：商业&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：棒喝以创意、产品为中心的创业管理思想，作者以自己丰富的创业以及顾问经历指出从创意、产品功能、开发、销售、流程化量产的每一个步骤都需要用户来检验！尤其是前期，创业应当以用户需求为导向，否则自觉不错的创意做成产品了用户却不买账，用时髦的话说就是不在风口上。此外市场分为现有市场、细分市场、全新市场；根据产品的接纳生命曲线，客户也分为好早期（天使）客户、主流客户、怀疑者。用分清楚创业的市场类型、客户对象，采取不同的应对措施。</p></blockquote>

<h4>No.40 从0到1</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/26297606/">从0到1</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/26297606/">https://book.douban.com/subject/26297606/</a><br/>
出版信息：彼得·蒂尔、布莱克·马斯特斯 / 高玉芳 / 中信出版股份有限公司 / 2015-1-1 / CNY 45.00<br/>
标签：商业&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：中信出版的典型的快餐文化，两三句话的事情扯了一本书，就是说创新&amp;垄断，换个概念讲蓝海。盛名之下，其实难副。</p></blockquote>

<h3>教育: 2 本</h3>

<h4>No.41 父母效能训练手册</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3759379/">父母效能训练手册</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3759379/">https://book.douban.com/subject/3759379/</a><br/>
出版信息：戈登 / 天津社会科学院出版社 / 2009-6-1 / 29.80元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：一切人际交往的关键在如何交流沟通,这本书讲述了一套如何有效沟通,尤其是如何与孩子沟通的方法,因此这不仅仅是一本育儿书.这套沟通方法或理念与&lt;非暴力沟通>非常相近,足可见"道归于一".</p></blockquote>

<h4>No.42 孩子，把你的手给我</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1067049/">孩子，把你的手给我</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1067049/">https://book.douban.com/subject/1067049/</a><br/>
出版信息：[美] 海姆·G.吉诺特 / 张雪兰 / 京华出版社 / 2004-9 / 18.80元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：这本书可以说是在实践《非暴力沟通》中的理论，虽然讲的是如何和孩子沟通，其实也可以扩大范围应用到一切沟通上面去：观测行为，描述自己或理解别人的感受，明白未满足的真实需求，提出期望的行动。对感受要宽容，对行为要严格，值得学习。</p></blockquote>

<h3>经济: 1 本</h3>

<h4>No.43 自由选择（珍藏版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24745513/">自由选择（珍藏版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24745513/">https://book.douban.com/subject/24745513/</a><br/>
出版信息：（美）米尔顿弗里德曼、罗丝D.弗里德曼 / 张琦 / 机械工业出版社 / 2013-6 / 49.00<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：普及自由主义及对现实美国政治的针砭，反对凯恩斯的干预主义，主张有限政府，对通货膨胀有透彻的分析：通货膨胀就是货币现象，是隐形税，并针对间接选举的弊端，指出了可行的解决方案：一揽子支出限额。</p></blockquote>

<h3>法学: 1 本</h3>

<h4>No.44 洞穴奇案</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3697494/">洞穴奇案</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3697494/">https://book.douban.com/subject/3697494/</a><br/>
出版信息：[美] 萨伯 / 陈福勇、张世泰 / 生活·读书·新知三联书店 / 2009-06 / 18.00<br/>
标签：法学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：这个奇案奇就奇在多种正反观点都看起来有道理，乃至无法判案。一个案子引出不同法律学派的观念，从中可以领略法律的逻辑与思维方式，更进一步能激发人思考法律、道德、社会、契约、自然法等众多主题及其关系。本书翻译欠火候，期待有佳译出现。</p></blockquote>

<h3>科学: 1 本</h3>

<h4>No.45 自私的基因</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1292405/">自私的基因</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1292405/">https://book.douban.com/subject/1292405/</a><br/>
出版信息：(英)里查德.道金斯 / 卢允中 / 吉林人民出版社 / 1998-10 / 24.00元<br/>
标签：科学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：meme 是一切能进行自我复制的结构，而 gene 是其中的一种。是 gene 而不是个体或群体，才是进化的选择单位。作者用这个观点来解释许多自然现象倒是挺对胃口的，但最后说文化也是一种 meme 就有扩大化的味道了。总的来说，观点新颖别致，大部分自然现象也都能解释得合情合理，值得阅读。</p></blockquote>

<h3>心理: 1 本</h3>

<h4>No.46 对伪心理学说不</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6952036/">对伪心理学说不</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6952036/">https://book.douban.com/subject/6952036/</a><br/>
出版信息：基思•斯坦诺维奇 / 窦东徽、刘肖岑 / 人民邮电出版社 / 2012-1-1 / 28.00元<br/>
标签：心理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：第七版曾叫做《与“众”不同的心理学》，这本书的重点在介绍如何用科学的思维来认识心理学，与其说是心理学，不如说是方法论、科学哲学。书中介绍了理论必须是可证伪和可验证的，验证是说要可测量与可操作，公开知识须经过同行评审；不要搞错相关与因果关系；警惕个案与见证而要重视概率；警惕可以解释一切的终极理论；重视偶然性与随机性等等科学思维。乃批判性思维在心理学上的的实际运用。</p></blockquote>

<h2>私人阅读年度统计：</h2>

<ul>
<li><a href="https://luozhaohui.github.io/blog/2018/01/01/reading/">2017，37本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2017/01/01/reading/">2016，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2016/01/01/reading/">2015，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2015/01/01/reading/">2014，65本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2014/01/01/reading/">2013，33本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2013/01/01/reading/">2012，43本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2012/01/01/reading/">2011，41本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2011/01/01/reading/">2010，47本</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015私人阅读十五佳]]></title>
    <link href="http://luozhaohui.github.io/blog/2016/01/01/books-annual-review/"/>
    <updated>2016-01-01T05:42:38+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2016/01/01/books-annual-review</id>
    <content type="html"><![CDATA[<h2>统计</h2>

<p>2015年一共读完46本，其中五星18本，占比40%；四星17本，占比近40%；三星7本；两星4本。阅读主题以社科、历史、商业为主，人到中年已经消遣不起小说了。</p>

<p>阅读DNA在年底停掉了，可惜。幸好还有<strong>readingtaste</strong>可以用，2015 完整的阅读统计数据见如下链接：
<a href="http://readingtaste.com/user/1297475/stat/books">readingtaste 阅读统计</a></p>

<h2>私人阅读十五佳</h2>

<!--more-->


<h3><a href="http://book.douban.com/subject/3533221/">非暴力沟通</a></h3>

<p>非暴力沟通四个关键步骤：<strong>观察行为，描述感受，发现需求，提出请求</strong>。无论是表达自己还是倾听他人都可以用上非暴力沟通，这样的沟通方式误会最少，成效最大，其根基在于尊重与体会自己或他人的需求，提出建设性的方案来满足这些需求，这是爱的表达与沟通方式。对描述感受过程中，要使用“我信息”-我的哪些需求没得到满足导致了我的情绪，而非指责性质的“你信息”&ndash;你的什么行为导致了我的情绪。同系列作品<a href="http://book.douban.com/subject/25985811/">《非暴力沟通实践篇》</a>也相当不错，在该书中作者用实际的治疗案例演示如何将非暴力理论在实践中落地。最后一章“实践灵性”道出了非暴力沟通的人性关怀与哲学理念，从这个层面上去理解就能明白为什么要运用非暴力沟通。因为育儿，看过<a href="http://book.douban.com/subject/2275635/">《怎么听 孩子才会说，如何说 孩子才会听》</a>、<a href="http://book.douban.com/subject/3759379/">《父母效能训练手册》</a>、<a href="http://book.douban.com/subject/1067049/">《孩子把你的手给我》</a>、<a href="http://book.douban.com/subject/26275861/">《沟通的艺术》</a>等书籍，发现各位大师推崇的沟通理念与技巧都相似，足可见这种沟通方式的重要。</p>

<h3><a href="http://book.douban.com/subject/26275861/">沟通的艺术 : 看入人里，看出人外</a></h3>

<p>很全，很潮，很有实验根据的关于沟通的书籍。沟通有两个维度：关系维度和信息维度，越是亲密的对话，关系维度越重要，换句话说，在这样的对话中，情绪要素优先于信息要素。沟通是双向的，在沟通过程中，首先是要能认识自我的需求，其后学会倾听别人的需求，运用语言表达自己的感受与请求，从而促进关系。</p>

<h3><a href="http://book.douban.com/subject/3759379/">父母效能训练手册</a></h3>

<p>一切人际交往的关键在如何交流沟通，这本书讲述了一套如何与孩子沟通的方法。这不仅仅是一本育儿书，这套沟通方法或理念与<a href="http://book.douban.com/subject/3533221/">《非暴力沟通》</a>非常相近，足可见"道归于一".</p>

<h3><a href="http://book.douban.com/subject/6952036/">对伪心理学说不</a></h3>

<p>重读，第七版曾叫做《与“众”不同的心理学》。这本书的重点在介绍如何用科学的思维来认识心理学，与其说是心理学，不如说是方法论、科学哲学。书中介绍了理论必须是可证伪和可验证的，可证伪是波普尔提出的概念，是说必须有检验为假的可能&ndash;没有丑的对衬哪来的美？可验证是说要可测量与可操作，公开知识须经过同行评审；不要搞错相关与因果关系；警惕个案与见证而要重视概率；警惕可以解释一切的终极理论；重视偶然性与随机性等等科学思维。实乃批判性思维在心理学上的的实际运用。</p>

<h3><a href="http://book.douban.com/subject/10945606/">精益创业 : 新创企业的成长思维</a></h3>

<p>精华理念：低成本快速试错以找准需求。焦点是需求，手段是试错，策略是低成本＆快速。与<a href="http://book.douban.com/subject/11516567/">《四步创业法》</a>理念相通，以客户为导向。<a href="http://book.douban.com/subject/11516567/">《四步创业法》</a>棒喝以创意、产品为中心的创业管理思想，作者以自己丰富的创业以及顾问经历指出从创意、产品功能、开发、销售、流程化量产的每一个步骤都需要用户来检验！尤其是前期，创业应当以用户需求为导向，否则自觉不错的创意做成产品了，用户却不买账，用时髦的话说就是不在风口上。此外市场分为现有市场、细分市场、全新市场；根据产品的接纳生命曲线，客户也分为好早期（天使）客户、主流客户、怀疑者。用分清楚创业的市场类型、客户对象，采取不同的应对措施。</p>

<h3><a href="http://book.douban.com/subject/1813841/">枪炮、病菌与钢铁</a></h3>

<p>详细地论证了公元1800之前的历史很大部分是由于地理环境决定的。丰富的可驯化动植物以及适宜的气氛，导致新月地区与东亚最先进入生产粮食的定居农业社会，粮食生产与人口增多相互促进，引发文字、社会组织结构、技术以及病菌进化，而欧亚大陆东西向同纬度上气候条件相近的广阔大陆又有利于它们的传播。这一切积累到15世纪，欧洲人在枪炮、病菌以及其他先进技术与组织管理的帮助下踏上新大陆，将没有免疫力以及处于军事劣势的原住民征服或消灭了。</p>

<h3><a href="http://book.douban.com/subject/25985021/">人类简史 : 从动物到上帝</a></h3>

<p>70后作者博闻广见，将生物学、生态学、经济学、政治学、人类学、历史、哲学等统摄进人类的演化史里。认知革命、农业革命与科学革命是演化路线，而讲故事或虚构或愿景的能力是区别于其他物种的必杀技，于是金钱、帝国或宗教能够形成合力，使得人这种动物独霸地球。此书写得非常有趣，抱着普世关怀，从不同角度去看待问题，涵括了<a href="http://book.douban.com/subject/1813841/">《枪炮、病菌与钢铁》</a>、<a href="http://book.douban.com/subject/11445548/">《自私的基因》</a>、<a href="http://book.douban.com/subject/24745507/">《增长的极限》</a>等众多书中的观点，非常适合入门与激发兴趣。</p>

<h3><a href="http://book.douban.com/subject/25831575/">现代世界史</a></h3>

<p>非常合适的世界史入门，没看过《全球通史》不好比较，但作者能把各时期的发展趋势、脉络以及前后关联影响分析的头头是道，让全球历史长河连贯系统地展现在读者眼前。同主题的还阅读了<a href="http://book.douban.com/subject/5366248/">《你一定爱读的极简欧洲史》</a>，这本更适合欧洲史入门，框架梳理的不错；行文有趣，翻译也给力，如公国伯爵对皇帝的态度是“帝力于我何有哉！”，又如伏尔泰评神圣罗马帝国“既不神圣又不罗马亦非帝国”。全书讨论这个问题Q：“今天的欧洲和欧洲引领的现代文明是如何形成的?”。A：“希腊罗马的科学精神+基督教+日耳曼蛮族入侵”的三元合力形成了多元化、弱政府、多方角力的欧洲社会。</p>

<h3><a href="http://book.douban.com/subject/3057556/">狂热分子 : 群众运动圣经</a></h3>

<p>自我若是软弱无力，最多的自由又有何用？我们参加群众运动，是为了逃避个人责任或为了得到“免于自由的自由”，即摆脱自主存在这个不能承受之重的负担的自由。 此书号称为群众运动的圣经，确名不虚传，蒙田式的行文，严谨的架构，优美的翻译，佳品。</p>

<h3><a href="http://book.douban.com/subject/25881102/">独裁者手册</a></h3>

<p>这是一部解刨政治权力运作机制的大作，这个模式适用于民主政府，也适用于独裁政府，还适用于一切有权力的场所，如公司、组织等等。该模式以权力为中心，分析了权力的构成（三个维度），如何获取、维持权力，如何变革等等。将传统分离的民主、独裁认知统一到一个模式下，观点独到犀利。这样一本书能在中国出版实属不易，自然翻译过程中译者必须做一些和谐的功夫。坦白地说，这本书译文流畅，观点忠于原著，只有部分和中国相关的“敏感”论据被删除，其余都保留完整，实属佳品。鉴于很多人怀疑心重，我也有心一睹原著风貌，因此搜寻原文，将我找到的中英差异列在这里，让大家对这本删节书的质量心里有个谱：<a href="http://kesain.lofter.com/post/3aa744_65cd0a4">《独裁者手册》之和谐手册</a></p>

<h3><a href="http://book.douban.com/subject/3260366/">社会主义 : 经济与社会学的分析</a></h3>

<p>系统地从经济与社会的角度比较社会主义与自由主义，论证社会主义之不可行，尤其是从不能进行经济预算这个根本缺陷判了社会主义的死刑－社会主义必然导致贫穷，他的学生哈耶克则通过<a href="http://book.douban.com/subject/1077528/">《通往奴役之路》</a>论证了社会主义必然导致奴役。作者是坚定的自由主义者，他从社会分工有利于社会全体福利这个根本点出发，论证了生产资料私有制的是一切合理经济制度的基础。书中小部分章节中有对社会主义骂街的文笔出现&ndash;这是一点小小的瑕疵。</p>

<h3><a href="http://book.douban.com/subject/4822685/">编码 : 隐匿在计算机软硬件背后的语言</a></h3>

<p>从硬件与软件角度讲述计算机是如何工作的，综合了物理学，电学，电子学，数学等多方面的知识，从亲自组装一个手电筒开始，讲述其工作原理，然后扩展到计算机的基础设施，如何表示信息、存储信息、传输信息，如何进行加减运算等等。总的来说是非常不错的一本计算机工作原理科普书籍。作者亦是大牛，写过<a href="http://book.douban.com/subject/5273955/">《Windows程序设计》</a>这边经典大作，现已经出到第五版了。</p>

<h3><a href="http://book.douban.com/subject/4097069/">儒家哲学</a></h3>

<p>任公以其深厚的国学功底高屋建瓴地讲了儒家哲学是什么，两千年间的变迁史以及研究哪些问题。曰：用功所在：“修己安人”，最高目的：“内圣外王”，修炼之路：“格物致知诚意正心修身”以达修己与内圣，“齐家治国平天下”以达安人与外王。根基在修身，修“智仁勇”以达德。又分别就儒家历代所辩论的问题以说明其变迁之路：性之善恶（孟荀）、仁义之内外（告孟）、理欲（宋儒）、知行（明儒）。最后讨论了儒家的三大问题：性善恶、天命、心体问题。任公的另一本<a href="http://book.douban.com/subject/5990878/">《先秦政治思想史》</a>也相当不错，在此书中他对先秦四大流派儒道墨法都有精辟的概述与对比辨析，并能中西对比。书中观点亦有瑕疵，如认为道家的出现晚于儒家，但总体瑕不隐瑜。若论国学入门，力推此书！</p>

<h3><a href="http://book.douban.com/subject/26411281/">水浒传（注评本）</a></h3>

<p>读了金圣叹点评本，才晓得水浒一书中许多的文法，百零八人百零八个性格，真是人物描写的典范！以前对评注本不够重视，这一本引领我进入这个被忽视的天地，来年计划阅读更多经典作品的评注本。</p>

<h3><a href="http://book.douban.com/subject/4322040/">蒋介石与现代中国</a></h3>

<p>作者给蒋家父子都写了传，当看台版无删节版。此书以在蒋与美关系上着墨甚多，对共党评价甚低。作者树立了一位正心诚意的儒家基督信仰相结合的民族英雄。蒋在政治，战略上还是很有远见的，但事在亲为，导致无可用之将才。高华在<a href="http://book.douban.com/subject/4229282/">《革命年代》</a>中有对蒋介石为何以强大的正统优势败走台湾的分析，高华过于高估军事失败的影响，军事上的失败只是果吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[育儿先育己]]></title>
    <link href="http://luozhaohui.github.io/blog/2015/11/23/raising-child/"/>
    <updated>2015-11-23T22:00:34+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2015/11/23/raising-child</id>
    <content type="html"><![CDATA[<h2>阶层的危机</h2>

<p>最近在看一部BBC制作的英国纪录片<a href="http://movie.douban.com/subject/10748226/">《人生七年》</a>，这部纪录片通过采访来自英国不同阶层的十四个七岁的小孩子，每隔七年访谈一次制作一集，从1964年一直到到2000年，一直持续到他们56岁，总共拍了<a href="https://movie.douban.com/subject/2123439/">7 Up</a>, <a href="">14 Up</a>, <a href="https://movie.douban.com/subject/2283680/">21 Up</a>, <a href="https://movie.douban.com/subject/1482936/">28 Up</a>, <a href="https://movie.douban.com/subject/1778460/">35 Up</a>, <a href="https://movie.douban.com/subject/1778459/">42 Up</a>, <a href="https://movie.douban.com/subject/1847588/">49 Up</a>, <a href="https://movie.douban.com/subject/10748226/">56 Up</a> 八集。</p>

<p>这部片子是一个小的人生缩影，从读书，到工作，到结婚，到养育后代，到中年，到老年，一路真实访谈过来，让我们感觉片中所说的<code>Give me a child util he is seven and I will give you the man.</code>，若翻译成中文就是七岁看大。片中所采访记录的这十四个不同背景的人的生活轨迹，绝大部分确实能在起初七岁时看出端倪来，只有少数例外（一个农村孩子考取牛津后进入美国研究核能，一个读私立小学的孩子从大学辍学后靠政府救济度日）。在我们的话语中也有“三岁看大，七岁看老”的说法。为什么能在一个小孩七岁的时候大体推测出他将来的人生轨迹呢？这就是制作该片的初衷。制作方人认为英国社会已经形成了一定的阶层固化，即我们所说的“龙生龙，凤生凤，老鼠生出来打地洞”。在不同的家庭背景中出生的人，从一出生开始每个人从父母所学得的价值观人生观以及家庭能够与愿意提供的各种资源有着天差地别的差别，很多人无法跳脱这个原生家庭环境差别局限，导致在七岁的时候就决定了这些人今后的人生道路以及在社会中所属的阶层。片中一个读私立小学的孩子7岁时便阅读《泰晤士报》，以剑桥大学三一学院为其目标，而另一个底层家庭的孩子却连大学是什么都不懂的。诚然，阶层固化确实是个趋势，有人研究过在土改中被打倒的那些地主后代比当时打倒那些地主的贫农中农后代生活得要好，社会地位也要高。这些地主（乡绅）的后代在家庭被打倒时虽然少了物质上的资源，但们从少接受了较好家庭教育，学得的为人处世的方法，见识胆识要比中下贫农的后代要高一个档次，正是这些以及可能的人脉关系使得他们依然生活得更好。</p>

<!--more-->


<p>在当今的中国，尤其是经历了三十年黄金发展，不同社会阶层与资源壁垒也开始形成。官二代，富二代这些神仙的后代自不必说，他们开着有必杀技的外挂，甩了平民老百姓N条街。而同样作为平民的城市工薪阶层的后代与农村留守儿童之间的差距也在日益扩大，有数据显示：“中国重点大学农村学生比例自1990年代起不断滑落。以北大、清华为例，北大农村学生所占比例从三成落至一成；清华2010级农村生源仅占17%。”教育对人生影响的重要性不言而喻，在当今中国，新的社会阶层无疑已经形成，并且阶层之间的差距在日益扩大与固化，正应了那句“龙生龙，凤生凤，老鼠生出来打地洞”。</p>

<p>当然阶层固化也不是铁板一块，有些人没能够利用好拥有的资源导致降级，也有些人能够跳出这种资源差距局限而成功晋级，这在《人生七年》中也有体现。虽然这样的人是少数，却给了我们一线希望以及一个观察与学习的角度：平民阶层的后代如何跳出资源差距局限而晋级呢？平民阶层无疑在物质上是无法与富裕阶层比拼的，因此唯一可能的途径重视教育，尤其是家庭教育，就像被打倒地主的后代一样，从小培养孩子正确的人生观价值观，锻炼见识与胆识以及强大的心理承受能力。</p>

<p>我们这一代人从小都是被没有做好充分准备的父母养大的，一则囿于时代限制，他们养育的第一目标是有吃有穿，二则他们缺少正确的指导也没有需要指导的意识，仅仅是按着本能和传统方式养育，非打即骂。但我们这一代要说不幸也幸，因为我们小时候整个社会的教育方式大都是这样，所以虽然养育方式落后，大家差不多还是在同一条起跑线上。而在当今社会，阶层已经形成，不同阶层的养育理念以及拥有的资源已经大为迥异，不比当年我们小时候。这是新时代阶层的危机！<strong>作为平民阶层，要想后代能够有好一点人生道路，必须学习与更新自己的养育理念，重视教育投入。未育儿先育己。</strong></p>

<h3>扩展阅读：</h3>

<p><a href="http://www.guancha.cn/Education/2013_06_06_149709.shtml">北大清华仅一两成学生来自农村 李克强决定提高重点高校招收农村学生比例</a></p>

<h2>为何家会伤人</h2>

<p>在上一篇日志里我探讨了在阶层分明的当今社会，平民阶层只有在教育上下功夫能够让子女有一个比较好的出路。这里的教育是广义上的教育，是以培养健全的人格、有爱好兴趣、有正确的方法论为目标，而不仅仅是学校教育与知识教育。那怎样才算是在教育上下功夫呢？我想有两“得”：一是懂得，懂得如何与孩子相处以及如何引导孩子；二是舍得，舍得投入时间与金钱去培养。而且懂得比舍得更重要，懂得是战略问题，舍得是战术问题。如果行军方向都搞错了，再使劲有什么用呢。在我们的社会里，能正儿八经接触到教人如何为人父母的教育非常少，大都数父母都是凭着本能以及家庭传统来教养儿女。如果爷爷打骂儿子，那么儿子就骂打孙子，并且认为这是天经地义的教养方式。我们这一代人从小接受的教养方式很多就是这样的。</p>

<p>很多父母并没有意识到做父母也是一门学问是需要学习的。打个比方，假如你躺在手术台上，进来一个主刀医生和你说：“我没受过多少医学训练，但我很有爱心，我会利用常识来给你做手术。”你敢信任如此仅凭爱心和常识就来主刀的医生么？你绝对不敢！为人父母就像这个主刀医生，父母的言语就像手术刀，如果没经过适当训练，就会用这把刀刮得孩子遍体鳞伤，留下长久的心理伤害。常见的伤害方式包括：评判、比较、命令、指责、挖苦、威胁、说教，或给孩子定性。有一本国产书籍就专门讲各式各样的家庭伤害，书名叫做《为何家会伤人》，书名被我套用为副标题了。</p>

<p>我以前有个同事，内心自卑但又常常说大话以夸大自己的能耐。 有一次我去他家做客，发觉他这种性格的形成完全是拜喜欢挖苦他的强势母亲所赐。在他家待的大约一个小时内，她母亲的嘴巴就像连珠炮一样不停地挖苦他，对他穿着评头论足，接着又对他的发型说三道四，在他玩游戏的时候又说他的坐姿这不好那不好，手放的不对脚又乱动等等。我的这位同事毕竟已经成年，大约也已经形成了自己的一套忽略过滤机制，倒也能你说你的，我玩我的，完全不理会就是了。但我想在他小时候不明白事理的时候，莫名长期地被他母亲指责挖苦，肯定让他认同了一部分指责与挖苦，认为自己真的一无是处，留下了自卑与说大话后遗症。而且很可能如果他不经过学习，他们家的这种教养方式将会传承下去，就像很多家暴是有传承性的，因为他所知道与接触到的也许只有这一种教养方式，于是他将依葫芦画瓢会用挖挖苦的方式教育他的孩子。</p>

<p>很多父母总是用导致孩子怨恨或厌恶的言辞来评价自己的孩子，导致亲子关系紧张与冲突。他们一方面给孩子定性，说他懒、蠢、说谎等，另一方面又希望这样的评价能让孩子来个逆转大翻身变成一个勤奋、聪明、诚实的孩子。这不是自相矛盾么？我小时候也受过这种折磨，我的母亲总是评价我蠢，幸好我的母亲只否定我这一点，同时也肯定我比较用功，所以我现在还算正常。可以这么说，因为父母不懂得如何教养孩子，导致有一些孩子自小就受到心理伤害，无法形成健全的人格，以致影响孩子今后的人生道路。本来平民阶层的孩子就已经在资源上大大落后于富裕阶层，如果我们再因为教养方式给孩子造成伤害，那无疑是坑娃的爹！老话说：子不教，父之过。因此，父母是很有必要学习与懂得如何去教养孩子的。
豆瓣上有个家会伤人的小组，小组首语是这样的：</p>

<blockquote><p>生活在批评中的孩子，<br/>
——学会指责；</p>

<p>生活在敌意中的孩子 ，<br/>
——学会争战；</p>

<p>生活在羞辱中的孩子，<br/>
——学会自贬。</p>

<p>被伤害的孩子独自承受痛苦，<br/>
在家中如此，<br/>
在自己内心也是如此。<br/>
无法对人说，<br/>
也无法在心灵深处找到一个可以尽情大哭的地方。</p></blockquote>

<h3>扩展阅读：</h3>

<p><a href="http://book.douban.com/subject/25907227/">《为何家会伤人》</a></p>

<h2>端正心态</h2>

<p>在前面两篇日志里分别探讨了在当今社会中平民阶层的父母只有重视孩子的教育才有出路，而如何教育是一门学问是需要学习与锻炼的。那么初为人父母应该学习些什么才能更好地教育孩子呢？我想有几个要点：第一是端正心态，以平等的心态与孩子相处；第二是交流沟通技巧，用双方都能接受的方式交流沟通；第三是人生观与方法论，小孩面对复杂外部世界需要教导他一些基础的人生信念，这些信念让他能够庄敬自强，处变不惊，而正确的方法论能够让他自己学会如何去探索与认识这个世界。</p>

<p>首先来说端正心态。所谓端正无非革旧鼎新。我们这一代人正处于生活方式巨变的时代，尤其是农村出身的。如果说民国时期是打破四世同堂大家庭建立单一小家庭的转变期，那么现在就从聚居在一个地方到小孩成年就远离出生地与父母的转变期。文化观念一般是趋于保守的，因为大众文化通常滞后于时代变化。现在生活方式变了， 一些传统的旧观念就不再适用于新时代下小孩的养育了。我觉得最重要的就是要改变养儿防老的观念，养老今后更多是社会与自己的责任，而不是子女的责任。从人类发展的历程看，人是越来越趋向自由的，最先是部落聚居，然后是宗族，然后是大家庭，然后是小家庭，以后很有可能是单个个体。拜社会经济条件改善所赐，人能够对外部固定人员的依赖越来越少，自然对外部固定人员的义务也就越来越少。西方发达国家的养老问题普遍都是靠个人以及社会养老制度，而不是依靠子女，我觉得今后中国的发展也必然是这个趋势。当然，我不是说处于转变期的我们这一代就要免于赡养父母的责任，时代虽然在变但还没那么快，赡养父母至少依然是我们这一代人的责任。但到我们子女那一代就不一定了，因此现在生儿育女不是为将来养老进行投资。也许正是去除这个存在了两千多年的养老经济因素，即使放宽了二胎政策，年轻一代的生育意愿并没有多大变化。</p>

<p>马克思主义哲学一向认为：经济基础决定上层建筑。这个观点在这里是可以适用的，去除养老经济因素，一些建立在这个基础之上的旧观念自然就站不住脚了。新时代生儿育女的养育目的是不求回报的，子女不是私有财产，也不是附属于父母的。他们是独立的个体，与父母平等的个体，他们的思想境界与对世界的认识只是暂时不如父母，作为父母仅仅是早出生了几十年罢了，并没有拥有什么特别优势与权威。为人父母要能够从这个层面上真正意识到孩子是一个独立的，与你平等的人。他有他自己独特的感受与想法，即便略显稚嫩，父母也要能够去尊重与理解。因为一则处于他的情境与认知水平，这是他认为最合适的解释；二则即便这些想法是错误的，由于人是从经验中学习的（试错法），一些错误也是要容许他们去犯的。无法自由地失败也就无法自由地成功。孩子也不是出气筒，不能因为他弱小好欺负一不顺心就乱撒气。更不能以爱的名义去操办一切，孩子不是需要你照顾一切的人，他只是暂时需要你指导他如何去照顾自己，最终他会成长为一个独立的、自力更生的社会人。</p>

<p>上面说父母与孩子是平等的，有两层含义，上一段说的是父母要尊重与理解孩子这一层，不要因为是父母就摆权威架子；另一层是父母要理直气壮地争取自己的平等地位，不要被惯坏的孩子绑架。父母有自己的生活，没有义务去满足孩子的全部要求，尤其是那些过分要求。比如很久以前的一则新闻：父母卖房帮女儿追刘德华，近些的则有：女孩以死威逼父母放弃二胎。这些问题孩子之所以有这样过分的要求，自然与平时纵容很有关系。这些父母在往常心甘情愿一点一点地放弃自己的平等地位，以至于孩子能熟练而任性地掌控其父母来。</p>

<p>要真正能从内心把孩子当做共建家庭的合伙人，他们既不是依赖于父母的“寄生虫”，也不是凌驾于父母之上的“小皇帝”，这样才能够既尊重孩子又能与孩子平等相处。在这样环境中长大的孩子，自然也学得尊重父母并于父母平等相处。</p>

<h2>交流沟通技巧</h2>

<p>在前一篇日志中，我提到初为人父母应该从三个方面入手去学习如何更好地教养孩子，一是端正心态，以平等的心态与孩子相处；二是交流沟通技巧，用双方都能接受的方式交流沟通；第三是人生观与方法论，小孩面对复杂外部世界需要教导他一些基础的人生信念，这些信念让他能够庄敬自强，处变不惊，而正确的方法论能够让他自己学会如何去探索与认识这个世界。态度问题是一切亲子关系的关键，所以在这三个方面中优先探讨心态问题。只有端正了心态，才能够来讨论交流沟通技巧，要不抱着居高临下的姿态怎么能够友好地沟通呢？</p>

<p>在这三个方面中， 也许最不受重视也最容易伤人的就是交流沟通方式了。因为为人父母者至少说了20年以上的话了，总会觉得不就是说话么，有什么大惊小怪的。可恰恰是说话，尤其是和亲密的人说话，导致的争吵最多。我们可以回想一下，自己曾和同事、同学或陌生人吵过多少架？又和父母、伴侣或小孩吵过多少架？两相比较，发现大部分吵架都是在和最亲密的人吵。并非我们不爱他们，只是我们或者双方都不懂得如何更和善地交流沟通，也不曾受过这方面的训练，仅仅是凭着本能在挥舞言语这把手术刀，怎能不伤人呢？</p>

<p>有一个经典的沟通失败段子：</p>

<blockquote><p>妻子：你每天晚上就知道出去打牌！<br/>
丈夫：哦，那从明天起我改玩游戏好了。</p></blockquote>

<p>仔细分析这个段子，我们可以看到人类的交流沟通模式是非常容易引起误会的：说者习惯于把自己真实需求或想法经过加工之后再表达出来，而听者往往不善于解码这些加工了的信息，从而误会了说者的真实意图。我们可以总结一个常见的交流沟通模式：</p>

<blockquote><p>说者：真实需求 &mdash; 编码信息 ===传送给=== 听者：解码信息&mdash;明白需求</p></blockquote>

<p>在这个沟通模式中，对听者有较高的要求，听者需要具备解码的能力，如果解码错误，那么误会就会产生。比如上面的例子中，丈夫显然是解码错误，他以为妻子是要他干点别的而不是老打牌。当然这段对话也让我们明白如果妻子能把自己需要关爱陪伴的需求比较直观地表达出来，而不经过加工，那么自然会更容易得到丈夫的理解。因此，理想的沟通模式应该是这样的：</p>

<blockquote><p>说者：真实需求 ===传送给=== 听者：明白需求</p></blockquote>

<p>作为人类，我们主要说的话可以归为两类：请和谢谢。请是请求别人满足自己的需求，谢谢是感谢别人满足了我们的需求。但我们对这两种话的表达都不太擅长。比如我们在发起满足自己需求的“请”的对话时，通常会把真实需求编码伪装起来，以至于不容易被正确解码。如果有这么一个人善于解码被你加工的信息而明白你内心的真实需求，你就会把他当作知己，因为他懂你。而我们生气的时候，往往习惯于迁怒于他人，其实往往是因为我们有某种需求没有得到满足，很可能自己也未能意识到这种需求，就开始思考没能满足我们需求的人有什么不对，接着对他进行对方有错的评判。这些评判其实仅仅是需求的异化表达。比如一个简单的场景：母亲对晚归的孩子非常生气：“干什么去了！这么晚才回来！”，母亲其实是在表达害怕和担心，小孩晚归的行为未能满足她内心安全的需求，但母亲表达出来的却像是充满火药味的指责，小孩很容易解码错误而引发对抗。</p>

<p>有了上面对沟通本质是需求问题的理解，我们就比较容易采取一些技巧来提高需求表达的精确度以便自己被他人更好地理解，以及提高解码需求的能力以更好地理解他人。回到亲子关系中，由于孩子缺少生活经验，他们表达需求以及解码需求的能力都比较弱，因此为人父母要在解码孩子的需求以及表达自己需求这两方面上多下功夫，以更好地理解孩子和被孩子理解。有一本书叫做<a href="http://book.douban.com/subject/2275635/">《如何说 孩子才肯听；怎么听 孩子才肯说》</a>推荐大家看看，书中说的大体就是关于这两方面的内容。</p>

<p>在孩子表达自己想法的时候，父母的理解与共鸣很重要。因此父母要做的就是专心倾听，说出他们的感受，用幻想的方式实现他们的愿望或帮助他们寻找解决方案。父母仔细聆听是为了要鼓励孩子说出他的想法，父母说出孩子的感受并不意味着同意想法的内容，而仅仅是打开对话之门表示尊重的一种方式，我们要对孩子的感受表示理解而不是否定，帮助他发现是在表达哪些需求或哪些需求未能满足，然后找出应对措施。小孩天生想象力丰富，面对他们天马行空的想法时，有一个总的原则：<strong>对感受要宽容，但对行为要严格。</strong>小孩很多富有想象力的愿望并不需要真的用行动去实现，只需要说出来帮助他们在幻想中实现，他们也能得到很大的满足。</p>

<p>在面对小孩不可接受的行为时，父母要不带评价地客观描述小孩的行为，说出父母的感受或未满足的需求，以及这些行为造成的影响，然后让小孩独自去想解决办法，或父母提出自己的明确行为请求。当小孩做出值得鼓励的行为时，父母也要不带评价地客观描述其行为，说出父母的感受，这些行为满足了父母的什么需求，并对此表示感激。不要用定性的评价来表达批评或赞扬。简单地说“你蠢死了”或“你好聪明”，都不可取，而要遵循<strong>“行为-感受-需求-请求”</strong>的交流模式。</p>

<h3>扩展阅读：</h3>

<ul>
<li><a href="http://book.douban.com/subject/2275635/">如何说 孩子才肯听；怎么听 孩子才肯说</a></li>
<li><a href="http://book.douban.com/subject/3759379/">父母效能训练手册</a></li>
<li><a href="http://book.douban.com/subject/1067049/">孩子把你的手给我</a></li>
<li><a href="http://book.douban.com/subject/3533221/">非暴力沟通</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android框架学习资料]]></title>
    <link href="http://luozhaohui.github.io/blog/2015/04/02/study-android-fw/"/>
    <updated>2015-04-02T19:00:34+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2015/04/02/study-android-fw</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>这两年在做一个与 Android 类似的系统（参考：<a href="http://blog.csdn.net/kesalin/article/details/10474007">招聘：有兴趣做一个与Android对等的操作系统么？</a>），因此有机会对 Android framework 进行系统地学习与研究。期间也阅读了一些不错的书籍与资料，特此分享在这里，或许对其他有兴趣研究 Android framework 的朋友有所帮助。</p>

<!--more-->


<h2>推荐资料</h2>

<h3><a href="http://book.douban.com/subject/11530748/">Android开发精要</a></h3>

<p>这一本是作为入门本，主要是从 app 开发者的角度来介绍 framework 中的各要素，从这个角度来理解框架中哪些部分直接和 App 开发相关，又起什么作用。要仔细研究 framework 内部机制，首先从外部特性入手，这样在横向层面对 framework 有一个整体的认识与把握。第3章至第6章是这本书的精华所在，重点介绍了 Android 的组件思想以及组件之间的交互媒介 Intent。</p>

<h3><a href="http://book.douban.com/subject/10570841/">Android框架揭秘</a></h3>

<p>对比过《深入理解Android》等书籍，还是觉得这本书讲得有体系，透彻，著者非常用心。尤其是对 C++/Java 两个层面的 framework，以及对 Client/Server 的交互过程讲得比较详细。</p>

<h3><a href="http://blog.csdn.net/universus/article/details/6211589/">Android Bander设计与实现 - 设计篇</a></h3>

<p>引用原文内容：</p>

<blockquote><p>这篇文章首先通过介绍 Binder 通信模型和 Binder 通信协议了解 Binder 的设计需求；然后分别阐述 Binder 在系统不同部分的表述方式和起的作用；最后还会解释 Binder 在数据接收端的设计考虑，包括线程池管理，内存映射和等待队列管理等。通过本文对 Binder 的详细介绍以及与其它 IPC 通信方式的对比，读者将对 Binder 的优势和使用 Binder 作为 Android 主要 IPC 方式的原因有深入了解。</p></blockquote>

<h3><a href="http://book.douban.com/subject/19986441/">Android系统源代码情景分析</a></h3>

<p>这是讲解 Android Binder 以及匿名共享内存最详细的书，没有之一。作者花了进200页的篇幅来透彻讲解 Binder，此外对各种组件的启动过程也介绍得相当详细，如 Activity、Service、Content Provider 等。</p>

<h3><a href="http://book.douban.com/subject/25921329/">深入理解Android内核设计思想</a></h3>

<p>从操作系统的基础知识入手，讲解进程线程、内存管理、Binder 机制、Surface、SurfaceFlinger、WindowManagerService、View 体系、音频系统、输入系统等在 Android framework 中的实现原理。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中文版《独裁者手册》之和谐手册]]></title>
    <link href="http://luozhaohui.github.io/blog/2015/03/26/miss-of-the-dictatos-handbook/"/>
    <updated>2015-03-26T10:00:34+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2015/03/26/miss-of-the-dictatos-handbook</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p><img src="https://img5.doubanio.com/lpic/s27293486.jpg" alt="《独裁者手册》" /></p>

<p><a href="http://book.douban.com/subject/25881102/">《独裁者手册》</a></p>

<p>《独裁者手册》是一部解析权力&ndash;尤其是政治权力&ndash;运作机制的大作，这套机制适用于民主政府，也适用于独裁政府，还适用于一切有权力的场所，如公司、组织等等。总的来说，就是从如何获取权力，如何维持权力的角度来分析现有的政治制度、公司制度。</p>

<p>中文版由江苏文艺出版社出版，这样一本书能在中国出版实属不易，自然翻译过程中译者必须做一些和谐的功夫。坦白地说，这本书译文流畅，观点忠于原著，只有部分和中国相关的“敏感”论据被删除，其余都保留完整，实属佳品。鉴于很多人怀疑心重，我也有心一睹原著风貌，因此搜寻原文，将我找到的中英差异列在这里，让大家对这本删节书的质量心里有个谱。</p>

<!--more-->


<h2>正文</h2>

<p>查询关键词：China、Chinese，英文粗体部分为被河蟹的部分。</p>

<h3>英文版P12/190</h3>

<blockquote><p>The second stratum of politics consists of the real selectorate. This is the group that actually chooses the leader. <strong>In today’s China (as in the old Soviet Union), it consists of all voting members of the Communist Party;</strong> in Saudi Arabia’s monarchy it is the senior members of the royal family; in Great Britain, the voters backing members of parliament from the majority party.</p></blockquote>

<p>中文版P30：处理方式删除。</p>

<h3>英文版P14/190</h3>

<blockquote><p>Strange as it may seem, the same ideas and subtle differences that held true in San Francisco can be applied to illiberal governments like Zimbabwe, <strong>China,</strong> and Cuba, and even to the more ambiguous sorts of governments like current-day Russia or Venezuela or Singapore.</p></blockquote>

<p>中文版P37：处理方式删除。</p>

<h3>英文版P16/109</h3>

<blockquote><p>For example, a married couple in the United States pays no income tax on the first $17,000 they earn. At that same income, <strong>a Chinese couple’s</strong> marginal tax rate is 45 percent.</p></blockquote>

<p>中文版P41：处理方式模糊化替代，一对其他某些国家的夫妻。</p>

<h3>英文版P17/190</h3>

<blockquote><p>A few civic-minded autocrats slip a little into secret accounts, preferring to fend off the threat of revolt by using their discretionary funds (the leftover tax revenue not spent on buying coalition loyalty) to invest in public works. Those public works may prove successful, as was true for Lee Kwan Yew’s efforts in Singapore <strong>and Deng Xiaoping’s in China</strong>. They may also prove to be dismal failures, as was true for Kwame Nkrumah’s civic-minded industrial program in Ghana or <strong>Mao Zedong’s Great Leap Forward, which turned out to be a great leap backwards for China</strong>.</p></blockquote>

<p>中文版P45：处理方式删除，Great Leap Forward 即大跃进。</p>

<h3>英文版P40/190</h3>

<blockquote><p>Equally, he and many others must have known that it was much better to cross swords with Gorbachev, an intellectual reformer, than with such contemporaries as Mobutu Sese Seko of Zaire <strong>or even Deng Xiaoping of China. Deng, after all, used ruthless force to end the prodemocracy uprising at Tiananmen Square in 1989.</strong></p></blockquote>

<p>中文版P106：处理方式删除。</p>

<h3>英文版P48/190</h3>

<blockquote><p>In the United States, for example, a couple with one child and an income under about $32,400 pays no income tax. If their income were, say, $20,000 they would receive $1,000 from the federal government to help support their child. <strong>In China, a family with an income of $32,400 is expected to pay about $6,725 in income tax.</strong></p></blockquote>

<p>中文版P134：处理方式删除。</p>

<h3>英文版P48/190</h3>

<blockquote><p><strong>His Chinese counterpart, Huang Guangyu, also known as Wong Kwong Ku, fared little better. Starting with nothing but $500 and a street cart, Guangyu created Gome, the largest electrical retailer in China. He was repeatedly ranked as China’s richest individual—until he was sentenced to fourteen years in prison for bribery. It is likely that he was guilty since bribery is commonplace in Chinese business dealings. It is also likely that he and others who have been prosecuted for corruption in China were “chosen for political reasons.”</strong></p></blockquote>

<p>中文版P135：处理方式整段删除，本段"黄光裕被选择执法"本在“2004年霍尔多科夫斯基”与“在独裁国家，做个富人是不明智的”两段之间。</p>

<h3>英文版P58/190</h3>

<blockquote><p>Hobbes was only half right. It is true, as Hobbes’s believed, that happy, well-cared-for people are unlikely to revolt. <strong>China’s prolonged economic growth seems to have verified that belief (at least for now).</strong> Keep them fat and happy and the masses are unlikely to rise up against you.</p></blockquote>

<p>中文版P158：处理方式删除</p>

<h3>英文版P60/190</h3>

<blockquote><p>Indeed, a common refrain among small-coalition rulers is that the very freedoms, like free speech, free press, and especially freedom of assembly, that promote welfare-improving government policies are luxuries to be doled out only after prosperity is achieved and not before. This seems to be the self-serving claim of leaders who keep their people poor and oppressed. <strong>The People’s Republic of China is the poster boy for this view. When Deng Xiaoping introduced economic liberalization to China in the 1980s, experts in wealthy Western countries contended that now China’s economy would grow and the growth would lead to rapid democratization. Today, more than thirty years into sustained rapid growth we still await these anticipated political reforms. Growth does not guarantee political improvement but neither does it preclude it. The Republic of China (aka Taiwan) and the Republic of Korea (aka South Korea) are models of building prosperity ahead of democracy. Needless to say, the People’s Republic of China certainly is not fond of promoting either of those countries’ experiences.</strong></p></blockquote>

<p>中文版P163：处理方式删除，删除内容用于列举中国政府宣扬只有经济繁荣之后才考虑民主与自由问题的观点。</p>

<h3>英文版P61/190</h3>

<blockquote><p>A far better measure of leaders’ interest in education is the distribution of top universities. With the sole exceptions <strong>of China and Singapore</strong>, no nondemocratic country has even one university rated among the world’s top 200. <strong>Despite its size, and not counting universities in Hong Kong, which were established under British rule before Hong Kong’s return to China in 1997, the best-ranked Chinese university is only in 47th place despite China’s opportunity to draw top minds from its vast population.</strong> The highest ranking Russian university, with Russia’s long history of dictatorship, is 210th.</p></blockquote>

<p>中文版P165：处理方式删除，删除内容说明中国高等教育不怎么样。</p>

<h3>英文版P64/190</h3>

<blockquote><p>A smart democrat, of course, tries to avoid such troubles, using eminent domain only when it benefits many people, especially members of the democrat’s constituency (the influentials). <strong>It is incredible to see how easily leaders can take people’s property in the People’s Republic of China and how hard it is to do the same in Hong Kong.</strong> When essentials are few, pretty much anything goes.</p></blockquote>

<p>中文版P178：处理方式删除。</p>

<h3>英文版P64/190</h3>

<blockquote><p>Massive construction projects, like the Aswan Dam in Egypt <strong>and China’s Three Gorges Dam</strong>, are very much like Mobutu’s power grid.</p></blockquote>

<p>中文版P178：处理方式删除，Three Gorges Dam 即三峡大坝。</p>

<h3>英文版P67/190</h3>

<blockquote><p>The comparison of Iran and Chile is far from unusual. <strong>China, like Chile, suffered a 7.9 earthquake of its own. It struck in May 2008, bringing down many shoddily constructed schools and apartment buildings, killing nearly 70,000. Even accounting for variations in Chile’s and China’s populations and incomes, it is impossible to reconcile the difference between China’s death toll and Chile’s, except by reflecting on the incentives to enforce proper building standards in democratic Chile—incentives missing in autocratic China and Iran.</strong> And lest it is thought these are special cases, it is worth noting that democratic Honduras had a 7.1 earthquake in May 2009, with 6 deaths and Italy a 6.3 in April 2009 with 207 deaths.</p></blockquote>

<p>中文版P184：处理方式删除，内容是2008年汶川大地震导致大量人口死亡。</p>

<h3>英文版P80/190</h3>

<blockquote><p><strong>Mao Zedong and Deng Xiaoping in China mirrored Khrushchev and Gorbachev, but with an important difference. All of these leaders seem to have been initially motivated by the sincere desire to improve their economy. All seemed to have recognized that failing to get their economy moving could pose a threat to their hold on power. But unlike Mao, Mikhail, and Nikita, Deng belongs squarely in the hall of fame. Like them, he was not accountable to the people and, like them, he was not hesitant to put down mass movements against his rule. The horrors of Tiananmen Square should not be forgotten. But unlike his fellow dictators, he actually had good ideas about how to improve economic performance.</strong></p>

<p><strong>Deng and</strong> Singapore’s Lee Kwan Yew are surely among the contemporary world’s two greatest icons of the authoritarian’s hall of fame. They did not sock fortunes away in secret bank accounts (to the best of our knowledge). They did not live the lavish lifestyles of Mobutu Sese Seko or Saddam Hussein. They used their discretionary power over revenue to institute successful, market-oriented economic reforms that made Singaporeans among the world’s wealthiest people <strong>and lifted millions of Chinese out of abject poverty</strong>.</p></blockquote>

<p>中文版P228：处理方式第一段整段被张冠李戴删节为一句话“但与他们不同的是，李光耀确实知道如何改善经济”，实际是讲邓；紧接下来的一段原文邓李并举删节为只讲李一个人。</p>

<h3>英文版P95/190</h3>

<blockquote><p>At first, a few especially bold individuals may rise up in revolt. They proclaim their intention to make their country a democracy. Every revolution and every mass movement begins with a promise of democratic reform, of a new government that will lift up the downtrodden and alleviate their suffering. That is an essential ingredient in getting the masses to take to the streets. Of course, it doesn’t always work.</p>

<p><strong>The Chinese communists, for instance, declared the formation of a Chinese Soviet Republic on November 7, 1931. They said of their newly declared state,</strong></p>

<p><strong>It is the state of the suppressed workers, farmers, soldiers, and working mass. Its flag calls for the downfall of imperialism, the liquidation of landlords, the overthrow of the warlord government of the Nationalists. We shall establish a soviet government over the whole of China; we shall struggle for the interests of thousands of deprived workers, farmers, and soldiers and other suppressed masses; and to endeavor for peaceful unification of the whole of China.</strong></p>

<p>Jomo Kenyatta, the leader of Kenya’s independence movement and its first head of state, likewise declared during a meeting of the Kenya African Union (KAU) on July 26, 1952:</p></blockquote>

<p>中文版P280：处理方式整段删除，内容是讲毛的革命。</p>

<h3>英文版P95/190</h3>

<blockquote><p>Many revolutions end up simply replacing one autocracy with another. On some occasions the successor regime can actually be worse than its predecessor. This might well have been the case with Sergeant Doe’s deposition of Liberia’s True Whig government <strong>or Mao’s success against Chiang Kai Shek’s Kuomintang government in China</strong>.</p></blockquote>

<p>中文版P280：处理方式删除，Chiang Kai Shek 即蒋介石。</p>

<h3>英文版P100/190</h3>

<blockquote><p>As might be expected, given these facts and the incentives they suggest, instances of 200 or more people dying in earthquakes is much more common in autocracies than democracies.</p>

<p><strong>Not all disasters are equal in the eyes of autocrats. Dictators are particularly wary of natural disasters when they occur in politically and economically important centers. Disaster management in China emphasizes this point. When an earthquake struck the remote province of Qinghai in 2010, the Chinese government’s response was, at best, halfhearted. In contrast, its handling of disaster relief in the wake of a 2008 earthquake in Sichuan won the approval of much of the international community. The differences are stark and driven by politics. The Sichuan quake occurred in an economically and politically important center where a massed protest could potentially threaten the government. Qinghai is remote and of little political importance. Protest there would do little to threaten the government. The government did much less to assist people who could not threaten them.</strong></p></blockquote>

<p>中文版P280：处理方式整段删除，内容是讲对青海与汶川大地震的不同灾变处理。</p>

<h3>英文版P102/190</h3>

<blockquote><p>Common threads run through each of these democratizers—common threads that are absent from revolutions that replaced one dictator with another, such as occurred under <strong>Mao Zedong in China, Fidel Castro in Cuba</strong>, Porfirio Diaz in Mexico, and Jomo Kenyatta in Kenya.</p></blockquote>

<p>中文版P301：处理方式删除。</p>

<h3>英文版P124/190</h3>

<blockquote><p>Sure, places like Singapore <strong>and parts of China</strong> prove that it is possible to have a good material life with limited freedom—yet the vast majority of the evidence suggests that these are exceptions and not the rule. Economic success can postpone the democratic moment but it ultimately cannot replace it.</p></blockquote>

<p>中文版P386：处理方式删除。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的父亲]]></title>
    <link href="http://luozhaohui.github.io/blog/2015/03/06/my-father/"/>
    <updated>2015-03-06T20:23:34+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2015/03/06/my-father</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>我的父亲今年已七十五了，每次回家都能明显感受到无情岁月在父亲身上留下的印迹。这时时刻刻在提醒着我，相处的时间的不会太多了，尤其是对于常年飘在外面的我来说。虽说在我离开家乡之前与父亲相处了十八个春秋，可我对于父亲的生平却了解的很少，非常的支离破碎。大约以前在一起的时候总觉得明天还会见到的，加上年少总是索取以满足自己的需要而不懂得去了解父辈的需要，因此不曾打听与了解过父亲的过去。这次借过年回家相处的一个夜晚，和父亲聊了聊他的过去，记在这里，以作一个平凡农民半个多世纪的回忆。</p>

<p><img src="http://i.imgur.com/H4OCoEZ.jpg" alt="我的父亲罗有胜" /></p>

<!--more-->


<h2>爷爷去世</h2>

<p>我的父亲罗有胜，1940年出生在湘中的湘乡（今属于湖南省双峰县），这个地方出过不少在中国近代史上有着举足轻重影响的人物，如毛泽东，彭德怀，刘少奇都出自湘中，而曾国藩与大部分湘军都是本县的子民，蔡和森家族更是近在邻村。父亲在家中排行老大，下有一个弟弟，与三个妹妹。父亲只读过小学，之后一如其他农家子弟在家干农活，直到1959年父亲19岁那一年。</p>

<p>1959年正是反右批斗运动正紧的时候。爷爷因为祖传茅山道士之术，在当时是属于被批判的“搞迷信”的道士对象。国庆前夕，不到40岁的爷爷受到严重批斗挨打，不到一个月时间就因挨打受的伤而去世了。（后来邓上台，各地平反冤错案，父亲曾为此申怨，现在留得申怨报告一份，如下所示。）</p>

<p><img src="http://i.imgur.com/2GwogN8.jpg" alt="申诉材料" />
（父亲的真实年龄与身份证上的出生年月不符，以上申诉材料中使用的年龄是根据身份证上的出生年月计算的）</p>

<p>爷爷去世时，父亲才19岁，而最小的妹妹才半岁，一家六口的重担就落到父亲头上了。当时农村已经实行公社制，农民需要每天出工积累工分领取食物等生活必须用品。对于这样一个劳力少而人口多的家庭来说，人均能吃到的食物少得可怜，更因爷爷曾经的职业备受歧视，日子无疑是过的非常艰苦。</p>

<h2>修铁路</h2>

<p>后来碰上1960年湘西怀化修铁路（应该属于<a href="http://baike.baidu.com/view/940114.htm?fromtitle=%E6%B9%98%E9%BB%94%E7%BA%BF&amp;fromid=1569738&amp;type=syn">湘黔铁路</a>）需要劳动力，政府在农村征派劳力，每个生产队分派两个人。以当时农村的思想状况来说，父母在不远行，只有走投无路才会远走背井离乡讨生活。在这困苦的处境下，因此父亲与同生产队的肖石成两人被征派去修建怀化铁路。那个年代修筑铁路都是苦力活，尤其是在湘西怀化那种多山地区（父亲提到过在雪峰山打隧道的经历）。干活是用原始的工具开山辟路，放炮炸，用铁锤敲碎石块，用肩挑石头。父亲在那里修建了三年多（大约1960年～1964年），那一段完工之后就又回到生产队务农。</p>

<p><img src="http://i.imgur.com/H5WLrGo.png" alt="父亲曾经修筑铁路的路段" />
图中红色箭头段应该是父亲曾经修筑铁路的路段，双峰县是我家所在县，图标1处是怀化洪江县的雪峰山，现有雪峰山隧道</p>

<h2>弹棉花</h2>

<p>回到生产队之后，日子依旧困苦得过不下去，父亲再次外出讨生活。于是经邻村城坪村的肖玉莲的师父介绍向沙田石桥村的彭来星拜师学习弹棉花打被子。师徒俩组队外出给人打被子，从此开始了“穷游”南中国之旅。父亲有四年（大约1965～1970年）外出打被子的经历，一般都是农历七八月份出发，在除夕前赶回家里。前期是和师父彭来星搭档，后面是和邻村肖玉莲搭档。一共走过两条路线，前几次南下路线，从湖南永州东安南下到广西桂林，到云南蒙自，再返回广西回到湖南；后来是北上路线，到湖北。</p>

<p>弹棉花的工作过程图（图片来源于网络）：
<img src="http://i.imgur.com/5z5tHJz.jpg" alt="弹棉花的工作过程图" /></p>

<p>父亲走过的现在依然印象深刻的地方：
<img src="http://i.imgur.com/caY91IL.png" alt="父亲走过的现在依然印象深刻的地方" />
图中的1处是云南蒙自。</p>

<p>小时候家里有一本厚厚的中国地图册，现在已经不在了，那时候并不知道那本地图册对父亲有如此重要的意义。 现在父亲对走过的具体地名大都已经回忆不起来了，因此我也无法准确还原他曾经走过的路线，只能凭着父亲记忆深刻的一些地名去串起来。父亲对于广西桂林附近的景色以及云南蒙自县的壮族的风俗习惯记忆深刻。比如，桂林，大雁山，阳朔，昭平，蒙自都能准确说出地名来。他说到当时广西的物资比湖南要丰富，许多物资湖南还没有卖的，广西就有了。他还记得当时桂林有一条湖南街，上面有卖弹棉花打被子用的一些材料，如纱等。此外，父亲对桂林山水，阳朔岩洞的景色也记忆深刻。下图上标出的湖南永州的道县父亲虽然没有去过，当时正值文革， <a href="http://zh.wikipedia.org/wiki/%E9%81%93%E5%8E%BF%E4%BA%8B%E4%BB%B6">道县大屠杀（发生在1967年）</a>，父亲途径附近区域，听很多人说过，因此记忆深刻。他说到有一次坐火车，列车员说卧倒，声刚一落，子弹就梭梭地朝火车扫射了，车窗玻璃都打碎了，外面是两派造反派在战斗。</p>

<p><img src="http://i.imgur.com/Tx6BBaJ.png" alt="桂林，大雁山，阳朔，昭平" /></p>

<p>在广西的时候，父亲还提到过一个有名气的抗日村落，这个村落的布局十分独特，房屋紧凑连接，拐角星罗密布，一进入如同走入迷宫。当地人利用这个地形有效地打击日本鬼子，以至于鬼子动用飞机炸平村落才占领。父亲说这个村落叫做雷锋村，由于大一点的地名父亲记忆不详，更因为这个村落原本不叫雷锋村（抗日是啥年代，雷锋是啥年代啊，多半如《朱德的扁担》到《林彪的扁担》再到《朱德的扁担》一样被共党篡改了），现在我已无法搜索到父亲描述的这个村落记录了。</p>

<p>父亲还走过一小段云南境内的茶马古道，只是父亲不明白那是一条很有历史的古路，他说有一些路两边的石壁上雕刻着吊着铃铛的马队驼着货物，我琢磨这应该是茶马古道。附上茶马古道的路线图以及蒙自到普洱、昆明的示意图以估摸父亲走过的地方：</p>

<p><img src="http://i.imgur.com/mJxfrDF.jpg" alt="茶马古道" /></p>

<p><img src="http://i.imgur.com/isCTI1L.png" alt="蒙自、普洱、昆明示意图" /></p>

<p>父亲对蒙自壮族人民的风俗习惯记忆鲜明，而蒙自离茶马古道普洱到大理或昆明到普洱这两段路程都不远，所以可以推断出，父亲到过蒙自更西的地方，具体是哪一段古道父亲已经记忆不起来了。父亲提到过一个细节，有一次师徒俩挑着工具行李走入山区，一走七十里没有人烟，而那种地方当地传闻常有土匪出没。</p>

<h2>弹棉花时的经济社会状态</h2>

<p>说到外出讨生活，我仔细了解了一下当时讨生活的经济与社会状态。当时人不是自由的，小范围属于某某生产队，大范围属于某某公社，外出是需要介绍信才能通行的，因为坐火车，住旅店，到别的村落都会要求查验介绍信，否则就可能当作可疑或特务分子对待，这是当时的外部（国民党空降特务）与内部（计划经济控制人口流动）形势所形成的局面。因此，像父亲这样的弹棉花从业者，需要办理手工业证和生产队的证明信及公社的介绍信才能外出。此外，因为生产队外出一人就少了一个劳动力，所以外出自讨生活的人需要每天支付一元给生产队作为补偿。根据父亲的记忆，师徒俩人一天平均可以打两到三块被子，打一块被子当时收费十五元，平均一个月四分之一的天数有生意。因此估算下来，平均每月能进账二百五十块，除去路上的开销和弹棉花的耗材，一个月能节余两百来块。起初父亲是学徒，和师傅按照二八的比例分成，因此父亲起初只能领取到只能领取两成收入约四十多块，减去补偿给生产队的三十块每月只节余十多块。后来学艺日精，分成比例也就高一些，按照五五比例分成能得到一百多块，减去补偿生产队的费用，每月能节余七十块。在当时算是一笔不小的收入吧，只是因为奶奶不善于理家，这些钱都花掉了，并没有积蓄起来。而因花钱多，在生产队上形成在外面挣了大钱的印象，引起嫉妒，以至于后来有人作梗不同意父亲外出讨生活了（因为外出需要生产队同意和介绍信！），即便是父亲为生产队上的每一家都免费打过被子依然有人不领情。</p>

<p>父亲说虽然弹被子确实比在公社务农争公分强，但却辛苦很多。在学徒阶段，每天天未亮，父亲就要先师傅起来，将旧被子里面的棉絮拆开拆散，以重复利用旧棉花，然后再掺入新棉花制成新被子，这项工作通常在天亮时就要完成。天一亮师傅就要起来开始弹的工作了。有生意的日子吃住都不用愁，因为都是在主人家吃住的。当时的社会比较穷，父亲说到，他们刚到一个新村落第一家做事情的时候，为了树立吃得少做得多的好名声以便招揽更多生意，往往忍着只吃个半饱，起早摸黑地做。免得吃得多做得慢坏了名声而招揽不到生意。当然也有生意少的时候，故意放慢进度以求多赖在主人家一两天的情况。当时招揽生意一来靠村落间的口口相传，二来是靠在赶集上招揽生意。以前经济并不发达，没有固定的商店与市场，农村地区都是在每个月固定的日子去固定地方买卖东西，叫做赶集。逢上赶集的日子，父亲就要带着弹棉花的工具当名片，站在集会显眼的地方，有需要制作被子的人就会前来询问。而在转移阵地的时候，有时候挑着行李要走上三四天才能找到下一趟生意。</p>

<h2>修筑燕霄水库</h2>

<p>在外出弹棉花受阻拦之后，父亲只好回到生产队。在家务农这一段时间中当上了民兵排长，现在家里还留存有当时父亲的一本民兵训练笔记本。由此可以看出当时的政治大环境还是以斗争为纲，而不是以发展为纲：</p>

<p><img src="http://i.imgur.com/9E8HjxW.jpg" alt="民兵训练笔记本" /></p>

<p>后来政府因修筑燕霄水库及相应的水渠（大约1974年～1979年）再次征派劳动力，而父亲曾经有过修筑铁路的经历，因此被选中。当时开凿水渠，水渠有时候要穿山而过，因此就要开山凿洞，这样的凿出来的洞方言叫做阴洞子，父亲提到过两处负责的地段：双江口和西冲。这也是苦活，也需要放炮炸山，而征派上去的农民缺少这方面的训练，出过不少事故死了一些人。而父亲在修筑铁路时有一定放炮的安全意识与经验，因此负责专管安全的任务了。当时留在生产队吃公社食堂大锅饭的伙食较差，而修筑水库干活辛苦一些因此政府重视，伙食比较好，这时候每个生产队征派的两个名额就成了香饽饽。父亲说，当时他负责的那一段每三个月就要换掉一些人，因为那些生产队采用每户轮流派出劳力的办法来求公平。而父亲因为抓安全需要老将，为人老实干活出力，所以公社顶着生产队的非议，坚持要征派父亲。这一征派就是三四年。在这次征派中，因父亲表现出色，于1975年同永丰镇西冲的刘竹初两人加入了Dang（那时候的Dang员还真是个Dang员样子），后来还调离生产队转正成为城镇户口吃国家粮（1980年）。从此父亲走上了与水利相关的职业道路，之后在茅坪村附近修筑杨津渡天桥时当过保管（1980年），再调到双江口看护，再到燕霄水库大坝管理所。在杨劲渡当保管时，经人介绍认识了我母亲（茅坪村），于是父亲直到1980年40岁才结婚。</p>

<h2>卖爆花</h2>

<p>工作与家庭都稳定之后，1981年我哥出生，1983年我出生。当时已经开始对城镇户口实行计划生育了，我的出生使得父亲违反了计划生育政策，因此父亲被罚停职停薪三年。在这三年里需要自谋生路，而且因不是农村户口，父亲是没有分田土的。父亲再次过上了艰苦的讨生活之路：卖爆花（就是冬天街边常见的用米制作的爆花米，爆花筒）。早上从我村的一个小作坊买来爆花，然后去其他乡村里售卖。父亲说卖不动的时候最远走到邻县衡阳县（大约50公里的路程）。这一起早摸黑的辛苦又是三年，父亲说幸好那时候每天平均能挣五元，以支撑一家人的生活。</p>

<h2>燕霄水库管理所职员</h2>

<p>卖了三年爆花之后，父亲回到了原单位。对于父亲在燕霄水库的工作，我不是十分了解，只知道下大雨时要派人看守水库大坝、水渠沿线以防坍陷；水电站发电时需要派人24小时看守；水库需要巡逻防止人偷鱼，水库要养鱼等等，这些父亲都做过。从我懂事起，父亲年龄也大了，便担任总务不再外出干体力活了，他要负责水库管理所三四十号人的食物采购。从县城到燕霄水库管理所有二十里的路程，路况并不好，因为水库建筑在山区。因此天气不好的时候，下大雨或下雪的时候，自行车都不能骑，而管理所不能一天没有吃的，父亲只能挑着食材走路送过去。后来父亲年龄大了，在父亲病着时候或天气不好的时候，我哥曾顶替这项工作好些次。</p>

<p>燕霄水库到县城的路线图：从县城到我家附近到城坪村这一段路况较好，从城坪村到燕霄水库那一段山路的路况就差远了。
<img src="http://i.imgur.com/ZMAs7Ol.png" alt="燕霄水库到县城的路线图" /></p>

<h2>道士</h2>

<p>在1989年，我家修筑了新房子，从此摆脱了一家四口人睡一张床的历史。搬到新房子之后，忘记是哪一年了，邻队筒车坝的蒋甘霖因为患大病久治不愈，各种医院、道士和尚治疗都不凑效。他家知道我家是道士世家，于是病急乱投医，说服父亲出手帮忙驱鬼辟邪。不知怎么的，这一次竟然灵了。于是父亲作为道士的第三职业（第一职业应该算是农民，第二职业是水库管理所职员）名声大震，一则因为周边的和尚道士都没治好而父亲第一次出手就灵了，二则因为祖传的法术在当地还是很有名气的。从此父亲走上了道士这一第三职业，而且随着父亲的退休而成为主业了。至今父亲依然从业中，并因这一职业，父亲又有过好几次出省驱鬼辟邪的经历。</p>

<h2>总结</h2>

<p>如果用职业顺序来描述父亲的经历，可以说一直都是农民，中间又成为手工业者，再成为职员，最后退休后以道士为主业。</p>

<p>父亲总结说，这一辈子吃了共产党的苦，也沾了共产党的光。我觉得父亲前半句是对的，后半句缺还值得商榷。或许没有共产党这么左运动右跃进地瞎折腾，人民顺顺利利地自力更生，日子会过得更好一些呢？</p>

<p>以上仅仅凌乱地记录父亲生平的一些重要事情，因为年久，很多细节以及具体年份父亲已经记不清了，因此时间上会有出入，以后再求证考证。</p>

<p>纵观父亲过去的历程，因爷爷的惨死而转折，而又因此外出修铁路获得转机，并且这一经历影响了父亲后来的人生历程。在外出弹棉花以及卖爆米花的经历，让本内向老实的父亲练就了较幽默的口才，察言观色的人际交往本领以及见多识广看得开的思维。这些经验与思维对他能以低文化水平转正为城镇户口很有帮助。这些也对父亲的道士职业很有帮助，因为在我看来，驱鬼辟邪起的其实是起安慰剂的作用，求的是一个心安，而父亲的口才，交际，见识都能让他说出一些更为体贴安慰的话语，也更让人信服。</p>

<p>父亲看得开的思维还体现在采纳新事物上面，在98年我读高三时，奶奶去世了。传统办丧事是亲朋戚友负责的，而父亲采取承包制，将白喜事承包出去。在当时当地，这是第二例白喜事承包，并且受到亲族的非议，而今红白喜事承包几乎成了惯例了。近些年来，父亲已经在考虑后事了，并嘱咐过要火化不土葬，并嘱咐办丧事要以简为原则，酒席都可以不办。这在现今农村很多人还怀着深深土葬情结的环境下，父亲有这样的观念实在是不一般。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年阅读统计]]></title>
    <link href="http://luozhaohui.github.io/blog/2015/01/01/reading/"/>
    <updated>2015-01-01T05:42:38+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2015/01/01/reading</id>
    <content type="html"><![CDATA[<h2>2014年阅读统计，本页面由代码自动生成</h2>

<h2>总计阅读 65 本</h2>

<h3>评价统计:</h3>

<p><img src="https://i.imgur.com/7CUg9Hh.png" alt="评价统计" /></p>

<blockquote><p>五星图书 19 本，占比 29.2%<br/>
四星图书 29 本，占比 44.6%<br/>
三星图书 15 本，占比 23.1%<br/>
两星图书 2 本，占比 3.1%</p></blockquote>

<!--more-->


<h3>标签统计:</h3>

<p><img src="https://i.imgur.com/zGurhkb.png" alt="标签统计" /></p>

<blockquote><p>历史 13 本<br/>
文学 11 本<br/>
思维 7 本<br/>
经济 6 本<br/>
政治 6 本<br/>
软件开发 5 本<br/>
投资 5 本<br/>
心理 3 本<br/>
教育 2 本<br/>
人类学 2 本<br/>
社会 2 本<br/>
哲学 2 本<br/>
科学 1 本</p></blockquote>

<h3>历史: 13 本</h3>

<h4>No.1 西洋史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4201719/">西洋史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4201719/">https://book.douban.com/subject/4201719/</a><br/>
出版信息：陈衡哲 / 岳麓书社 / 2010-1 / 28.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：又一本民国牛书，倘若要推荐西方史书籍，这本绝对是第一。史料虽都一样，但能把那些能提纲挈领的事件以及这些事件之间的前后连贯的因果关系讲得明明明白的史书却少之又少。作者精辟地总结道：上古希腊罗马是入世观，中古黑暗时代是出世观，文艺复兴之后又复入世观。</p></blockquote>

<h4>No.2 中国近代史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2376486/">中国近代史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2376486/">https://book.douban.com/subject/2376486/</a><br/>
出版信息：[美] 徐中约 / 计秋枫、朱庆葆 / 世界图书出版公司 / 2008-1 / 66.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：读过不少近代史，这本是最为出众的，国内出版的是阉割的，所以要看繁体版。客观就不说了，大凡非大陆出的历史名著大都做得到客观，这本尤为可贵的是作者具备全球视野，能把发生在中国的事情与发生在其他国家的事情联系统一起来，在世界史的大局中讲述中国近代史。比如说毛同志吸取了斯大林同志在肉体上消灭异己的教训，采取精神上消灭的措施；又如毛同志为避免重蹈斯大林被继任者赫鲁晓夫全盘否定的覆辙，清算了少奇同志。此外，49年之后，大陆，台湾，香港三地的历史齐头并进讲解，而大陆的近代史书一般只讲大陆部分。</p></blockquote>

<h4>No.3 东周列国志</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3409620/">东周列国志</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3409620/">https://book.douban.com/subject/3409620/</a><br/>
出版信息：（明）冯梦龙 著 / （清）蔡元放 改编 / 中华书局 / 2009-1 / 32.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：相见恨晚，感觉甩了《三国演义》好几条街，三国中人物与事迹被历代卫道士伪造近乎神或妖（鲁迅语），而东周让你看过无数朝起朝落，三十年河东三十年河西的故事，从中体会为人处世之道，高瞻远瞩之识。</p></blockquote>

<h4>No.4 中国史纲</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1055347/">中国史纲</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1055347/">https://book.douban.com/subject/1055347/</a><br/>
出版信息：张荫麟 / 上海古籍出版社 / 1999-12-1 / 12.60<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：王家范评：文笔流畅优美，运思遣事之情深意远，举重若轻，在通史著作中当时称绝，后也罕见。</p></blockquote>

<h4>No.5 中国近代史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1060025/">中国近代史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1060025/">https://book.douban.com/subject/1060025/</a><br/>
出版信息：蒋廷黻 / 上海古籍出版社 / 2001-12 / 8.80<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：叹为观止！短短五六万字就将清末至民国历史发展的脉络展现出来，一气呵成。对人物的历史评判新颖客观独到。如林则徐实则是个幸运的无知自私之人，主战是为下策，“鸦片战争的军事失败还不是民族致命伤。失败以后还不明了失败的理由力图改革，那才是民族的致命伤。”，振聋发聩。</p></blockquote>

<h4>No.6 古拉格：一部历史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/20503529/">古拉格：一部历史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/20503529/">https://book.douban.com/subject/20503529/</a><br/>
出版信息：(美)安妮·阿普尔鲍姆 / 戴大洪 / 新星出版社 / 2013-4-1 / 78.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：用触目惊心的事实来展现苏联治下的用社会替代家庭的共产管制之罪行。斯大林治下的苏联，强制劳动人数达两千八百万，其中两百七十万人死于劳改营与流放村。劳改，劳动突击手（天朝变种：劳模），人民的敌人，被精神病，国安局，异见政治犯等概念对天朝人来说一点都不陌生。若不了解历史，终有一天我们将在醒来之后发现，我们不知道自己是谁：我们忘记了是什么动员了我们，是什么激励了我们，什么是我们一直与之斗争的东西。</p></blockquote>

<h4>No.7 近代中国社会的新陈代谢</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10825612/">近代中国社会的新陈代谢</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10825612/">https://book.douban.com/subject/10825612/</a><br/>
出版信息：陈旭麓 / 中国人民大学出版社 / 2012-6-18 / 49.80元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：重点讲1840~1930间的中国历史，“新陈代谢”的演进过程讲得很不错，把一串事件的前因后果都串起来了，引用资料详实，足可见当时社会的各种争辩：从夷夏，古今，中西，长技/政体/文化，改良/革命，立宪/共和等等之争辩之演化。唯一的遗憾是毕竟写于80年代，不免有一些的意识形态词语在其中，不过影响很少。作者竟是老乡，佩服。。。</p></blockquote>

<h4>No.8 夹边沟记事</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3239549/">夹边沟记事</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3239549/">https://book.douban.com/subject/3239549/</a><br/>
出版信息：杨显惠 / 花城出版社 / 2008-09 / 34.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：讲述59～61年期间“右派”在西北酒泉附近夹边沟/明水农场改造的非人经历，百分之七八十的人饿死了，活脱脱的饥饿实验室。当然在D的领导下他们都有正常死亡的病历的，若非作者的记录，这惨烈的历史将鲜为人知。作者文笔不错，寓深沉于木讷，寓悲愤于质朴，和大戈壁盐碱地上那些无声的惨烈浑然一体。</p></blockquote>

<h4>No.9 欧洲文明十五讲</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1065142/">欧洲文明十五讲</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1065142/">https://book.douban.com/subject/1065142/</a><br/>
出版信息：陈乐民 / 北京大学出版社 / 2004-06 / 22.00<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：一本能让你了解欧洲历史发展整体脉络的书籍，非常不错的欧洲历史入门读物：从希伯来，希腊，罗马，中世纪，文艺复兴，启蒙运动，宗教革命，工业革命，近代英法大革命一路讲来，能激发兴趣，并推荐了进一步的读物。上古中古讲得很不错，近代尤其是十一十二讲有点水。</p></blockquote>

<h4>No.10 蒋经国传</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/5288371/">蒋经国传</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/5288371/">https://book.douban.com/subject/5288371/</a><br/>
出版信息：陶涵 / 林添贵 / 华文出版社 / 2016-1-1 / 59.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：感谢经国领导的台湾人民缔造了一个华人民主社会，楷模！经国有能力，有魄力，有忍力来搞民主改革，开放报禁，党禁。</p></blockquote>

<h4>No.11 “文化大革命”十年史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3035113/">“文化大革命”十年史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3035113/">https://book.douban.com/subject/3035113/</a><br/>
出版信息：高皋、严家其 / 天津人民出版社 / 1986-9 / 4.65元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：这是国内屈指可数的几本文革通史之一，是在中央定的“毛错误发动，林及四人帮兴风作浪”的基调上写作，提供的史料虽比较多（有选择性的），但诠释带有一定的主观性与感情色彩。因能接触到的文革资料太少了，这本书受到的赞誉超过了书本身。期待港版《文化大革命的起源》能在大陆流通。</p></blockquote>

<h4>No.12 中国大历史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1015699/">中国大历史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1015699/">https://book.douban.com/subject/1015699/</a><br/>
出版信息：黄仁宇 / 生活·读书·新知三联书店 / 2007-2 / 19.00元<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：感觉作者还是用英文语法在写中文，读起来那个别扭啊，此外文章观点过于武断，将中国历史里面的朝代轮回的原因单一化了。</p></blockquote>

<h4>No.13 唐朝穿越指南</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/20389202/">唐朝穿越指南</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/20389202/">https://book.douban.com/subject/20389202/</a><br/>
出版信息：森林鹿 / 北京联合出版公司 / 2013-1-1 / 35.00<br/>
标签：历史&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：实在是太罗里吧嗦了，以至于有空洞无物之感。。。</p></blockquote>

<h3>文学: 11 本</h3>

<h4>No.14 论中国学术思想变迁之大势</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1882032/">论中国学术思想变迁之大势</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1882032/">https://book.douban.com/subject/1882032/</a><br/>
出版信息：梁启超 / 上海古籍出版社 / 2012-3 / 13.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：通过任公这本不到一百页的小书，基本可以把握中国文化变迁的历程及缘由。此书开创新一代学术写作新风，中西对比，突显思想自由以及文化交融的重要性，此外亦分析地理对学术之影响。百余年前，任公认为“欲革新吾国，当先革新吾民”，今亦然！</p></blockquote>

<h4>No.15 老子今注今译</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1253292/">老子今注今译</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1253292/">https://book.douban.com/subject/1253292/</a><br/>
出版信息：老子 / 陈鼓应 / 商务印书馆 / 2003-12 / 25.0<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：第一次读关于老子的书，觉得这一本非常适合入门，对老子思想的发展脉络，前后连贯性以及一致性把握地相当到位，赞。</p></blockquote>

<h4>No.16 论语译注</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10743516/">论语译注</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10743516/">https://book.douban.com/subject/10743516/</a><br/>
出版信息：杨伯峻 译注 / 杨伯峻 注解 / 中华书局 / 2012-4 / 29.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：真实的孔子确实有智，有勇，有礼，而且不是酸儒迂儒。杨伯峻的译注更是难得，这套国民阅读经典确实不错，赞！。</p></blockquote>

<h4>No.17 中国古代文化常识</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10571214/">中国古代文化常识</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10571214/">https://book.douban.com/subject/10571214/</a><br/>
出版信息：王力 主编 / 中国人民大学出版社 / 2012-3 / 19.80元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：系统地补脑，弄明白了古文中很多字词的含义与来由，很长见识～～</p></blockquote>

<h4>No.18 源氏物语（上、中、下）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1028816/">源氏物语（上、中、下）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1028816/">https://book.douban.com/subject/1028816/</a><br/>
出版信息：[日] 紫式部 / 丰子恺 / 人民文学出版社 / 2003-05 / 45.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：日本版红楼梦。。。</p></blockquote>

<h4>No.19 无法直面的人生</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1052242/">无法直面的人生</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1052242/">https://book.douban.com/subject/1052242/</a><br/>
出版信息：王晓明 / 上海文艺出版社 / 2001-5 / 20.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：鲁迅曾是我的偶像，后来走下神坛，而今又重视起来。这本传纪解析凡人鲁迅的思想发展历程，讲述二十世纪不屈服任何黑暗势力的最痛苦孤独的灵魂，他的幽暗，虚无，来源于独特的人生经历及其清醒的思辨精神。通过这本书你可以了解较为真实的迅哥儿，而不是官方或教科书中树立的神。通过这两种不同形象的对比你也能知晓为什么官方要造这么一个神，又什么选择了鲁迅。</p></blockquote>

<h4>No.20 嫌疑人X的献身</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3211779/">嫌疑人X的献身</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3211779/">https://book.douban.com/subject/3211779/</a><br/>
出版信息：[日] 东野圭吾 / 刘子倩 / 南海出版公司 / 2008-9 / 28.00<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：还算不错的推理小说，讲了一个极度孤独而聪明的男人孤注一掷把寄托放在邻家孤儿寡母身上。</p></blockquote>

<h4>No.21 月亮和六便士</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1858513/">月亮和六便士</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1858513/">https://book.douban.com/subject/1858513/</a><br/>
出版信息：[英] 毛姆 / 傅惟慈 / 上海译文出版社 / 2006-8 / 15.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：梦想固然诱人，责任也需担当，两者并非不可调和，这是我评三星的缘由，价值观不同吧，或许是人到中年做不到赤条条了吧。书中关于男人/女人的观点倒是有些对胃口，虽然相当的大男子主义，哈哈。</p></blockquote>

<h4>No.22 送你一颗子弹</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4238362/">送你一颗子弹</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4238362/">https://book.douban.com/subject/4238362/</a><br/>
出版信息：刘瑜 / 上海三联书店 / 2010-1 / 25.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：作者秉持“没有无聊的人生，只有无聊的人生态度。”的态度对待生活，这本书就是她的生活碎碎念，因此质量不一，总体还算可以。</p></blockquote>

<h4>No.23 情人</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1400705/">情人</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1400705/">https://book.douban.com/subject/1400705/</a><br/>
出版信息：[法] 玛格丽特·杜拉斯 / 王道乾 / 上海译文出版社 / 2005-7 / 20.00元<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：此书备受王小波的推荐，意识流写作，有经典的开头，多人称转换。现阶段还感受不到其美妙之处，或许将来再看看。</p></blockquote>

<h4>No.24 动物凶猛</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1143694/">动物凶猛</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1143694/">https://book.douban.com/subject/1143694/</a><br/>
出版信息：王朔 / 中国电影出版社 / 2004-2 / 15.5<br/>
标签：文学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：曾经年少轻狂，对应《阳光灿烂的日子》的小说。。。</p></blockquote>

<h3>思维: 7 本</h3>

<h4>No.25 决策与判断</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1193621/">决策与判断</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1193621/">https://book.douban.com/subject/1193621/</a><br/>
出版信息：斯科特·普劳斯 / 施俊琦、王星 / 人民邮电出版社 / 2004-9 / 28.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：这本书是众多心理学实验的集成分析者，不适合入门看，因为那些实验都是几句话带过，如果你没有足够广的心理学实验知识储备，是难以看明白的。</p></blockquote>

<h4>No.26 学会提问</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/20428922/">学会提问</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/20428922/">https://book.douban.com/subject/20428922/</a><br/>
出版信息：[美] M.尼尔•布朗、[美] 斯图尔特·基利 / 吴礼敬 / 机械工业出版社 / 2012-12 / 35.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：批判性思维经典书籍。</p></blockquote>

<h4>No.27 一万小时天才理论</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4726323/">一万小时天才理论</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4726323/">https://book.douban.com/subject/4726323/</a><br/>
出版信息：[美] 丹尼尔·科伊尔 / 张科丽 / 中国人民大学出版社 / 2010-2 / 32.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：从生理上（髓鞘质）分析习得技能的奥秘：精深练习，再分析支撑能够持久进行精深练习的激情，以及伯乐在触发/维持激情以及引导/指导精深练习过程中的作用。非常值得了解的成才理论。</p></blockquote>

<h4>No.28 策略思维</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24523169/">策略思维</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24523169/">https://book.douban.com/subject/24523169/</a><br/>
出版信息：阿维纳什·K·迪克西特、巴里·J·奈尔伯夫 / 王尔山 译、王则柯 校 / 中国人民大学出版社 / 2013-4 / 42.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：从别人的角度考虑问题；向前展望，倒后推理。不错的策略思维，翻译的不是很好，有些地方不好懂。</p></blockquote>

<h4>No.29 如何掌控自己的时间和生活</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1436707/">如何掌控自己的时间和生活</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1436707/">https://book.douban.com/subject/1436707/</a><br/>
出版信息：[美] 阿兰·拉金 / 刘祥亚 / 金城出版社 / 2005-9 / 18.80元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：明确首要目标，列出行动纲领，优先级排序，一天一点地朝A-1级目标靠近。实用指导手册，尤其是当对目标有恐惧，行动上又拖拉的时候很有指导意义。</p></blockquote>

<h4>No.30 越读者</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3644095/">越读者</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3644095/">https://book.douban.com/subject/3644095/</a><br/>
出版信息：郝明义 / 人民文学出版社 / 2009-4 / 32.00<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：晓得作者提出的主食，美食，蔬果，甜食书籍分类，以及阅读的七个阶梯就差不多了。有堆砌和广告嫌疑，当然他翻译的选书和质量都不错。</p></blockquote>

<h4>No.31 批判性思维</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/7057936/">批判性思维</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/7057936/">https://book.douban.com/subject/7057936/</a><br/>
出版信息：[美]布鲁克.诺埃尔.摩尔、[美]理查德.帕克 / 朱素梅 / 机械工业出版社 / 2012-1 / 48.00元<br/>
标签：思维&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★</strong><br/>
我的评论：烂书，挂着批判性思维的牌子，其实不成体系，介绍了一大堆逻辑规则而已。《学会体会-批判性思维指南》才是批判性思维方面的经典。</p></blockquote>

<h3>经济: 6 本</h3>

<h4>No.32 经济学原理</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3719531/">经济学原理</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3719531/">https://book.douban.com/subject/3719531/</a><br/>
出版信息：[美] N.格里高利·曼昆 / 梁小民、梁砾 / 北京大学出版社 / 2009-4 / 42.00元<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：宏观分册没有微观分册那么有趣味性和确定性，毕竟宏观经济学还在发展中，各派理论都各有观点与拥趸。这一册重点讲利率，汇率，失业率，税收，通货膨胀，古典二分法等之间的关联，尤其重点讲政府推出货币政策及财政政策对这些变量的影响。了解这些基本原理，对预判经济政策的影响，以及解释各种经济现象很有帮助。</p></blockquote>

<h4>No.33 经济学原理</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3719533/">经济学原理</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3719533/">https://book.douban.com/subject/3719533/</a><br/>
出版信息：[美] N.格里高利·曼昆 / 梁小民、梁砾 / 北京大学出版社 / 2009-4-1 / 54.00元<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：经济学入门经典，比同类经典《经济学的思维方式》写得更理论一点，推理严谨，前后连贯。两书的写作风格相似，每章后都有总结与问题。若推荐入门，我更偏好这一本。学经济学首先能让你明白日常生活中的现象，其次能让你从不同视角思考问题，对从计划经济与一直被洗脑走过来的我们来说尤其值得了解。</p></blockquote>

<h4>No.34 长尾理论</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1919072/">长尾理论</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1919072/">https://book.douban.com/subject/1919072/</a><br/>
出版信息：[美] 克里斯·安德森 / 乔江涛 / 中信出版社 / 2006-12 / 35.00元<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：比较完美地解释了“互联网经济”，长尾的三大部分：无限（丰饶）产品，无限（个性化）需求，以及需求寻找合适产品的过滤器（如搜索引擎，推荐系统等），理解了这些就才算有点“互联网思维”，“免费”还能挣钱！</p></blockquote>

<h4>No.35 金融的逻辑</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3891900/">金融的逻辑</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3891900/">https://book.douban.com/subject/3891900/</a><br/>
出版信息：陈志武 / 国际文化出版公司 / 2009-08-01 / 39.80元<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：从资本角度讲述金融的力量，如资本可以创造价值，房贷什么的是预支未来人力资本的价值。作为普及市场概念与金融知识的读物，赞一个。</p></blockquote>

<h4>No.36 炒股的智慧</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1182173/">炒股的智慧</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1182173/">https://book.douban.com/subject/1182173/</a><br/>
出版信息：陈江挺 / 经济科学出版社 / 2004-1 / 22.00元<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：脱离蛮干盲干式炒股的入门指导书。。。</p></blockquote>

<h4>No.37 理性乐观派</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6913343/">理性乐观派</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6913343/">https://book.douban.com/subject/6913343/</a><br/>
出版信息：（美）马特·里德利（Matt Ridley） / 闾佳 / 机械工业出版社 / 2011-12 / 45.00元<br/>
标签：经济&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：哦，又一本讲人类经济史的畅销书，还算行，看过一两本经济学原理的书就不必看这书了，患有畅销书毛病：观点少而周知，罗列一大堆例子以充实内容而已。</p></blockquote>

<h3>政治: 6 本</h3>

<h4>No.38 1984 动物农场</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/22988752/">1984 动物农场</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/22988752/">https://book.douban.com/subject/22988752/</a><br/>
出版信息：乔治·奥威尔 (Orwell G.) / 董乐山、高源 / 华东师范大学出版社 / 2013-5-1 / 25.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：《1984》名声在外：老大哥在看着你，真理部，思想改造，双重思想，自由即奴役，揭露极权政府如何愚民洗脑的手段。而《动物农场》是寓言，更是预言，揭露极权政府如何是如何一步一步形成的，活脱脱一部党国史。</p></blockquote>

<h4>No.39 通往奴役之路</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1077528/">通往奴役之路</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1077528/">https://book.douban.com/subject/1077528/</a><br/>
出版信息：哈耶克 / 王明毅、冯兴元、等 / 中国社会科学出版社 / 1997-08-01 / 16.00<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：70年前发表的振聋发聩的思想见解，后来世上发生的许多不幸事情都被一一言中。书中论述了计划与市场，经济自由与政治自由，法治与民主，经济控制与极权主义，保障与自由，道德与自由，以及联邦制与国际秩序等问题。翻译逊色，语句结构上基本是中文字词+英文长句语法，读来绕神经，但字词还是准确的，只是结构顺序调整不到位。</p></blockquote>

<h4>No.40 自由与繁荣的国度</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1043419/">自由与繁荣的国度</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1043419/">https://book.douban.com/subject/1043419/</a><br/>
出版信息：[奥] 路德维希·冯·米瑟斯 / 韩光明 等 / 中国社会科学出版社 / 1995-1 / 13.40元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：以自由主义的根基“私有制”为出发点，论证它为何促进了社会利益最大化，和平，民主，以及如何限定了政府的职责范围。作者乃奥地利经济学派的重要人物。</p></blockquote>

<h4>No.41 历史决定论的贫困</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3803268/">历史决定论的贫困</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3803268/">https://book.douban.com/subject/3803268/</a><br/>
出版信息：[英] 卡尔·波普尔 / 杜汝楫、邱仁宗 / 上海人民出版社 / 2009-7 / 20.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：波普尔从逻辑推理上否定马克思主义的唯物历史发展观。他主要的论证过程为：由于人类根本无法预知人类知识的增长，而历史进程的发展又受制于人类知识的影响，所以人类无法对人类社会未来的发展进行预测，因此所谓的“历史决定论”实际上是毫无可能的。也就是说我们不可能预测人类社会必然会经历社会主义，最终到达终极的共产主义。</p></blockquote>

<h4>No.42 旧制度与大革命</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1032063/">旧制度与大革命</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1032063/">https://book.douban.com/subject/1032063/</a><br/>
出版信息：[法] 托克维尔 / 冯棠 / 商务印书馆 / 1992-08 / 12.80元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：托克维尔另一经典著作，探讨法国大革命之所以然，已然与未然。。。</p></blockquote>

<h4>No.43 民主的奇迹</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/24529162/">民主的奇迹</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/24529162/">https://book.douban.com/subject/24529162/</a><br/>
出版信息：凯瑟琳·德林克·鲍恩 / 郑明萱 / 新星出版社 / 2013-7 / 37.00元<br/>
标签：政治&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：流水账一般记录在美国宪法制定的127天里各方的辩论，妥协。当故事看看吧，想想一帮人在炎热的费城辩论如何保障合众民还是合众州之幸福，也颇为有趣，但也仅此而已，《联邦党人文集》更具思想性。</p></blockquote>

<h3>软件开发: 5 本</h3>

<h4>No.44 Effective Objective-C 2.0</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/21370593/">Effective Objective-C 2.0</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/21370593/">https://book.douban.com/subject/21370593/</a><br/>
出版信息：Matt Galloway / Addison-Wesley Professional / 2013-5-26 / USD 44.99<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：套用“我认识的比利都是好人”，我读过的“Effectvice XXX”书都是好书。</p></blockquote>

<h4>No.45 Effective java 中文版（第2版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3360807/">Effective java 中文版（第2版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3360807/">https://book.douban.com/subject/3360807/</a><br/>
出版信息：Joshua Bloch / 俞黎敏 / 机械工业出版社 / 2009-1-1 / 52.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：据说带有 Effective 的编程书都还不错，这本自然不例外，只是翻译欠火候，潘爱民大神为啥不继续翻第二版呢。看完了就觉得真TM和《Effective C#》几乎一个样，box/unbox，hashcode/equals/==，finalize/dispose，泛型容器，并发编程，单例等话题思路如出一辙。推荐开发Java，研究Android的看看。</p></blockquote>

<h4>No.46 Linux内核设计与实现(原书第3版)</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/6097773/">Linux内核设计与实现(原书第3版)</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/6097773/">https://book.douban.com/subject/6097773/</a><br/>
出版信息：Robert Love / 陈莉君、康华 / 机械工业出版社华章公司 / 2011-4-30 / 69.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：内核入门经典读物。。。</p></blockquote>

<h4>No.47 Python核心编程（第二版）</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3112503/">Python核心编程（第二版）</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3112503/">https://book.douban.com/subject/3112503/</a><br/>
出版信息：[美]Wesley J. Chun（陳仲才） / CPUG / 人民邮电出版社 / 2008-06 / 89.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：入门看看还行，感觉内容结构安排不是太合理，而且听说译者居然剽窃开源成果，可耻。</p></blockquote>

<h4>No.48 Joel谈优秀软件开发方法</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2193777/">Joel谈优秀软件开发方法</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2193777/">https://book.douban.com/subject/2193777/</a><br/>
出版信息：Joel Spolsky / 王慧 / 清华大学 / 2007-7 / 39.00元<br/>
标签：软件开发&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：伟大的黑客，激情，团队补偿以及群是其自身最大的敌人等几篇挺不错，其他的感觉一般。</p></blockquote>

<h3>投资: 5 本</h3>

<h4>No.49 股票作手回忆录</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1021346/">股票作手回忆录</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1021346/">https://book.douban.com/subject/1021346/</a><br/>
出版信息：爱德温.李费佛(美) / 真如 / 海南出版社 / 2008/6 / 19.80元<br/>
标签：投资&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：炒股思维总结之精华啊，炒股是要克服人性的弱点：无知，贪婪，恐惧和希望。</p></blockquote>

<h4>No.50 新手炒股入门</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/19949372/">新手炒股入门</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/19949372/">https://book.douban.com/subject/19949372/</a><br/>
出版信息：许仁忠 / 2012-10 / 29.80元<br/>
标签：投资&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：入门推荐看看，能了解学习不少基础知识和专业术语，操作评点也还不错。</p></blockquote>

<h4>No.51 小狗钱钱</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3576486/">小狗钱钱</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3576486/">https://book.douban.com/subject/3576486/</a><br/>
出版信息：[德] 博多·舍费尔 / 王钟欣、余茜 / 南海出版公司 / 2009-2-1 / 20.00元<br/>
标签：投资&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：理财概念入门书籍，讲得很不错，很有正能量。。。</p></blockquote>

<h4>No.52 为什么中国人勤劳而不富有</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3248513/">为什么中国人勤劳而不富有</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3248513/">https://book.douban.com/subject/3248513/</a><br/>
出版信息：陈志武 / 中信出版社 / 2008年10月第一版 / 36.00元<br/>
标签：投资&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：着重讲影响经济发展与国际贸易的制度性资本，陈是坚定的市场和金融派，他对房价与海外扩张的观点还是不错的，就是讲的太罗嗦，重复，这一点上就不如《金融的逻辑》了。</p></blockquote>

<h4>No.53 解读基金</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2051332/">解读基金</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2051332/">https://book.douban.com/subject/2051332/</a><br/>
出版信息：季凯帆 / 中国经济出版社 / 2007-4 / 22.00<br/>
标签：投资&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：看看前三章对基金知识的普及介绍即可，后面的博文全录基本上就是凑字数的。</p></blockquote>

<h3>心理: 3 本</h3>

<h4>No.54 进化心理学</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/2143904/">进化心理学</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/2143904/">https://book.douban.com/subject/2143904/</a><br/>
出版信息：David M.Buss / 熊哲宏 / 华东师范大学出版社 / 2007-6 / 49.80元<br/>
标签：心理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：一切都是选择适应性的问题，最重要的两个就是：生存与繁殖。进化心理学一统所有心理学，观点独到。作者的写书风格可以作为论说型书籍的典范。</p></blockquote>

<h4>No.55 你的记忆怎么了？</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/3129154/">你的记忆怎么了？</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/3129154/">https://book.douban.com/subject/3129154/</a><br/>
出版信息：（美）夏克特 / 李安龙 / 北方文艺出版社 / 2008-8 / 29.00元<br/>
标签：心理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：记忆脆弱的七宗罪，可以说是作者另一本书《找寻逝去的自我》外传版本，书中很多案例都来自另一本书，不过这一本有条理得多。</p></blockquote>

<h4>No.56 进化心理学</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/5422847/">进化心理学</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/5422847/">https://book.douban.com/subject/5422847/</a><br/>
出版信息：【英】Robin Dunbar　Louise Barrett　John Lycett / 万美婷 / 中国轻工业出版社 / 2011-2 / 26.00元<br/>
标签：心理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★</strong><br/>
我的评论：相比之下巴斯的那一本同名书水准要高很多，建议阅读那一本，这一本仅作补充，这本中间有讲婴儿心理的发展，而巴斯那本讲的很少。</p></blockquote>

<h3>教育: 2 本</h3>

<h4>No.57 吾国教育病理</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25733170/">吾国教育病理</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25733170/">https://book.douban.com/subject/25733170/</a><br/>
出版信息：郑也夫 / 中信出版社 / 2013-9-1 / CNY 42.00<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：作者博览群书，颇有思辨精神，但书中也有不少武断推论的硬伤，总体上来说还是相当不错的一本书，不但能纠出病理，还能瞟见独立思考，尤其是从第七章起的后半部分“放权”讲的不错。为人父母，为人师，为中国教育计，值得了解。</p></blockquote>

<h4>No.58 从出生到3岁</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1967845/">从出生到3岁</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1967845/">https://book.douban.com/subject/1967845/</a><br/>
出版信息：[美]伯顿·L·怀特（(Burton L.White） / 宋苗 / 京华出版社 / 2007-2 / 35.00元<br/>
标签：教育&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：从出生到3岁 : 婴幼儿能力发展与早期教育权威指南</p></blockquote>

<h3>人类学: 2 本</h3>

<h4>No.59 金翼</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1027210/">金翼</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1027210/">https://book.douban.com/subject/1027210/</a><br/>
出版信息：林耀华 / 三联书店 / 2000-04-01 / 12.00<br/>
标签：人类学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：述说两个家庭在中国民间传统文化与经济的背景下，面对新的商业社会的经济方式，如何调整适应以求新的发展或因不能适应而日渐衰落，再现了30年代前后中国农村生活的情景及经济变迁的剖断面。作者提出均衡理论：橡皮筋-竹竿模型来解释人际均衡关系。</p></blockquote>

<h4>No.60 林村的故事</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/1082196/">林村的故事</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/1082196/">https://book.douban.com/subject/1082196/</a><br/>
出版信息：黄树民 / 素兰、纳日碧力戈 / 生活·读书·新知三联书店 / 2002-3 / 18.00元<br/>
标签：人类学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：这是一部关于解放初至改革开放初(85年)见厦门城郊农村变迁过程的人类学著作，通过一个有个性有思想的村支书的之眼展现土地改革，公社，大跃进，大饥荒，四清运动，文革，家庭承包责任制，解体集体制，改革开放等众多社会大事对农村的影响。BTW，书中的村支书和我的岳父有点神似。</p></blockquote>

<h3>社会: 2 本</h3>

<h4>No.61 乡土中国 生育制度 乡土重建</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/10532835/">乡土中国 生育制度 乡土重建</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/10532835/">https://book.douban.com/subject/10532835/</a><br/>
出版信息：费孝通 / 商务印书馆 / 2011-12 / 50.00元<br/>
标签：社会&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★★</strong><br/>
我的评论：《乡土中国》是费孝通的成名作，作者从社会学角度来分析中国的乡土现实与情结，分析了为什么中国人的乡土观念这么强，家族宗法制的形成背景，乡绅阶层与地方自治以及无讼是求之间的关系。《生育制度》又结合中国的宗法家族制度以及伦理观念来讲述由中国式传宗接代观念而形成的亲戚、继承等各种生育制度，着重讲解中国特色的婚姻制度，家族观念之形成背景以及掩藏其礼俗表面下的缘由，进化因素，这对理解传统社会相当有帮助，对理解当今农村社会生活的一些习俗依然有非常重要的现实意义，比如理解娘亲舅大，爹亲叔大之缘由。《乡土重建》则是作者为民国政府重建农村经济出谋划策写的一些建议策略，对理解中国传统农村的经济状态非常有帮助。</p></blockquote>

<h4>No.62 王小波散文精选</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4023216/">王小波散文精选</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4023216/">https://book.douban.com/subject/4023216/</a><br/>
出版信息：王小波 / 长江文艺出版社 / 2009-7 / 20.00元<br/>
标签：社会&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：活着要有趣，社会要参差不齐。冷嘲反讽是作者的风格，虽不如鲁迅辛辣，却是真性情。作者貌似很推崇罗素。</p></blockquote>

<h3>哲学: 2 本</h3>

<h4>No.63 中国哲学史大纲</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4201709/">中国哲学史大纲</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4201709/">https://book.douban.com/subject/4201709/</a><br/>
出版信息：胡适 / 岳麓书社 / 2010-1 / 27.00元<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：哲学史大纲</p></blockquote>

<h4>No.64 中国哲学简史</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/4879726/">中国哲学简史</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/4879726/">https://book.douban.com/subject/4879726/</a><br/>
出版信息：冯友兰 / 赵复三 / 江苏文艺出版社 / 2013-1 / 22.00元<br/>
标签：哲学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：哲学简史</p></blockquote>

<h3>科学: 1 本</h3>

<h4>No.65 植物知道生命的答案</h4>

<blockquote><p>图书名称：<a href="https://book.douban.com/subject/25793667/">植物知道生命的答案</a><br/>
豆瓣链接：<a href="https://book.douban.com/subject/25793667/">https://book.douban.com/subject/25793667/</a><br/>
出版信息：[美] 丹尼尔•查莫维茨 / 刘夙 / 长江文艺出版社 / 2014-1-31 / 35.00<br/>
标签：科学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;评分：<strong>★★★★</strong><br/>
我的评论：植物也是有“意识的”，能看，能嗅，能触，有方位感，也有记忆，神奇吧。这本小小的科普书通过对比人类的感官系统，讲述植物如何感知外界除了听觉之外的各种刺激，有满足探奇增进见识之效用。</p></blockquote>

<h2>私人阅读年度统计：</h2>

<ul>
<li><a href="https://luozhaohui.github.io/blog/2018/01/01/reading/">2017，37本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2017/01/01/reading/">2016，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2016/01/01/reading/">2015，46本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2015/01/01/reading/">2014，65本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2014/01/01/reading/">2013，33本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2013/01/01/reading/">2012，43本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2012/01/01/reading/">2011，41本</a></li>
<li><a href="https://luozhaohui.github.io/blog/2011/01/01/reading/">2010，47本</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用 Synergy 在 Mac 与 Ubuntu 间共享键盘与鼠标]]></title>
    <link href="http://luozhaohui.github.io/blog/2014/12/08/share-screen-with-synergy/"/>
    <updated>2014-12-08T13:03:34+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2014/12/08/share-screen-with-synergy</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>Synergy 是一款相当不错的跨平台共享桌面的工具软件，我时常需要在 Mac &amp; Ubuntu &amp; Windows 等系统之间同步工作，因而利用这个这个工具能够大大提供生产效率。由于 Synergy 没有 UI 界面，程序员们开发了各种带界面的开源版本，如 QuickSynergy 或 SynergyKM 等。QuickSynergy 与 SynergyKM 可以混合搭配使用，即任选一个用作服务器，另一个用作客户端程序也是可以运行成功的。但是要<strong>注意各机器上的 Synergy 版本要一致</strong>，否则会出现不同版本不兼容导致无法链接通信！这个问题折腾来我好一会儿，通过安装 SynergyKM 查看日志才发现问题所在。</p>

<p>在本例中，使用 QuickSynergy 作为客户端和服务器，作为服务器的机器安装 Ubuntu 系统，客户端机器安装 Mac 系统。</p>

<!--more-->


<h2>工具下载</h2>

<p>QuickSynergy 工具下载：<br/>
Mac 版 QuickSynergy 下载链接一：<a href="https://code.google.com/p/quicksynergy/">https://code.google.com/p/quicksynergy/</a>  <br/>
Mac 版 QuickSynergy 下载链接二：<a href="http://sourceforge.net/projects/quicksynergy/">http://sourceforge.net/projects/quicksynergy/</a><br/>
Ubuntu 版 QuickSynergy 直接在 Ubuntu Software Center 中输入 QuickSynergy 查找安装即可。</p>

<p>若使用 SynergyKM，可以从如下链接获取：<br/>
SynergyKM 下载链接：<a href="http://synergykm.com/">http://synergykm.com/</a></p>

<h2>安装配置</h2>

<ol>
<li><p>Ubuntu 下的安装配置</p>

<p> 启动 QuickSynergy，显示界面有三个 Tab 页：</p>

<ul>
<li>Share Tab：该页面用于服务器。作为服务器的机器在该界面配置受其控制的客户端机器的主机名，然后点击 Excute 启动服务器端（实际上是执行程序：<code>/usr/bin/synergys</code>）；</li>
<li>Use Tag：该页面用于客户端。作为客户端的机器在该界面配置服务器机器的IP地址或主机名，然后点击 Excute 启动客户端端（实际上是执行程序：<code>/usr/bin/synergyc</code>）；</li>
<li>Setting Tag：该页面用于配置 Synergy 执行程序所在的目录</li>
</ul>


<p> 在这里，使用 Ubuntu 机器作为服务器，所以只需要在 Share Tab 界面上的相应位置（上下左右，我的 Mac 机器在左边，所以在 left 位置设置）设置 Mac 机器的主机名即可。Mac 机器的主机名查看方法如下：启动 terminal，输入命令：<code>hostname</code>，就能得到主机名。</p>

<p> 设置界面如下：<br/>
 <img src="http://i.imgur.com/ZhCLJVS.png" alt="Ubuntu QuickSynergy 设置" /></p>

<p> 然后点击启动。(注意需要先启动服务器端，然后再启动客户端)</p></li>
<li><p>Mac 下的安装配置
Mac 版 QuickSynergy 界面比 Ubuntu 版要简洁一些，启动 QuickSynergy，在 Share 页面设置 Server hostname/IP address 为 Ubuntu 机器的 IP 地址即可（Ubuntu 系统下启动 terminal，输入命令：<code>ifconfig</code> 即可查看 IP 地址，输入命令 <code>hostname</code> 即可查看主机名）。</p>

<p>  设置界面如下：<br/>
  <img src="http://i.imgur.com/kKxpgnx.png" alt="Mac QuickSynergy 设置" /></p>

<p>  然后点击 Run，这样就能够使用 Ubuntu 机器的键盘和鼠标操作 Mac 机器了。</p></li>
<li><p>Mac 下 SynergyKM 的安装配置<br/>
由于 QuickSynergy 不带日志输出窗口，有时候操作不成功也不知道是怎么回事，这时可以安装 SynergyKM 来解决问题。下载 Mac 版 SynergyKM，双击安装，在安装过程中选择 Client 模式，并设置 Screen Name 为 Mac 机器的主机名（也可以在安装完毕之后在菜单 Perferences/Setting 界面设置）。安装完毕之后启动 SynergyKM，勾选 Client 选择框，在 Server IP 处填写服务器机器 Ubuntu 的 IP 地址。</p>

<p>  设置界面如下：
  <img src="http://i.imgur.com/nNcKVPg.png" alt="Mac SynergyKM 设置" /></p>

<p>  然后点击 Apply 和 Start，就能在 Log 输出窗口查看日志，根据日志信息就能够知道是版本不匹配还是主机名设置错误等等。</p></li>
<li><p>修改 key-Mapping<br/>
由于 Mac 机键盘与非 Mac 机键盘的物理按键不同，所以在 Ubuntu 机器上的 Ctrl + C 并不能在 Mac 系统上产生同样的效果，这就需要在 Synergy 的配置文件中添加按键映射关系。首先关闭 Ubuntu 系统上的 QuickSynergy（每次启动 QuickSynergy 都会重新生成新的 synergy.conf），再在作为服务器的机器上的 terminal 中输入命令：<code>gedit ~/.quicksynergy/synergy.conf</code> 打开 synergy.conf，修改其内容如下：</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>section: screens
</span><span class='line'>  kesalin-ubuntu:
</span><span class='line'>  kesalin-iMac:
</span><span class='line'>      ctrl = meta
</span><span class='line'>      meta = ctrl
</span><span class='line'>      alt = alt
</span><span class='line'>      super = super
</span><span class='line'>end
</span><span class='line'>section: links
</span><span class='line'>  kesalin-ubuntu:
</span><span class='line'>      left = kesalin-iMac
</span><span class='line'>  kesalin-iMac:
</span><span class='line'>      right = kesalin-ubuntu
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>然后在 terminal 上输入命令：<code>/usr/bin/synergys -c ~/.quicksynergy/synergy.conf</code> 根据特定配置启动 synergys 服务端，就可以实现按键映射了。</p>

<p>为了避免每次启动系统之后都需要敲入上面的启动命令，可以在 Ubuntu 的启动项中添加上面的命令：点击 Perference->Startup Applications Perferences->Add，在 command 栏输入：<code>/usr/bin/synergys -c ~/.quicksynergy/synergy.conf</code> 即可。注意由于每次启动 QuickSynergy 都会重新生成新的 synergy.conf 覆盖我们修改好的配置文件，所以最好将修改好的 synergy.conf 拷贝备份为 synergy-keymap.conf，然后使用命令：<code>/usr/bin/synergys -c ~/.quicksynergy/synergy-keymap.conf</code> 作为自启动命令。</p>

<h2>参考链接</h2>

<p><a href="https://help.ubuntu.com/community/SynergyHowto">SynergyHowto</a><br/>
<a href="http://superuser.com/questions/90223/synergy-key-mapping">Synergy key mapping</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]洗脑秘笈：占领思想舆论阵地的十八个招式]]></title>
    <link href="http://luozhaohui.github.io/blog/2014/10/29/brainwash/"/>
    <updated>2014-10-29T19:21:34+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2014/10/29/brainwash</id>
    <content type="html"><![CDATA[<h2>转记</h2>

<p>今天在搜索波普尔的《辩证法是什么》一文时，无意中发现<a href="http://blog.kdnet.net/boke.asp?twokeqi.showchannel.0.1067.html">2可器的电线杆</a>在凯迪社区的博客。此人文笔和理论水平都不错，也非常推崇波普尔(看来反洗脑都需要攀登波普尔这座高山)。用他自己博客上的话来介绍就是：</p>

<blockquote><p>这是一个以消灭粪青和傻B（消灭一个是一个）、荡涤狼奶为己任，具有鲜明的大清末年时代烙印的博客。</p></blockquote>

<p>下面转一篇他最早写的一篇反洗脑的文章《洗脑秘笈：占领思想舆论阵地的十八个招式》。</p>

<!--more-->


<h2>前言</h2>

<p>有人说，极权的压迫者赖以为继的无非二招：暴力和谎言。而且但凡成功的压迫者总是能够很好地为两者排序，那就是谎言在先，暴力在后。</p>

<p>其实，这种排序并非统治者的自觉，因为赤裸裸的暴力和掠夺才是压迫者天然中意的方式，这种方式不仅高效、实用，而且简单、省事，甚至其本身就可以给统治者带来快感。从古罗马的斗兽场到中国小脚女人的裹脚布，其伟大程度或可不同，但做为压迫者从被压迫者残缺的肉体中获取快感的道具却是一样的。</p>

<p>但是，这办法却总是天不遂人愿。秦始皇席卷了六国，却被比自己还年长些许的陈胜毁于一旦。然而，秦朝统治者交学费换来的经验教训却为后续二千年的压迫者一直受用著。法家严刑峻法的暴力统治术随著秦王朝的灭亡也便从此没落，而成就了儒家思想的兴旺发达。董仲舒「废黩百家、独尊儒术」之日，便是中国政治暴力退居幕后，政治谎言走上前台之时。</p>

<p>如此说法并非对儒学的大不敬，儒家思想本身无疑是一套成体系的思想，而与谎言无涉。因为谎言显然是成不了体系的，不漏洞百出、自相矛盾已算不易，怎能流传二千余年以至海外？但是，儒家思想却不幸沦为了思想钳制的工具，就如同尼采的思想成了纳粹的工具，而从马克思哪儿生出了乌托邦的谎言一样。</p>

<p>时至今日，谎言在前、暴力在后的模式显然并没有改变。在此，我们看一看思想钳制这一古老而有效的统治工具是怎样为现实的中国统治集团提供政治服务的，它有哪些隐蔽的利用方式。</p>

<h2>洗脑十八式</h2>

<h3>一曰【栽赃式】</h3>

<p>2000年7、8月间，北京发行量极大的《北京青年报》某期头报头条刊载了一篇长篇报导，说在墨西哥境内与美国接壤地带，经常有工厂女工夜里下班途中被歹徒抢劫、奸杀，通篇文章愤怒地遣责、辛辣地挖苦美国政府和FBI：为甚么对眼皮底下的事熟视无睹？所谓的「人权卫士」为甚么管不好家门口的事？他们的原则和「人权标准」哪里去了？等等。整篇文章把美帝描述成一个持双重人权标准的、利欲熏心的邪恶国家，而且作者显然长于文字游戏，只在开头简单介绍了罪案地点，以后只是就事论事的遣责美帝。让缺少地理概念、对境外知之甚少的普通市民很难搞懂这其实是黑西哥内政，与美国根本搭不上界。即便是笔者，也是费了老大眼力也分清这层关系的。此招就是只要有机可乘，采用无所不用其极的手段抹黑对方，遑论最底线的新闻道德。</p>

<h3>二曰【阉割式】</h3>

<p>此为最常用的手段，在前几年的科索沃战争、周边的领土争端和国际贸易纠纷等方面有著广泛的应用。如果仅仅在有争议事件上采用此招，倒也罢了，然而，在一般性新闻上，亦如此。比如中外元首会晤或联合国会议，你很难听到外国政府的主张，既便有，大抵是「对中国政府的立场表示赞赏」之类。久而久之，中国政府就把自己打扮成了一个充满道义的、代表全世界声音的、受到国际社会拥护的正义政府。那么，再有「反华」事件，肯定是出于「别有用心」，而且「注定要失败」了。</p>

<h3>三曰【明目张胆式】</h3>

<p>所谓明目张胆，不仅是指中国居然能炮制出类似于《中国人权优于美国》这样的数万言报告，并通过各种媒介广而告之；而且还指在中国的媒介中广泛存在著类似于如下事情：每年，美国国务院会出一个《人权报告》，中国政府每年也会出文章驳斥。98年也不例外，在中国政府的那份驳斥文章里，以一贯的正气凌然的口气痛斥美帝「颠倒黑白」、「捏造事实」、「别有用心」后，出现了如下文字：「（《报告》）一方面污蔑中国没有迁徒自由，另一方面又承认中国内地每年有几百万人去沿海打工」，可见其「自相矛盾」、「漏洞百出」（可能和原文字有出入）。迁徒权=移动权？中国政府这样享用五十年愚民的硕果！这样玩弄一个人类普适的人权概念！</p>

<h3>四曰【常有理式】</h3>

<p>我们经常可以看到这样的报导：如果英美有同样的外交政策，我们就说英国是「跟屁虫」（真的用过这个词）；如果两国意见不一，我们就说：看！连美国最亲密的盟友都不与之为伍了。总之或者斥之为狼狈为奸，或者是众叛亲离。如果美国介入中东了，当然是霸权的表现；如果不介入中东了，肯定是不负责任的表现。总是占著思想舆论阵地的制高点。另一大类突出的例子是这样的：中国政府对日本的右翼行为猛烈抨击，但中国一旦被国际社会批评，总是祭出 「内政论」、「主权论」、「国情相对论」，言词凿凿，总有道理。</p>

<h3>五曰【鸵鸟式】</h3>

<p>如果在内外政策上总能言词凿凿，也算是高超的政治智慧，但确实有找不到词的时候，就把头埋进沙里，视而不见。最突出的例子是印尼反华事件。事件暴发后，中国政府竟说这是印尼内政，中国不予干涉！！一分不少地支付了数亿援助。客观上极大地纵容了事件的恶化。政府自己也知道没法向国内交待，乾脆佯装不知，封锁消息达三月之久！数千同胞肝脑涂地之日，却是祖国政府和人民视而不见之时！</p>

<h3>六曰【偷梁换柱式】</h3>

<p>这又是一个被中国政府运用得炉火纯青的手段。例子之多，顺手拈来：89之后，政府组织了一群御用文人写了一本《河殇的100个错误》（书名可能不准确），真真的写了河殇「100条错误」。河殇里有一段是这个意思：当罗马帝国以为统治了全世界的时候，它并不知道在东方还有一条「长城」在等著它。各位看官，有谁不知道这「长城」是种修辞，代指中国？但这群作者引用地理知识证明长城在中国的哪里哪里，罗马帝国若来的话，会从哪里哪里来，因此根本遇不上长城，云云。让人想起尹索《狼和羊》的寓言：狼是不缺少藉口的。2002年4月新闻：专家研究表明，中国成了初等发达国家。《南方周末》记者就此采访专家组组长何传启才发现，此「初等发达」其实就是国际上的「欠发达」，而且还没考虑环境和政治文化权利方面。至于为甚么不用通用的「欠发达」而用「初等发达」，专家何传启说：「很难听，很难听。应该从积极的角度来命名它。这个名字要在政策上、老百姓心里产生一种正面的效应。」（见4月25 日《南方周末》第A4版）也是4月中旬，新华社报导，港人移民人数远较回归前那几年下降，言外之意，回归后比英国治下强多了。然而，明眼人有谁不知97以前移民潮的根源？这种偷梁换柱的技俩太多了，比如还有：把「登记失业率」等同于「失业率」；把「反共」等同于「反华」，等等。</p>

<h3>七曰【引经据典式】</h3>

<p>一般用于理论战线。从经典作家那里引经据典，推演理论。通常洋洋洒洒数万字，看得人头晕脑胀。你觉得还没开始主题的时候，它已经一棰定音了：「历史反覆证明了，走社会主义道路……」，让你不知从何而来。但你不得不佩服作者的理论水平。</p>

<h3>八曰【牵强附会式】</h3>

<p>每每救灾之后，总要找到几个灾民对著记者话筒说：「还是党好！还是社会主义好啊！」</p>

<p>我不知道911后的美国政府是否要出钱出力救助灾民，也不知道封建王朝是否有过开仓济粮，只是每每听到，总会浑身打冷战。</p>

<h3>九曰【排词遣句式】</h3>

<p>不用举例了，日日的报纸都是这样的，随手翻开就能看到。凡事涉非我族类的，尤其是美帝和台湾，必要多用贬意词，「密谋」、「公然」、「妄图」、「一小撮」等等；事涉国内大好形势的，则须多用褒意，如「受到群众好评」、「被传为佳话」、「群众们都说，……」、「大伙份份表示：……」等等。</p>

<h3>十曰【样板式】</h3>

<p>树立样板是我党多年积累的政治斗争经验，可惜常出差错。差错一般出在两个方面，第一个方面是所树的样板时过境迁不合时宜，甚至成为过去政治荒谬的明证，如刘文学斗地主、「共和国卫士」等；另一种样板是根本树错了人，其后果是：越来越多的落网贪官拥有越来越多的「劳模」、「廉政」、「先进」招牌。</p>

<h3>十一曰【相对论式】</h3>

<p>面对国际社会的抨击而理屈词穷的时候，一般祭出国情相对论，在人类普适的人权标准之外，再来一套中国标准。而且这中国标准里真正实在的东西只有生存权，即吃饱穿暖两件事，其它权利都是假、大、空。因此有人说中国式的所谓「人权」，其实就是动物权。</p>

<h3>十二曰【自我标榜式】</h3>

<p>很少有人或组织会如中国执政党这样自我标榜的。它宣称自己是「伟大、光荣、正确的党」，同时又宣称自己有著「谦虚谨慎」、「批评与自我批评的优良传统」；制造了文革这样的人间浩劫，不仅不影响党的形象，反而更加证明了党的英明，因为全面拔乱反正、否定文革 「再次证明了我党勇于改正自身错误，勇于开展批评与自我批评……」。问天怎忍如此！</p>

<h3>十三曰【画大饼式】</h3>

<p>充分利用中国百姓的朴实，像邪教一样画一个不切实际的大饼，让人们满怀希望地屈从于现实。五六十年代画「赶英超美」、「跑步进入共产主义」的大饼；文革以后，百姓不再相信那虚无飘渺的乌托邦梦幻，迫切需要改善生活，因而提出「三年实现全国农业机械化」，「2000年实现四个现代化」；改革开放后，邓小平提出到上世纪末人均生活水准达到多少多少元，事隔数日又说，那是不考虑人口增长的情况下，如果考虑到人口增长，又当如何如何。老天，国家的最高领导人，事涉国家的中长期目标，居然不考虑人口问题？居然可以这样改来换去的？近两年，这饼已经不好画了，但中国人有民族情绪。因此，中国媒介就开始出现这样的标题：「二十一世纪是中国人的世纪」、「二十一世纪的文化是儒家文化」，「儒家文化的第三次复兴」。</p>

<h3>十四曰【耸人听闻式】</h3>

<p>「如果没有党的领导，就会四分五裂」，「不实行社会主义制度，就会出现严重的贫富分化」，「如果不坚持正确的思想舆论导向，就……」。不仅对内而且对外：「六七十年代的美国四分五裂……」，「（台湾增加军费）有可能拖跨岛内经济」。一切说法，无非要证明现状是合理的、而自己比别人强。</p>

<h3>十五曰【借刀杀人式】</h3>

<p>众所周知，西方不同政治派别间相互制衡、攻击是常态，而且，西方传媒无须考虑「主旋律」，加之西方文化特有的「乌鸦」特色使其惯于自爆家丑。这正好合了我国胃口，看一看《参考消息》从国外传媒上摘录的文章，但凡事涉西方的基本都是「唱衰」式。这还算严肃的，更常见的是用「……」 （引号）从外刊上断章取义的，砍头截尾，也不注明出处，完全违背摘录的起码原则。并且还时常冠以「国外有识之士指出……」之类。</p>

<h3>十六曰【声波式】</h3>

<p>一想到新闻联播，就能想像得到那几个主持人特有的声波。他（她）们一般提细了嗓子，脑袋略微倾斜，或义正言辞严正指出、或热情洋溢深情歌颂，力图最准确、最充分地把新闻背后隐藏的意识形态传播出去。甚么是新闻主持人最底线的素质？自然不予考虑的。</p>

<h3>十七曰【诛心式】</h3>

<p>诛心之术自古有之，早在王安石《答司马谏之书》中就有精彩运用，王安石并没有答覆司马光对他排斥异见的指责，而是说那些异见都是「小人」之言，所以不值得一听。这招到了现代有出神入化的运用。早些年藉助革命狂热，将「小人」的帽子换作了「反革命」之类；现代往往借用民族情绪，通过「别有用心」、「怀有不可告人的目的」、「一贯敌视……」等词汇，将对方的目的、动机置于不义，至于具体事情、主张往往轻描淡写甚至一绕而过。而且这招居然用在学术上，早年马寅初所获之罪并非源于学术主张本身，而是基于「反党反社会主义」的动机上的；前几年美国学者布朗提出「谁来养活中国」，也遭到同样待遇；最近国际上有些经济学家困惑于中国经济反常的一枝独秀式增长，并做出了不太养眼的学术分析，其结果当然被戴上了「仇视中国」、「不愿看到中国崛起」的帽子。</p>

<h3>十八曰【暴力式】</h3>

<p>此法是最后一招，一般不常用，一旦使用，必是「事关我党生死存亡」的关键时刻，比如时期。用时直接配合国家镇压机器，是话语霸权和语言暴力的最集中体现。使用的时候，先要创造外部环境，就是通过各种手段彻底扫清不和谐声音。然后以大兵团作战方式，通过各种媒体、会议、印刷品、高音嗽叭滚滚而来，强行灌输。综合运用前面的各种招式，具体策略多种多样。有：恐吓：「我们警告那些……，不要妄图……」、「中国政府和人民决不会答应……」；欺骗：「我们决不会秋后算帐」；漫骂：「……赤膊上阵」、「……叫嚣」、「一只伸向……的黑手」；分化：「广大……还是好的，……一小撮……」；「广大不明真相的群众」。等等，不一而足。</p>

<h2>结语</h2>

<p>思想的钳制的工具，实际上是由一群御用文人精心炮制的，而且颇能因地制宜、随时代变化，也不乏各种招式的组合运用。</p>

<p>我们国家的舆论特点是针对或者利用三个方面，有条不紊的展开，即粉饰太平、妖魔化国外和煽动情绪。自建国以来，概莫能外，只是各个时期的方式方法不同，看一看这三个方面是如何演化的：</p>

<ul>
<li><p>首先看看粉饰太平。从赤裸裸的宣传「形势一片大好，而且一天比一天好」变为 「经济持续强劲增长」、「有望成为亚洲经济增长的火车头」、「二十一世纪必将是中国人的世纪」 。其具体方法是从政客的强词夺理、胡说八道转化为由学者以点带面、以偏概全，并在「学术论证」中隐蔽性地胡说八道。前面提到的关于中国已进入初等发达国家的例子就是一个明证。不论如何偷换概念，自立门派，其结果已超出最一般的经验。当事学者居然也毫不掩饰，直言要「要在政策上、老百姓心里产生一种正面的效应。」。坦荡至此，也算到了境界。</p></li>
<li><p>其次是妖魔化国外。直至今日，我还记得二十年前某期《小朋友》上的一组漫画。左边那幅是资本主义的万丈高楼、高楼下行乞的老人和昂首阔步、大腹便便的资本家，文字是「资本主义的一角」；右边那幅是一家人怀里抱著各种生活用品，眼角挂著幸福的泪珠，后面是失火后还冒著黑烟的房子，文字是「社会主义邻居」：这就是我们从小接受的教育。二十一世纪的媒体呢？2000年有一份报纸，国际新闻版用大号字写著英国一枪手在校园扫射，造成师生几死几伤的枪击案，并配以大幅图片；另一版则在一个不显眼的豆腐块里，用最小号字写著国内某农民用菜刀破死七人。极具讽刺的是，这两则新闻正好背靠背。</p></li>
<li><p>第三招是煽动情绪。以前是组织大家吃忆苦饭、开批斗会，甭论你是自愿参加的，还是被强迫去的，到了那种氛围里，肯定被同化。然后媒体上充斥著最高领袖接见红卫兵的欢腾场面，高昂的革命歌曲和节节胜利的喜讯。现在则是将革命激情转到了民族主义，比如煽动大学生反美示威、连篇累犊地分析如何从英帝国那里雪了百年国耻、把申奥成功描述得好像中国人民又一次站了起来。此外，一些正常的贸易纠纷、一个牛津留学生学业出众的假新闻居然也很自然地和民族情绪扯上了关系。</p></li>
</ul>


<p>甚至于把这种激情带到了政府托市上，想想那年《人民日报》评论员鼓吹股市大发展的激情洋溢吧！何曾考虑过经济规律和小股东利益？</p>

<p>这就是作为统治手段的思想钳制。它对于压迫者之重要和有效，是如何估计都不为过的。</p>

<p>正如有人所言，在压迫者所豢养的帮凶里，有人是打手，专司暴力；有人是写手，以编造谎言为职业。谎言是日日编造的，而暴力只是偶而为之。在中国自秦以后王朝的官僚体系里，莫不是文官之位重于武将。其实道理容易理解：文官们需日日道德文章，而武将们既然只有「安内」之责而无「攘外」之事，只好「养兵千日，用兵一时」罢了。因此，随著两千年来的演变，思想钳制已不仅仅是对暴力的掩饰，而成为压迫之首要方法；相反，暴力已沦落成「保驾护航」式的工具，为谎言修补一下被戳穿的窟窿，收拾一下残局而已。</p>

<p>思想钳制流毒之深，显则直接复辟，隐则借尸还魂，古今中外，概莫能外。如此好手段，压迫者也不得不放弃了观赏斗兽场和女人小脚的嗜好，变得温文而雅起来；以至于有时分明站在了被压迫者一边，要「破四旧」、「砸孔庙」、发动人民革命。在这轰轰烈烈和温文而雅之间，屡试不爽的压迫之术找到了它新的代理人，而新贵们以多数人的血泪换取了作为压迫者的历史通行证。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]戏侃马克思主义及其错误]]></title>
    <link href="http://luozhaohui.github.io/blog/2014/10/21/play_with_marxism/"/>
    <updated>2014-10-21T19:35:52+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2014/10/21/play_with_marxism</id>
    <content type="html"><![CDATA[<h3><a href="kesalin.github.io">飘飘白云</a>转记：</h3>

<p>这篇文章是作者樊弓于2001年发表的，被评为那一年网上最佳时政文章，至今生命力不减，足可见其文内功如何。作者的论证最成功的是从经济学角度着手批判马克思主义，这点很大程度上与《<a href="http://book.douban.com/subject/1077528/">通往奴役之路</a>》思路一致。作者没有批判马克思主义的另一著名观点：唯物主义历史发展观。马克思主义唯物历史观认为人类社会是要经历奴隶，封建，资本，社会，最终到达终极的共产主义，并认为这是历史发展的必然规律。这种观点一方面肯定历史发展的动的方面，一方面又断然认定这个发展有个静的终点，这很有点“<a href="#doublethink">双重思想</a>”的味道。波普尔在《<a href="http://book.douban.com/subject/3803268/">历史决定论的贫困</a>》一书中对这一观点（波普尔称之为“历史决定论”）进行批驳。波普尔主要的论证过程为：由于人类根本无法预知人类知识的增长，而历史进程的发展又受制于人类知识的影响，所以人类无法对人类社会未来的发展进行预测，因此所谓的“历史决定论”实际上是毫无可能的。也就是说我们不可能预测人类社会必然会经历社会主义，最终到达终极的共产主义。</p>

<p>要深入了解这些批驳的论证过程，建议阅读如下书籍：</p>

<blockquote><ol>
<li>《<a href="http://book.douban.com/subject/3719533/">经济学原理-微观分册</a>》，N.格里高利·曼昆著，梁小民译</li>
<li>《<a href="http://book.douban.com/subject/1077528/">通往奴役之路</a>》，弗里德利希・冯・哈耶克著</li>
<li>《<a href="http://book.douban.com/subject/3803268/">历史决定论的贫困</a>》，卡尔·波普尔著</li>
<li>《<a href="http://book.douban.com/subject/1015748/">开放社会及其敌人</a>》，卡尔·波普尔著</li>
</ol>
</blockquote>

<h2>戏侃马克思主义及其错误</h2>

<p>作者：樊弓</p>

<p><span id="catalog"></span></p>

<h2>目录</h2>

<ul>
<li><a href="#preface">前言</a></li>
<li><a href="#section1">第一节：天堂梦</a></li>
<li><a href="#section2">第二节：各取所需</a>

<ul>
<li><a href="#chat1">节间闲话之一</a></li>
</ul>
</li>
<li><a href="#section3">第三节：公有制和“各尽所能”</a></li>
<li><a href="#section4">第四节：劳动时间和商品价值</a>

<ul>
<li><a href="#chat2">节间闲话之二</a></li>
</ul>
</li>
<li><a href="#section5">第五节：计划，计划，如何计划？</a>

<ul>
<li><a href="#chat3">节间闲话之三</a></li>
</ul>
</li>
<li><a href="#section6">第六节：剩余价值之迷思</a>

<ul>
<li><a href="#chat4">节间闲话之四</a></li>
</ul>
</li>
<li><a href="#section7">第七节：剩余价值之迷思（续）</a></li>
<li><a href="#section8">第八节：分饼的政治学</a>

<ul>
<li><a href="#chat5">节间闲话之五</a></li>
</ul>
</li>
<li><a href="#section9">第九节：分遗产的经济学</a>

<ul>
<li><a href="#chat6">节间闲话之六</a></li>
</ul>
</li>
<li><a href="#section10">第十节：再侃自私自利</a>

<ul>
<li><a href="#chat7">节间闲话之七</a></li>
</ul>
</li>
<li><a href="#section11">第十一节：铅笔是怎样造出来的</a>

<ul>
<li><a href="#chat8">节间闲话之八</a></li>
</ul>
</li>
<li><a href="#section12">第十二节：专制的诱惑</a>

<ul>
<li><a href="#chat9">节间闲话之九</a></li>
</ul>
</li>
<li><a href="#section13">第十三节：继续革命</a></li>
</ul>


<!--more-->


<p><span id="preface"></span></p>

<h2>前言</h2>

<p>本文原题为”闲侃”。后一想不对，樊某最近不但不闲，简直是屁滚尿流。题目错也！细想一下，既然用意是想以幽默放纵的口吻和深入浅出的方式来讨论那个对我们的国家、社会和人生影响最为深远的学说，叫“戏侃”则更合适。还是这个方式，边写边改边贴。</p>

<p>最近在网上发了几篇文章，数度提到马克思主义。便有网友以为樊某不懂装懂，随便玷污神圣。樊某真没想到，在经历了“苏东波”和改革开放的今天，信仰马克思主义者还能有这么多。樊某曾跟泰山大人谈起老马的谬误，本意是给岳丈露一手，没想招来好一顿臭骂：“全国上下那么多研究马列的还没你懂？”差点没把女儿抢回去。</p>

<p>加上老樊在“论六四模拟法庭”中自报家门，更有人提醒在下，你不是陈景润同行吗？怎么“带球出界”了？当年徐迟写了篇著名报告文学“哥德巴赫猜想”，网友应大多读过。徐老兄用尽浑身解数，向全天下做广告说数学家都是生活不能自理的呆子。害得吃数学饭的简直都得打光棍。其实现实生活中的数学家，大多涉猎广泛，且吃喝嫖赌，五毒俱全，跟常人差不多。</p>

<p>樊某到16岁那年才读“共产党宣言”，好不容易把前面那些枯燥的各版序走过，眼睛一亮，那一句“一个幽灵，共产主义的幽灵，在欧洲上空徘徊……”立刻钩住了我的魂。一口气读下去，小樊是热血沸腾。樊某佩服芦笛等前辈的原因之一，是他那一代掀起轰轰列列的地下读书运动时，小樊正在死啃马克思恩格斯选集。而且是一字一字地全部读完。刚刚放下那四卷八大本，邓小平宣布恢复高考。政治那一门小樊自然是不用复习也考了90来分。凭这报哪个第一志愿都得取。因此从个人恩怨上讲，樊某对邓小平马克思只有感谢的份。</p>

<p>樊某对马克思主义的理解，是在以后乱读各种学说时不断加深的。明天可能比今天又有新的深入。在此侃一部分，众网友中必有教我者。</p>

<p>话说回来，数学教授侃马克思主义，恐怕要让人文大师们恼火。因此樊某声明，在下是以文会友，以文求教。再说，听听数学家评论，不管有没有道理，总应该是有好处的。另外，樊某的观点，多半不是创见。樊某读书常忘出处，始作俑者若发现其理论被剽窃于此，千万发个伊妹儿告知。</p>

<p>各门宗教信徒饶恕樊某。在下绝对尊敬一切宗教。如有顽皮之词只是为增加文章可读性，不要跟樊弓这种不可救药之人一般见识，再拜。</p>

<p>戏侃马克思主义正式开始。</p>

<p><span id="section1"></span></p>

<h2>第一节：天堂梦</h2>

<p>人类有两个生生不息的庸俗梦想，一是永生，二是天堂。马克思逃掉了永生一俗而免不了第二俗。而且马克思比李洪志的雄心要大得多。宗教是骗你死后或来世进天堂。老马则不然，忽发奇想要建一个人间天堂，名叫“共产主义”。</p>

<p>胡平先生有句话，大意是“永生和天堂都是极其无聊的东西”。你信不信？刚到美国时一位希腊籍某教虔诚信徒执意要拯救樊某。（为避免得罪该教，隐去教名。望各教信徒不要对号入座。）用“天堂地狱”晓以利害，可谓苦口婆心。于是有下列对话：</p>

<blockquote><p>教徒：跟随我主者死后可进天堂。
樊弓：天堂好玩儿吗？
教徒：天堂尽善尽美。
樊弓：进天堂后可有篮球打？
教徒：（停顿，岂有此理？）天堂好处多多，还打什么篮球？
樊弓：不好意思，就爱打篮球。
教徒：既然你喜欢篮球，尽善尽美处应该是有的。
樊弓：那我在天堂打球可有赢球之乐？
教徒：天堂满足你的一切要求。要赢则赢。
樊弓：那我赢谁？
教徒：（语塞）<br/>
樊弓：如果我没有输球之虞，那我赢球的乐趣何在？原来你家圣主是要尽找些下三滥到天堂陪樊某打球，免了，免了。</p></blockquote>

<p>你看这宇宙之中能有天堂吗？你评评理，这天堂是不是无聊？</p>

<p>幸福是相对甚于绝对。我们觉得幸福是因为我们看见别人之幸稍逊于我，或是看见自己今天之幸胜于昨天。消灭不幸的同时也就消灭了幸福本身。</p>

<p>天堂的诱惑是“尽善尽美”。然而“尽善”也正是天堂梦想的致命伤。因为一旦“尽善”，则无“更善”。人类偏偏是追求“更善”的动物。当人被置于断绝“更善”希望之地，要么屈服，要么反叛。人类就是这么贱。</p>

<p><strong>结论</strong>：</p>

<blockquote><p>在上帝面前人的罪孽太深重。人类不配有天堂！不配进天堂！</p></blockquote>

<p>天堂梦想只适合做白日梦消遣，只属于教堂。绝对不能认真。一认真就漏洞百出。更重要的原则是，你的天堂仅属于你，未必适合我。马克思的共产主义天堂可不得了，自己做梦不算，非要强加给全人类，而且要用暴力革命来实现。太可怕了。</p>

<p>你说这是不是邪教？</p>

<p><span id="section2"></span></p>

<h2>第二节：各取所需</h2>

<p>共产主义天堂一言以蔽之，是“各尽所能，各取所需”。后来被篡改为“各尽所能，按需分配”。没那么多东西去取怎么办？伟光正解释说：</p>

<blockquote><ol>
<li>天堂里物资“极大丰富”。</li>
<li>那时人皆圣人，思想水平无穷高，不会去乱取一气。</li>
<li>还是要分配的嘛。</li>
</ol>
</blockquote>

<p>请网友们想深一层。先不要说物资能有多大丰富。就算汽车丰富到人手一车，那时谁去“取”奔弛宝马，谁去“取”天津夏利？你可能说那时汽车没这么个区别，那公路上跑的车全一个样你高兴不高兴？</p>

<p>NBA决赛那两万来张门票让谁来“取”？你要是建一个球场把所有球迷都装下，那谁坐前排？</p>

<p>伟光正也发现了这些漏洞。故改为“按需分配”。那就更糟了。分得不均怎么办？谁来分配？当然是伟光正啦。通往奴隶制之路就是这样建成的。</p>

<p>如果说“各取所需”的漏洞是无视资源的有限性，而“按需分配”在逻辑上则是自相矛盾。既然“按需”来给，还分配个啥子。“分配”就意味着有一个分配者来决定，哪些需要是不能满足的，因而必定是不能“按需”的。</p>

<p><strong>结论</strong>：</p>

<blockquote><p>无论是各取所需，还是按需分配，这样的天堂都是不存在的。一旦存在，则非天堂。</p></blockquote>

<p>至于“天堂”里能否人皆圣贤，有两种对立的流行说法：</p>

<blockquote><ol>
<li>只要把人的思想觉悟提高到共产主义社会的要求，共产主义便能实现。</li>
<li>正因为人的普遍思想觉悟不可能达到共产主义的要求，因此共产主义不可能实现。</li>
</ol>
</blockquote>

<p>樊某认为，这两种说法都不对。而且，在下对此将有震聋发聩的分析。请网友们容我先卖个关子。读到后面自见分晓。</p>

<p><span id="chat1"></span></p>

<h3>节间闲话之一</h3>

<p>樊某本文，好象是得罪了全天下的基督徒。在下负荆请罪。樊某生性顽皮。常有亵渎神圣之言，意在挠网友们的胳肢窝。樊某已经自认无药可救，尔等何必跟在下一般见识？</p>

<p>樊某最近大忙。本文只能是边写边改边贴。实实是想到哪侃到哪，望网友们不吝赐教，多发见解。樊某不胜感激。</p>

<p>世界有两种讲学问的人，一种人是有意无意地把未必深奥的理论讲得玄乎无比。你听不懂是因为你没修够基础课。他深怕不玄乎显得没本事。这种人在数学家中占90%以上（绝大多数数学演讲5分钟后听众便不知所云）。别的学科里这种人有多大比例不敢说，樊弓的师父是另一种学人。写文章做演讲一定要把深奥理论讲得中学生听懂了才算有学问。樊弓师兄弟们出去演讲前，必跟师父先讲三遍以上。网友们可能不信，师兄的一个演讲被师父臭骂了19遍。第20遍听完才说：徒儿可以去了。樊弓本文涉及的理论，完全可以玄得如同嚼醋。而樊某的目标，是要这些理论侃得如儿戏般简单。这不是对这些理论的不敬，乃不负师父教诲也。</p>

<p>后面要侃马克思的经济学，网友们会发现，象“边际效用”这样的吓人词汇，其实也是很好懂的，就看你想不想要人懂。</p>

<p>另外，请网敌不必用樊某曾是马克思主义者来奚落在下。樊某对此无怨无悔。一个人20岁以前不信马克思主义是无心肝，30岁以后还信则是无ｘｘ（记不得是何人名言。ｘｘ说不出口是因为有座右铭三约束，网友不必追问。） （<a href="kesalin.github.io">飘飘白云</a>注：这句话来源不可考，“无ｘｘ”有“无良心”说，也有“无大脑”说。）</p>

<p>网友中有一种普遍共识，以为马克思是对的，错在列宁斯大林。樊某意在改变这种思维。在下坚信，马克思主义从马克思起就错了。到列宁斯大林毛泽东，错误则变成了罪恶。请网友们听我细细道来。</p>

<p>接着侃。－－－</p>

<p><span id="section3"></span></p>

<h2>第三节：公有制和“各尽所能”</h2>

<p>马克思天真地假定，一旦生产资料公有，人人都会“各尽所能”。因为人人都在为那个公有的“自己”工作。</p>

<p>是嘛，你多工作一点，这个公有社会的财富便增加一点，于是你的财富便因公有而随之增加。人们怎么不“各尽所能”呢？这怎么会是不对呢？</p>

<p>世界上的一切错误思潮，乍一听都是正确的。而大多数人都不具备深入分析的兴趣、能力和学问。小樊当年也是如此。</p>

<p>马克思的错误在于<strong>一无严格定义，二乏定量分析</strong>。</p>

<p>首先，“各尽所能”是什么意思？工作8小时就回家那显然没有尽其能。你完全可以再干一小时嘛。从严格意义上讲，你只要不干活累死，你就没有“尽”你之所能。老马显然不指望人人都累死，就是忘了搞清楚这“能”该如何“尽”。</p>

<p>老马的“数学手稿”写得比数学家樊弓还认真。可惜在这个假定上没有做最简单的定量分析：</p>

<p>在一个1000人的公有社会里。一个人加班一小时所增加的产值，摊到他头上，只值1/1000小时。这种用1去换1/1000的买卖，只有傻帽才干。</p>

<p>反过来，当他偷懒一小时，只损失1/1000小时。这种用1/1000小时的产值换取1小时休闲的勾当，绝对值得！</p>

<p>如果这个共有社会是由一亿人组成的，那更是不得了。一个人“尽”其所能，给那个公有的“自己”增加的财富也是约等于零。他是不是吃饱了撑的才去受累？</p>

<p>想用公有制来促使人人去干那种无法定义的“各尽所能”，是对人性的错误假定和对数学的错误应用。与马克思的愿望恰好相反，无论从理论上还是实践上，正确的结论只能是：公有制是懒惰的温床。马克思在这里可是错得连边都不沾。</p>

<p>Air ball! Air ball!（篮球俚语，指投篮是篮筐、篮板和篮须三不沾）</p>

<p>比公有制私有制谁是谁非更重要的问题是：要搞公有制你去搞啊，谁拦着你了？</p>

<p>从来没听说资本主义社会里禁止开公有企业。你老马找一帮人去试验试验嘛（据说以色列就有共产主义公社）。那马大胡子吃饭都要恩格斯供着，办不出公有企业本来也没人笑话。可他一不劳神搞试点，二不耐烦建特区，要干就是全世界工人阶级总暴动。我的妈呀，你悠着点行不行？</p>

<p>根据马克思版的《<a href="http://zh.wikipedia.org/wiki/%E4%BA%94%E4%B8%83%E4%B8%80%E5%B7%A5%E7%A8%8B%E7%BA%AA%E8%A6%81">五七一工程纪要</a>》，那总暴动一旦闹腾起来，就要剥夺“剥夺者”，全面共产。你那时想跟他打个报告开块自留地，门都没有。</p>

<p>诉诸暴力，有我无他，是马克思主义公有制的两大胎记。真无毒不丈夫也！</p>

<p>（注：《<a href="http://zh.wikipedia.org/wiki/%E4%BA%94%E4%B8%83%E4%B8%80%E5%B7%A5%E7%A8%8B%E7%BA%AA%E8%A6%81">五七一工程纪要</a>》是林彪的武装起义纲领）</p>

<p><span id="section4"></span></p>

<h2>第四节：劳动时间和商品价值</h2>

<p>马克思是唯物主义者。只相信商品的内在的、用所谓“劳动时间”来量度的价值。因此马克思不能理解下述商业行为的意义：</p>

<blockquote><ol>
<li>张三生产了10个苹果。李四生产了10个橘子。王五不生产任何产品，只当一个中间人。为说明问题，我们还可以假定这王五懒得门都不想出。打定主意这回不干任何“劳动”。</li>
<li>王五向张三借6个苹果，跟李四借6个橘子，捎个口信叫他们分别送来。</li>
<li>王五当即还给张三4个橘子，李四4个苹果。跟二人说声拜拜。自吃2个苹果2个橘子。</li>
</ol>
</blockquote>

<p>假定苹果和橘子的“劳动时间”相同，按马氏理论应等价。那么张三李四是不是以6换4的傻帽？王五是不是不劳而获的奸商？根据马克思主义，答案应该是“是的”。</p>

<p>马克思主义经济学连张三干吗要用苹果换橘子都闹不清。你有苹果吃不就得了？</p>

<p>马克思所不懂的是，商品不但有价值，而且有“效用（Utility）”。张三辛苦了一年终于有苹果了。这第一个苹果多香啊！于是这第一个苹果的“效用”最大。</p>

<p>一个苹果已下肚，这第二个就差多了（边际效用递减开始）。这“下一个苹果的效用”，就是所谓“边际效用（Marginal Utility）”。</p>

<p>（对学过微积分的网友：效用函数是单调递增的下凹函数。函数值单调递增而导致数值单调递减。边际效用在数学上就是效用函数的导数。－－你看这玄也不玄）</p>

<p>对张三来说，第五个苹果已经没什么吃头。不反胃就不错了（边际效用接近零）。于是张三心想，要有橘子吃该多好？他绝对愿意用6个苹果换4个橘子。他不但不觉得上当，而是觉得太赚了！因为就那第一个橘子的滋味（效用），已经远大于那后6个苹果的效用之和。</p>

<p>于是，王五的牵线搭桥，虽然没有丝毫增加这个三人社会的绝对产品数量，却实实在在地增加了全社会的效用总和。因而也就当之无愧地得到2个苹果2个橘子的回报。</p>

<p>你是应该相信马克思的“劳动时间决定商品价值”，还是更应该相信效用理论？</p>

<p>[飘飘白云]注：作者的这个例子并没有最充分体现出交换的价值所在，交换是通过专业化分工，发挥比较优势来创造更多价值，当然中介通过降低交易成本也是能创造价值的。详情请阅读《<a href="http://book.douban.com/subject/3719533/">经济学原理-微观分册</a>》。</p>

<p><span id="chat2"></span></p>

<h3>节间闲话之二</h3>

<p>樊弓叩拜发来伊妹儿的网友，对所有写来喝彩，建议和批评的妹儿表示感激和敬意。网友中果然大有教我者。请网友们再接再励，樊某必忘掉自己姓甚名谁，侃他个唾沫乱飞。</p>

<p>许多网友来妹儿要文集。在下很惭愧。</p>

<blockquote><ol>
<li>樊弓本行是数学。写这种文章是狗拿耗子不务正业，故逮着的也不多。</li>
<li>樊弓也是追求“更善”的动物。</li>
</ol>
</blockquote>

<p>希望明天的文章写得比今天好。谁要是把我10来年前在soc.culture.china上打笔仗老底泄漏出来，我这下就跳楼。</p>

<p>在下也借此机会戏耍一下那些只懂粗鄙语言而说不出个所以然的网敌：樊弓是我党我军久经考验的网虫，一肚子歪理坏水不说，面皮比城墙还厚。升高樊弓血压的唯一办法，是亮点功夫出来，在理论上、逻辑上驳倒樊弓。请出招。</p>

<p>接着侃。－－－</p>

<p><span id="section5"></span></p>

<h2>第五节：计划，计划，如何计划？</h2>

<p>马克思看到一个显然事实：资本主义社会隔三差五地发生“周期性经济危机”。每次危机到来之时，企业倒闭，工人失业。“生产力遭到极大破坏”。他老马也是个好心人，不假思索，立即就有了对症下药的济世良方：计划经济。</p>

<p>是嘛，眼下美帝国主义正在闹准经济危机（曰“经济衰退”）。樊某的股票是输得要当裤子还没人收。朋友也被Lucent裁员。其显然得不能更显然的原因呢，就是那些公司之间连个计划也没有，瞎生产那么多，一下子卖不掉。那当总统的就知道玩见习女秘书，也不帮着计划一下，搞得我们大家跟着倒霉。行行好，快“计划”吧！下回别在来这一套了。一旦计划好，这GDP必永增不降，道琼斯便只涨不跌。天堂也！</p>

<p>哈－里－路雅！哈－里－路雅！（注：基督教圣诗）</p>

<p>英文有一句格言，网友“OK”译文附后：</p>

<blockquote><p>For every problem, there is always a solution, which is so quick, so appealing,and so wrong. <br/>
对每一个问题，总有这样一个解答：直接了当，引人入胜，然而谬以千里。</p></blockquote>

<p>计划经济就是这样的解决办法。</p>

<p>先给马克思主义者一根稻草：用严格的数学可以证明，这个完美计划还真是“存在”的。注意，这是数学意义上的“存在”。圆周率3.1415……是存在的，我们只能不断地去逼近它。它的精确值只有上帝才知道。</p>

<p>做这个计划的神人，必须不仅要计划到每一件原料何时送到哪个车间，还要计划到爱迪生何时拿出他的下一项发明。你说说，这个计划是不是只有上帝才会做？</p>

<p>提出一项原则而不考虑其细节和可行性。这种错误在马克思主义经济学中不胜枚举。而后来的马克思主义者们也不去搞清楚就去实施。你说怎么不尽捅搂子？</p>

<p>那么，凡人做不出完美的计划，可不可以去做近似完美的计划呢？理论上好象也没什么不可以。但是你做计划就要有信息，你要么</p>

<blockquote><ol>
<li>让市场以供求决定物价并从价格得到预测变数。</li>
<li>挨家挨户去问。</li>
</ol>
</blockquote>

<p>前者推翻马克思主义的根基。后者是太抬举消费者的智商。我樊某人根本就不知道下个月想买什么。</p>

<p>不必了，马克思先生。我们可以用数学的最优化理论证明，在一个“完全竞争”的条件下，资源分配自然达到那个最优的计划。“完全竞争”的理想条件是很容易近似的。只要经常去拆散AT&amp;T，起诉微软就行了。</p>

<p>（注：“完全竞争”指的是这样一个理想状态：每一种商品都有足够多的独立厂家生产，使得任何一个厂家都不能用调整自家产量的方式来影响市场价格。）</p>

<p>等等，你老兄别走。我怎么还见有经济衰退呢？</p>

<p>答案：</p>

<blockquote><ol>
<li>我们只能近似地做到“完全竞争”。</li>
<li>经济发展必须优胜劣汰。你要么通过经济衰退来淘汰夕阳工业，要么叫政府开坦克赶人。请问网友们要哪头？</li>
</ol>
</blockquote>

<p>谁说经济衰退只坏不好？毛老头子还知道一分为二呢。</p>

<p>计划经济行不行得通还是次要的，因为它和自由竞争的市场经济之间还有着更深刻的，在于人性意义上的区别。</p>

<p>市场经济把每个人的命运交给他们自己，给你一条起跑线，你自个儿撒开大脚片子跑去。先跑到的吃肉，后跑到的喝汤，不跑的喝西北风。你自己看着办。也就是说，<strong>市场经济假定生产者是自身命运的主人。</strong></p>

<p>计划经济的思路是，人和生产过程必须是被“计划”的。我们天下无敌的乒乓球队，连每场球让谁赢都有计划。<strong>人是计划的的被动执行者。人被要求是这台共产主义机器上的闪闪发光的螺丝钉。</strong></p>

<p>请问：如果你有选择，你是要做人，还是要做螺丝钉？</p>

<p><span id="chat3"></span></p>

<h3>节间闲话之三</h3>

<p>一些马克思主义理论家善意地发来伊妹儿，指出樊某没有真正理解马克思主义。马克思的意思其实是如此这般。樊某诚心感谢。</p>

<p>爱因斯坦有个啥子“相对论”，说是你要是撒开脚丫能追上手电筒那条亮道道，人家看你就是扁的。这理论据说全天下只有10个人真懂，还不知道是哪10位大侠。</p>

<p>这马克思主义好象比老爱还要玄。全天下有资格懂的咱掰着指头数得出来：列宁还有一口气时只有列宁明白。列宁刚一蹬腿斯大林立马就懂了。姓毛的小子那胆子贼大，斯大林眼还没闭就敢说他也懂。那全国第二号走资派眼见毛皇帝跳进长江还能浮起来，吓得赶紧检讨说没学好马列毛思想。等老毛一驾崩，他“总设计师”便黄袍加身，冷不丁连“发展马克思主义”都会。</p>

<p>整个马克思主义学说史，就是谁当教主谁懂，谁有生杀之权谁懂的历史。</p>

<p>爱因斯坦那玩意儿10个人懂恐怕是够了。你马克思可是要“解放全人类”，要把一切肉体凡胎的七情六欲剔掉，改造成共产主义圣人。可你那学问弄得个明修栈道暗渡陈仓，连受过最严格逻辑思维训练的数学家都看不懂。你还想搞共产主义不想？</p>

<p>还是樊弓师父的原则有道理：你那理论要是人人都听得出岔子，或是大家都听得打呵欠，是你的责任而非听众的不是。很多网友来妹儿说当年上马克思主义课实在是学不进去。樊弓答：不必惭愧，哥儿们，那正是马克思的错！</p>

<p>好货无人识等于没好货。怀才不遇等于没才。深奥理论没人懂等于放屁！（爱因斯坦除外）</p>

<p>对“你没弄懂”之类的劝告，在下完全没有必要做更多的解释。网友们自可判断。樊家顽童只有一句：“那皇上真是光腚的哎！”你要跟我解释说万岁爷那件新褂子要修完博士后才看得见，我保证洗耳恭听就是。</p>

<p>有没有这样一种可能：樊弓对马克思的理解之所以不同，是因为樊弓理解得太深刻？</p>

<p>继续侃。－－－</p>

<p><span id="section6"></span></p>

<h2>第六节：剩余价值之迷思</h2>

<p>马克思号召全世界打工仔起来用暴力革老板的命，因为他认为，资本家“剥削”了工人的“剩余价值”。他马会计还算给你听：你今天干的活儿按“劳动时间”计算值10个袁大头，老板只给了你9个。你这还不去宰了他？</p>

<p>你一听当然是一肚子火不知从哪个门往外冒。毛教主这会儿让你去天安门自焚你都不眨一个眼。</p>

<p>这玩意儿的理论基础叫“劳动价值论”。说商品的价值是劳动创造的，而且仅仅是由劳动创造的，别的因素都不算。（德国一经济学教授来伊妹儿指出：这是马克思主义的奠基公理，其他所有理论皆源出于此。樊弓谢教授指点。）</p>

<p>天下文人为此争论了两百年不止。你要以为在下今天也来加入那套象牙塔里面才管用的嚼醋大赛，那就太小看樊大侠了。</p>

<p>这个争论常常落入一个逻辑圈套。因为“劳动价值论”可以有两层意义：</p>

<blockquote><ol>
<li>一件产品追根搠源，是劳动创造的。是嘛，你用的机器是别人劳动造的，资金原本可能是劳动挣的，追到最后，不是上帝给的就是劳动创造的。</li>
<li>一件产品在这个生产环节里，其新增价值也只是劳动创造的。资金，厂房，设备，生产管理，原始设计都不算。</li>
</ol>
</blockquote>

<p>反对“劳动价值论”的学人，基本上是反对第二层意思。</p>

<p>拥护者则是诡辩术，他们用第一层意思来为“劳动价值论”辩护，把你的招数档回去就立马跳到第二层意思上去。这种江湖术士的儿戏骗别人也就算了，跟数学家过招还是嫩了点。</p>

<p>在樊大师看来，你们吵了200年，不就是为那10块大洋分赃不匀打破头吗？</p>

<p>马克思硬说那端盘子的应该把10个全拿走。餐馆主子说不行不行，你得给我留俩，要不我喝西北风。这种官司再打200年也还是打不清。</p>

<p>唯一的永远公平的原则只有一个：周瑜打黄盖，一个愿打一个愿挨。</p>

<p>你们干事得先小人后君子。你进来端盘子前先跟老板娘打个勾勾，几块大洋归你几块归她。干几个月再商量不就行了吗？她要敢不跟你涨两个子儿你走人就是，谁拉你后腿来着？马克思你也是挑拨离间，为那一块元宝非要人把老板一家全宰了。这也太说不过去了嘛！</p>

<p>用亚当斯密的经济学原则来说：<strong>一次交换只要是在双方自愿，任何一方无法垄断资源的前提下，这项交易就是“双赢”买卖。</strong></p>

<p>请问网友你还信不信“剩余价值论”和“劳动价值论”？</p>

<p><span id="chat4"></span></p>

<h3>节间闲话之四</h3>

<p>本文原意是写给中国人看的。洋人信不信马克思主义关我什么事。樊某在美国还真的碰见好几次马克思主义者。最荒唐的莫过于约1990年一帮20来岁的毛主义者，在校园散发传单。说毛思想是马克思主义的最高境界，文化大革命是人类历史上最伟大的革命运动，号召美国人民起来用武装斗争推翻资产阶级暴政。搞得我只有苦笑的份。你看美国自由不自由？</p>

<p>一位热心的网友，不辞劳苦将前几节翻译成洋文，转给老马故乡德国的一经济学教授。该教授研究马主义已逾10年，见译文立即发来伊妹儿，曰与在下不谋而合，并顺便教习几招。樊弓在此万谢该网友。</p>

<p>于是樊弓自然是得意洋洋，忘乎所以。这回居然连挟洋自重的本钱都有了。岂可不接着侃？</p>

<p>再来！－－－</p>

<p><span id="section7"></span></p>

<h2>第七节：剩余价值之迷思（续）</h2>

<p>“剩余价值论”和“劳动价值论”既然是马克思主义的基石，不仔细侃清楚怎么对得起众网友？因此再侃一节于此。</p>

<p>马克思的劳动价值论是认为老板绝对不该拿一个子儿，因为他“不劳动”。今天已经没有多少人有这么极端。人们的共识是：对提供资金，厂房和生产组织管理的老板当然应该有所回报。</p>

<p>剩下的问题是，怎么分才公平？怎样做才能达到或逼近那个公平境界？</p>

<p>马克思那套暴力革命，赶走老板，把餐馆共产的做法不但不公平，简直是近乎荒唐，而且近乎罪过。</p>

<p>樊某上节指出，亚当斯密的愿打愿挨原则是唯一公平原则。但分析过于简短，有负师父教诲。使得很多网友尚不满意。</p>

<p>网友们的疑问主要是，老板处于天然优势地位。你端盘子的跑堂去找他添俩子儿他不但不给反而踢你出门怎么办？</p>

<p>要回答这个问题，只需告诉你一个简单事实：美国三大汽车公司流水线上的装配工人的平均年薪超过9万美元！（<a href="kesalin.github.io">飘飘白云</a>注：作者在后面有更正这个数字为6万9千美元。）也就是说，这些从事“简单劳动”的打工仔，工资超过从事“复杂劳动”的数学大师级学者，超过同公司的工程师。为什么？你不给他就要罢工呀。这里，马克思的简单劳动复杂劳动论又是大谬。</p>

<p>毛主席语录：“现在世界上究竟谁怕谁？不是人民怕美帝，而是美帝怕人民。”你看有没有道理？</p>

<p>如果你跑堂的知道，向老板娘要求加工资必被炒鱿鱼。那我祝贺你。因为这会儿你已经拿到了你干这行所能拿到的最高工资。你已经把老板娘推到了极限。她已经到了不炒你鱿鱼便无法跟别的老板娘竞争的地步。你真行哎！</p>

<p>你还不满意怎么办？出路多得很：跳槽，转行，组织跑堂工会，游说国会等等，就是犯不着听老马把老板娘宰了。你说对不对？</p>

<p>与马克思主义相反，“资产阶级”根本就不是一个窜通一气对付“无产阶级”的联合体。在近似的“完全竞争”条件下，老板和老板之间是你死我活的竞争对手。樊某就有一老朋友嫁给移民实业家，该老板创业失败，倾家荡产，精神失常，家庭破碎。谁说只有打工仔难做？</p>

<p><strong>只有在资本实现全面垄断的状态下，工人阶级才处于绝对劣势。而这，正是1949年以后的中国！</strong></p>

<p>（声明：樊弓钻研马克思的时候是工人。绝对同情打工仔。）</p>

<p>马克思为“剩余价值”开出的药方，是全面共产（即全面垄断）。你说这病人（即工人阶级）怎么不毒死？</p>

<p>还是周瑜打黄盖公平！虽然挨板子的后面不爽，可这世界上哪有天堂呢？</p>

<p><span id="section8"></span></p>

<h2>第八节：分饼的政治学</h2>

<p>第六、七节提到公平原则，而怎么说都有人觉得吃了亏。于是还得侃侃。</p>

<p>一个简单的日常生活问题包含着极其深刻的政治学：</p>

<p>两个贪心饿鬼要分一个饼吃。而这俩都不是省油的灯，谁要怀疑他少分了一丁点都跟你没完。你说他们应该怎样切才公平？</p>

<p>很多人会想，这还不简单。从正中二一添做五，平均主义。因为这世界不患寡而患不均。行不行？可你忘了，这两人拿到自己那一半时，眼睛还会盯着另一半。心想他那半拉子里夹的是花旗参，我这半里一定是萝卜干。我非干他不可！</p>

<p>我们中国人号称文明悠久，聪明过人。可我们到今天还没有想清楚这么个简单问题。五千年过去了，我们的思路还停留在盼包公转世，或哀求当政者“民为本，社稷次之，君为轻。”眼巴巴地期望分饼人刀下留情，让我等还有活路。</p>

<p>还有一批文人甚至摇唇鼓舌，说只要经济发展而把饼做大点，怎么腐败分法都行。听得我都要吐。</p>

<p>马克思的分法是先“各尽所能，按劳分配”，后“各尽所能，各取所需”。可惜他治学缺乏严谨，搞不清楚到底怎么按劳分配，谁来分配。其门徒也不闹明白，胡来一气。留下一个永远理不清的烂摊子。</p>

<p>老马及后来的小马们，似乎也觉得不对。因此又有更荒谬的解决办法：把这两个小气鬼改造成共产主义新人。于是怎么分都无所谓啦。也不想想做不做得到。</p>

<p>这个简单而深刻的问题有着简单得不能再简单的答案：分权制衡！</p>

<p>两人只要说清楚，一个动刀子切，另一个先挑。切者不能挑而挑者不能切。自然天下太平（即公平）。</p>

<p>别搞错了。切饼者完全可以是个傻帽，自做聪明把饼分得一半大一半小。当他发现剩下给他的是小的那一块，他只能煽自个儿的耳刮子。</p>

<p>挑饼的仍然可以发现，他挑的那半夹着萝卜干而另一块里有花旗参。他跺脚咬牙恨的也是自己怎么不挑那一头。</p>

<p>这就是公平！<strong>公平是唯心而不是唯物。</strong></p>

<p>于是当分饼制度一旦建立，这饼必越分越合理。相反，只要切饼人有权先挑，而且这家伙有终身制，即使他当初的确是圣贤，这饼也只会越分越不均。</p>

<p>我们现在是不是可以明白，为什么美国200多年来越来越廉洁？就因为美国的国父们立下了三权分立的分饼制度。这个制度不在于消灭人的恶习，却迫使人为私利求公平。迫使魔鬼伪装圣人，拿到小的那块时心里恨得直咬牙，嘴上还自吹是我让你的。</p>

<p>而为什么我们中国才50年就越来越腐败？就因为我们中国人傻到把切饼分饼权一鼓脑儿都交给了一个天子也！我们中国人2000年来，总是埋怨分饼人不地道，受不了就把他宰了换一个。过若干年又宰又换，永远逃不出这个怪圈。</p>

<p>网友们，不是分饼人不地道，是分饼制度sucks！绝对权力绝对腐败，百试百灵。</p>

<p>严格说，老马克思是主张民主的。但他的“分配”论的内涵，是把人分成分配者和被分配者。这就是为什么小马们个个专制。</p>

<p>你还等人“分配”吗？</p>

<p>接着侃之前先给网友们出一题：三兄弟都爱这三项遗产，一辆爱车，一栋吉屋，10万大洋。车，房绝对不能卖。三人又不想住一起。这怎么分才公平？</p>

<p><span id="chat5"></span></p>

<h3>节间闲话之五</h3>

<p>大约是1979年，“中国青年”杂志拼凑了一封“潘晓来信”，题为“人生的路啊，为什么越走越窄”。中国人呢又容易上当，全国的大孩子们都傻乎乎地卷入那个大玩笑，也就是著名的关于人生意义之潘晓大讨论。</p>

<p>樊弓的老友，武汉大学哲学系七七级学生赵林在这个讨论的半道上一鸣惊人，喊出了一个时代的孤独绝响：</p>

<p>“人的本质是自私的。”</p>

<p>那个游戏“大讨论”竟从此急转直下，成了赵林批判会。听说他老兄还不得不在系里的小讨论会上反复申辩：这个自私的“人”是抽象的人，不是我赵林！你们别跟我过不去好不好？</p>

<p>我现在楞是觉得，不是胡乔木就是邓立群中间插了一杠子。这个讨论最后无疾而终。什么没吵明白不说，闹了数月才发现那信还是个半真半假。真是浪费情绪。</p>

<p>你要是以为玩笑到此结束，那就错了。82年赵林考研究生，打开政治考卷一看，问题：你认为人的本质是自私的吗？</p>

<p>赵林居然考上了。但他放弃哲学转攻历史。我猜这跟潘晓那冤家多少有点关系。</p>

<p>樊某以后每逮著机会，必戏耍赵林：哥儿们，你那题是怎么打发的？赵兄则从来是笑而不答。我当然知道他是怎么答的。</p>

<p>到了86还是87年，“人民日报”上再次炸响惊雷。一位中国大陆学者著文指出，“大公无私”是奴隶主对奴隶的要求。这在中国当时是何等进步！</p>

<p>（樊弓求教：这位先驱者的名字忘了。知者请告。此君应名垂中国思想史。）</p>

<p>还不等邓立群发话，那位刚拿了诺贝尔赏银不久的李远哲先生，隔着太平洋大放空炮：好哇！中国大陆知识分子竟然堕落到连“大公无私”都不要了。真是个世态炎凉，人心不古！我跟你们没完！</p>

<p>我从此一听见李远哲吭声就来气。你又不是不知道这“大公无私”在共产中国是什么意思。站着说话不嫌腰疼，你把你那赏钱拿出来公一公试试看？</p>

<p>中国人再一次错过了弄明白什么是“自私自利”、什么是“大公无私”的机会。</p>

<p>今天的中国尽管人欲横流，贪官遍地，可在概念上，“大公无私”仍是堂皇有如贞节牌坊，而“自私自利”还是狗肉上不得正席但背后吃着爽。你说怪也不怪？进步一点的文人，一般也只限于说“自私无害”，大公还是高尚。</p>

<p>我们是不是应该到了为“自私自利”平反昭雪的时候了？</p>

<p><span id="section9"></span></p>

<h2>第九节：分遗产的经济学</h2>

<p>上节结束时给网友们出了一题：三兄弟都爱这三项遗产，一辆爱车，一栋吉屋，10万大洋。车、房绝对不能卖。三人又不想住一起。这怎么分才公平？</p>

<p>樊弓是教书匠，出题当然是有奥妙。就象第八节的分饼问题一样，用这个遗产问题可以侃出深刻的经济学原理。这些原理你要是到别处去学，交了学费未见得学得进去。下面你只要跟着樊教授轻轻松松走一趟，包你明白，还免费。</p>

<p>前面说过，马克思主义是唯物的。认为每件事物都有一个内在的、恒定的、用劳动时间来度量的“价值”。按照这种机械的唯物主义观点，这三件遗产怎么也分不出四件来。</p>

<p>唯物主义的另一局限在于，它不承认三兄弟各自的七情六欲会影响到这三宝的效用。因为那有唯心主义之嫌。</p>

<p>多数人对这个问题回答是找公平调停人估价，再按估价分。因为我们一般不会注意到，同一件东西对不同的人有不同的“效用”。</p>

<p>（注：黄叶先生和金夏利先生高出众人一头，得到正确答案。）</p>

<p>我们不妨假定，老大最爱那房子，那童年美好的回忆是无价的。对他来说，这房值25万。他心想：车子嘛虽然是上好的奔驰，最多值5万。</p>

<p>老三年轻，最爱的是车。那车他是垂涎已久，而且是市面上绝版的古董，对他来说花10万也干。房子无所谓，15万他还不一定愿买。</p>

<p>老二介于二者之间。对他来说，房子值20万，车值8万。</p>

<p>这三人可能是家教良好，你推我让。哥哥自觉长兄如父，弟弟要学孔融让梨。争执不下。最后大哥面子大说了算，最“值钱”的房子给老三，10万大洋给老二，自己把最不值钱的车留下。谁也不许再争。就这么定了！</p>

<p>这种“大公无私”的分法，结果是相当于老大得了5万，老二得了10万，老三得了15万。不公平不说，遗产效用总和只值30万。</p>

<p>相反，如果亲兄弟明算帐。说好谁也别让谁。你想要哪样你就得死争哪样。只有一个规矩：咱不兴煮豆燃豆萁豆在釜中泣，你要真想要你就出个价投个标。中标者出钱“买”货，然后兄弟们分钱。</p>

<p>于是，老大用25万“买”走房子，老三用10万“买”下车。跟那原来的10万堆一块，45万。各再拿15万，也是皆大欢喜。</p>

<p>所不同的是，这种“自私自利”的分法，遗产效用总和是45万！超过前一分法15万！这下马克思可要傻眼了，你樊弓把同三件事体多变出50%来？</p>

<p>同样是三件遗产，两种分法效果就不相同。前一分法显然既不公平，又没有物尽其用，也就是说没有将效用极大化。第二种分法使得</p>

<blockquote><ol>
<li>各得所爱；</li>
<li>公平合理；</li>
<li>将遗产的效用发挥到最大。</li>
</ol>
</blockquote>

<p>这个既公平，又使全“社会”达到最大效用的分法的前提，是每人为自己着想。你千万要自私自利。不要去为他人瞎操心。别人自己会为自己打算，不用你劳神。用英文说：Your treasure is someone’s trash（你的宝贝是别人的累赘）。</p>

<p>比效用极大更重要的，是人类孜孜以求的，总是可望不可及的公平原则。跟上节分饼问题一样，<strong>公平来源于人类趋利避害之心，而所谓“大公无私”竟是不平等的根基。</strong>不相信吗？头一回听说是不是？</p>

<p>道理很简单。“大公无私”要求人们吃亏不吭气，甚至做了冤大头还要陪笑脸。而你越不吭气就越吃亏，社会就越发不平等。“天堂”就是这样变成地狱的。</p>

<p>每个人在一定规则内为自己打小算盘的结果，就是使全社会资源分配达到效用极大，就是使社会达到尽可能的公平。利己是利人的前提！</p>

<p>这就是亚当斯密著名的“看不见的手”，也是自由市场经济理论的核心：</p>

<blockquote><p>（An individual who) intends only his own gain (is) led by an invisible hand to promote an end which was no part of his intention. Nor is it always the worse for the society that it was no part of it. By pursuing his own interest he frequently promotes that of the society more effectually than when he really intends to promote it. I have never known much good done by those who affected to trade for the public good. &mdash; Adam Smith, Wealth of Nations, 1776</p></blockquote>

<p>樊弓试了几回，总是翻不好。本大师也有无可奈何的时候。恳请网友帮忙。</p>

<p>又注：“利己是利人的前提”最终归结到数学上的非线性无约束多元函数极值的必要条件为对每个变量的偏导数（边际效用）为零。说来话长，也就不嚼醋了。</p>

<p><span id="chat6"></span></p>

<h3>节间闲话之六</h3>

<p>1988年，樊弓小夫妇都是美国穷学生。借着放暑假之机，开着一辆破车神游美利坚。且自以为是工人出身，在汽车底下也摸爬滚打了一年有余，心想要有点小毛病也对付得了。</p>

<p>进入纽约州山区，前不巴村，后不着店之际，只听“哧”的声响，车内外所有灯全灭。我马上意识到，车的电路器件已被烧毁。这下完了。在这个被描绘为人吃人、人剥削人、尔虞我诈、自私贪婪的社会里遭难，恐怕不被竹杠敲掉一层皮是脱不了身了。这时是夜里9点。</p>

<p>25分钟内，一辆警车停在后面。警察说有人用大哥大通报，因此赶来。说车停在高速公路边上极不安全，必须把我们弄走他才能离开。可那天是周六，穷乡僻壤的拖车行都已经关门，叫我等怎么办？</p>

<p>警察见我二人束手无策，说我帮你们打个电话到修车店老板家试试。</p>

<p>老板开着拖车驾到，跟警察开了几句玩笑，把破车挂上便走。一路上谈笑风生，问明我等来路，不在话下。10英里外到达一小镇，把破车摆在修车行外。说天晚了明天修车，问我等想去哪个客栈他好送我们去。</p>

<p>我的回答让他吃了一惊：我一路上是打算在车里过夜。伟大领袖早就教导我等要一不怕苦二不怕死。你瞧我这铺盖都有。</p>

<p>老板这下明白了，这对男女是穷光蛋！他只好摇头而去。可不一刻又转回来，说是跟太太商量好了，我二人必须住到他家去，连商量的余地都没有。我们要是住在街头他今晚睡不着。</p>

<p>在老板家里自然是好吃好喝侃大山。老板说他只有高中文化，几辈子住在大山里。他开修车行，太太开美容店。双料资产阶级。对我夫妇二人远涉重洋穷攻双料博士略表敬意。说明天他的工人不上班，他会找个朋友一块儿把车修好让我们继续上路。</p>

<p>长话短说。次日中午，破车修好。老板执意只收零件钱。他说要是真算起账来你也付不起。你知道我做老板的一小时值多少大洋？你那俩子儿还是留在路上花吧。我反正是栽在你两口子手上了。</p>

<p>我问他怎么才能报答他。他想了想说：记住我。将来也象我这样帮别人。</p>

<p>他的名字叫Gary Smith。我敢打赌他绝对不指望为此立牌坊。</p>

<p>有网友问，你不是说利己是利人的前提吗？Smith老板这种乐善好施的行为是不是违反了自私自利的人类本性？是不是一种值得称道的“雷锋精神”？</p>

<p>樊弓自然会侃给你听。－－－</p>

<p><span id="section10"></span></p>

<h2>第十节：再侃自私自利</h2>

<p>也许是上帝的指引，也许是历史的巧合。在1776这同一年，也就是马克思从娘胎落地的44年前，大西洋两岸几乎同时产生了人类文明进程中不朽的两座丰碑：汤玛士•杰弗森的“美国独立宣言”和亚当•斯密的“国富论”。</p>

<p>前者从政治上宣告，人有与生俱来不证自明的三项权利：生命，自由和追求幸福。什么是“追求幸福”权利呢？那不就是自私自利的权利吗？</p>

<p>后者从经济学的角度论证，自私自利不仅是不可剥夺的人权，而且是一个社会走向繁荣昌盛的前提。亚当•斯密写道：（原文见第九节末）</p>

<blockquote><p>“<strong>（某一个个人）追求私利的动机被一只看不见的手引导到一个与他的初衷风马牛不相及的结果。这个结果并不总是遗害于与他的动机无关的社会。通过对他自身利益的追求他常常造福于社会，而且比他有意识地去为社会牟利更有效。我从没听说那些为社会公益所做的交易能给社会带来多少好处。</strong>”</p></blockquote>

<p>事实证明，亚当•斯密二又四分之一世记前的论断是何等的智慧。我们今天所享受的一切物质文明，有哪一样是有人去学雷锋做出来的？我们用的电脑每18个月快一倍绝不是英特尔老板大公无私，中国现在满街大哥大也不是摩特罗拉讲什么爱国主义。电视机又大又清晰更不是索尼公司乐善好施。这全是自私自利的辉煌结晶。有谁不同意？</p>

<p>而倡导“大公无私”的一切经济实践，包括人民公社和国有企业，通通都以失败告终或半死不活地等待输血。我不知道为什么今天的马克思主义者们和李远哲先生就不愿意睁开眼睛看一看。</p>

<p>雷锋和德雷萨修女应该是大公无私而受人称道的。但那都不是经济行为。Garry Smith先生并不能人人来修车他只收零件费。他必须以利益极大化为目的经营他的车行。由此才有可能偶尔救助一下山区里难得一见的外国穷学生，并留下金钱难买的良心安慰和吹牛本钱。如果他是教徒，他会觉得这样做是积累进天堂的门票费。不仅这利己是利人的前提，利己还完全可以是利人的动机。</p>

<p>美国这个自私社会从不缺志愿献血者和义务劳动者。原因固然众说纷纭，有人说此乃衣食足而知荣辱。可这个社会如果不是鼓励为追求个人幸福（即自私自利）而努力的话，何来衣食足？谁会知荣辱？</p>

<p>又有网友笑话樊某战风车：中国社会早就是自私自利横行了，还要你来教？既然那从来就是人的本质，何必还要提倡呢？看你真是没事找事！</p>

<p>问题在于马克思主义和中国传统的正宗文化都把自私自利视为万恶之源，必欲斩草除根而后快。马克思主义者们至今仍在盘算着怎样把樊弓脑袋里那根自私基因掏出来然后输入大公无私程序。我说这吓死我也，你离我远点行不行？</p>

<p>由于我们对自私自利的恶见，我们无法正确地认识自私自利的双刃本质。中国宪法和文化至今不肯承认私有财产神圣不可侵犯，不保护私有生产资料。我们所压抑的是自私自利正面那一刃。而自私自利既然是人的本性，如果它不能以有益于社会的方式出现，必然从其极具破坏力的一刃发泄。这就是中国的现实。</p>

<p>从改革开放到今天，好象是所有春风一度的私营企业家，从傻子瓜子大王到牟其中，一旦坐大即倒台入狱。是巧合吗？当人们从此得知无发财正道，自然要去找邪道。这人欲横流贪官遍地又怪谁呢？</p>

<p>改变中国社会道德沦丧现状的灵丹妙药绝对不是要人们大公无私。恰恰相反，我们需要为自私自利正名，树立私有财产包括私有生产资料神圣不可侵犯的法律保障和文化基础。划定“自私自利但不可坑人”的规则界限。鼓励有谋公益之心者同时大谋私利，中国或许还有一线希望。</p>

<p>亚当•斯密和马克思为两个社会奠基。一个以诱导善用人的自私自利本性为依据，一个以改造人的私心杂念为前提。您说谁更有道理？</p>

<p>比谁有道理更重要的是人性原则：我自私自利碍着你什么了？我觉得30亩地一头牛老婆孩子热炕头是我的幸福梦想，惹了你马克思哪一根神经？你非得改造我不可？你要建你的天堂你建去，何必跟我们这种俗人过不去？你一定要打我脑袋的主意我跟你拼命。</p>

<p>Leave me alone!（离我远点！）</p>

<p><span id="chat7"></span></p>

<h3>节间闲话之七</h3>

<p>马克思信徒辩护说，今天西方工人“阶级”生活水平和工作条件全面提高，是因为资本家害怕马克思的幽灵。没有工人的阶级斗争，资本家干嘛要提高工人工资？</p>

<p>对不起小马先生们，错也！当今发达国家部分劳工（注意，不是全部）成为“工人贵族”跟马克思主义的边都不沾。</p>

<p>首先，马克思根本不关心工人的眼前利益，根本不主张用工会和罢工的方式改善工作生活条件。老马指望的是工人们穷得只剩下内裤，要干就是全世界总暴动，“砸烂旧世界”。你可以想象马大胡子当时穷得是多恼火。</p>

<p>其次，根据马克思那搞笑版“劳动价值论”，劳动力是商品，其价值是由生产和再生产这些劳动力所需“平均劳动时间”决定死死的（注：这可是马克思说的，不是樊某戏耍）。因而马克思煞有介事地认为办工会闹罢工不光是一点用都没有，还违反了他老人家的唯物主义。</p>

<p>今天有些小马们为马克思辩护已经到了理屈词穷的地步，竟然这个桃子也想摘。</p>

<p>那么，资本家干嘛要提高工人工资呢？是老板发善心呢，还是害怕无产阶级革命？</p>

<p>都不是。－－－</p>

<p><span id="section11"></span></p>

<h2>第十一节：铅笔是怎样造出来的</h2>

<p>马克思主义“政治经济学”的核心理论之一：资本主义社会的根本矛盾，是生产的社会化与生产资料私有之间的矛盾。</p>

<p>用简单点的话说，看看您老的前后左右，千万个行业，亿万种产品，无数的老板。眼花缭乱了不是？这要没个总指挥，让你们各走各的道，人人都为自己打算盘，互相耍小聪明使绊子，这天下怎么能不乱套？</p>

<p>或者反过来说，要是有个总设计师，把全天下的芸芸众生拧成一故绳，朝着一个为全社会造福的方向运气发功，这世界该有多美妙！</p>

<p>如果您没工夫去读亚当•斯密的《<a href="http://book.douban.com/subject/1261560/">国富论</a>》或哈耶克的《<a href="http://book.douban.com/subject/1077528/">通往奴役之路</a>》，您多半会想，这马克思说得是有道理哎！</p>

<p>马克思主义的诱人之处在于，它几乎处处符合我们的直觉，因而引发读者的原始冲动。而人的直觉和原始冲动常常是错误的。</p>

<p>诺贝尔经济学奖得主米尔顿•弗里德曼（Milton Friedman）在其名著《<a href="http://book.douban.com/subject/3097539/">自由选择（Free Choose）</a>》书中，用了一个“铅笔是怎样造出来的”例子，生动准确地说明生产的社会化和生产资料私有之间，不但不是矛和盾，那简直是嫖客和“小姐”，缺一头都没法风流。</p>

<p>没有任何一个个人，能单独地从两只白手开始造出一只铅笔。不信您试试。</p>

<p>铅笔的木杆来自北加州或俄勒冈，伐木需要锯子、绳索、卡车等数不清的工具配件。这些工具来自无数人的千万种技能，牵涉到采矿、提炼、加工，制造成为油锯、利斧、绳索。就连那伐木人的那每一杯咖啡，都不知沾过多少只手。</p>

<p>这还仅仅是铅笔的木杆。那铅芯又经历了多少复杂工序，转过多少遍手，最终才装进铅笔的中心。您再想想铅笔头上那块橡皮……</p>

<p>这每一支铅笔，没有千万人的直接间接的卷入能造出来吗？也请马克思信徒去算算，到底这支铅笔中有多少“劳动时间”。算得出来吗？</p>

<p>而老马小马最不可思议的是，这千万人中没一个人是因为需要铅笔去干他那份活儿。绝大多数参与制造铅笔的人根本就不关心也不知道他们的汗水最终会凝结成这支铅笔。他们只关心，也只需要关心他的辛劳值不值得月底的那份薪水。</p>

<p>而樊教授每次去买铅笔，无非是拿出我讲课换来的收入之九牛一毛，换取千万人那无穷小量劳动的积累。</p>

<p>弗里德曼写道：</p>

<blockquote><p>“更令人瞠目结舌的是，这支铅笔居然造出来了。没人坐在中央办公厅向这千万人发号施令。没有宪兵监督这些从未发出的号令的执行。这千万人居住在四面八方，操着各种语言，信奉不同的宗教，或许还相互仇恨－－然而这些区别毫不影响他们相互协作并造出这支铅笔。这是为什么呢？亚当•斯密早在两百年前就给我们做出了答案。”</p></blockquote>

<p>亚当•斯密理论跟马克思那嚼醋玄学不一般。其核心简单得不能再简单：<strong>一项愿打愿挨买卖如果能成交，必是因为双方都觉得有油水可捞。交易是“双赢”，不是“零和”。</strong></p>

<p>这支铅笔的制造过程中牵涉了千万次交易。每项交易的双方关心的都只是他们的最大私利。而这些交易的价格，则指挥着整个经济的运作。</p>

<p>弗里德曼继续写道：假设出于某种原因，铅笔的需求在不断增加。零售商将发现铅笔近来很俏手，于是向批发商订购更多的铅笔。而批发商再找到厂家。厂家则去订购更多的木料、石墨、铅、铜皮、橡胶，及所有原料和设备。为促使供应商生产更多的原料，厂家不得不提高竞价。高价将引诱供应商增聘工人以满足需求。为增聘工人，商家又不得不提高工资或改善工作条件。这个过程就象水波一般扩散开去，向全世界传播一个信息：铅笔有一个更大的需求。更精确点说，<strong>每个人只需知道与他相关的某个产品的需求增加引起价格提高，而他并不需要知道为什么。</strong></p>

<p>这就是亚当•斯密那只“看不见的手”创造的奇迹。</p>

<p>毫无疑问，这是个“社会化”的大生产。这个生产根本就不需要“计划”。每个生产者只需要关注他的产品的价格和成本，并当价格和成本发生变化时作出及时的反应就结了。</p>

<p>这个生产商为什么要去提心掉胆地盯着价格变化，又要没事找事地去作出相应调整呢？显然这价格必须直接影响到他的利益而且他必须为私利去努力。私有制正是完美地做到这一点。</p>

<p>您说说看，这社会化生产和私有制哪来的矛盾？您也不难反过来想象一下，为什么全世界都办不好国营企业。</p>

<p>有马主义者指出：马克思肯定了资本主义在高速发展铅笔生产的意义。马克思的意思是说，资本主义最终使得铅笔“极大丰富”，必须用“计划”来限制生产并“按需分配”铅笔。而不是用计划经济来发展铅笔生产。</p>

<p>的确，当今的发达国家铅笔是极大丰富。要“按需分配”铅笔不是不可能。可这用得着计划吗？我们不妨去瞧瞧那“看不见的手”是怎样运作的。</p>

<p>由于铅笔的利润使得众多的投资者进入铅笔生产，最终导致市场饱和。注意，经济学上没有供不应求或供大于求，只有价码不咋地。铅笔多了就得放血降价，减少订货。导致各级原料连锁杀价。这个价格信息迅速传遍商界。铅笔业股票狂泄而使得资本另谋高就。已经上了贼船的铅笔业者竞争加剧，必须开源节流，降低成本，寻找替代原料，起用新技术，解雇多余劳力并改善管理。如此等等。<strong>在这个你死我活的铅笔商战中，适者生存，弱者淘汰。社会资源重新自动达到最优或较优分配。而消费者则是不断地得到更便宜，更精巧，更好用的铅笔。</strong></p>

<p>如果您按马克思的思路，发一个计划，要所有企业减产，您能比那“看不见的手”干得好吗？</p>

<p>马克思提出计划经济之时，肯定是没有去试试如何做“铅笔制造计划”。他要是稍为试一试就知道，彻底的计划经济是一个白日梦。</p>

<p>马克思政治经济学的一个陷井就是，出于唯物主义，马克思认为价格来源于“平均劳动时间”而不是供求。因而马克思看不到或不愿看到<strong>价格在经济学中的真正意义：传播商业信息，提供商业诱导，和优化资源分配。</strong></p>

<p>我们也可以分析一下所谓的“社会主义市场经济”中计划与市场并存的悖论。就象彭真委员长搞不清究竟是党大还是法大一样，请问究竟是计划服从市场，还是市场服从计划？如果是计划服从市场，那您要计划个啥？亚当•斯密的市场经济根本就不需要计划。您要是想要市场服从计划，别臭美了，您以为市场会听您的？</p>

<p>我们现在可以回答资本家为什么要提高工人工资的问题了。当工人工资（价格）低廉而老板利润丰厚之时，越来越多的人便加入冒险家的行列成为老板，而小老板又企图变成大老板。为争夺现有熟练劳工，老板不得不提高出价。老板越多工人工资就越高，而且此处不留爷自有留爷处。做买卖盼的就是顾客盈门。工人出卖劳动力的“顾客”是谁呢？还用问吗？当然是资本家啦！</p>

<p>您要是打定主意当工人，您就应该想法子骗别人都去当老板。这道理是再明白不过了。</p>

<p>马克思给工人阶级开的药方可绝了：用暴力革命把老板们都干了，让全天下只剩一个“公有”老板。到那时，这老板出什么价您都得卖，您要不卖就没处卖，喝西北风去吧！</p>

<p>（预告：马克思的经济学侃得差不多了。以后要侃马克思主义为什么是专制制度和人治社会的天然盟友，请网友继续欣赏，喝彩，批评。谢谢。）</p>

<p><span id="chat8"></span></p>

<h3>节间闲话之八</h3>

<p>有一种马主义辩护词：作为书呆子的马克思是无辜的。毛病出在后来的小马们，把一个好端端的革命理想煮成了夹生饭。徒子徒孙的无能不能怪罪祖师爷。</p>

<p>进一步的辩护：马主义是认识世界改造世界的工具。有恶棍用杀猪刀斩人你怎么去找铁匠算帐？再说，马主义是基于社会正义而提出的美好理想，这有理想总比没理想要好吧？</p>

<p>樊某一听，这就怪了。亚当•斯密的门徒怎么就天生比小马们多一个心眼？</p>

<p>咋的没见一个独裁者把《<a href="http://book.douban.com/subject/1261560/">国富论</a>》奉为神明？把《<a href="http://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E7%8D%A8%E7%AB%8B%E5%AE%A3%E8%A8%80">独立宣言</a>》作为立国之本？干嘛专抄老马那把杀猪刀？</p>

<p>马克思从来就号称他的学问是有阶级性的。因此老马自己就不认为他的理论是人皆可用的
武器。只不过他那号称的无产阶级理论，受益者刚好不是打工仔。</p>

<p>F.A.哈耶克(Hayek)早在1944年马家军横扫三分之一世界的辉煌时刻，写下了人类思想史上不朽之作：《<a href="http://book.douban.com/subject/1077528/">通往奴役之路</a>》。哈先生以无以伦比的智慧，揭示了社会主义的专制本质。整30年后（1974年），老哈的预言一一应验，大师也荣获诺贝尔经济学奖，当之无愧。</p>

<p>樊某在国内时听说过有哈文译本，是内部资料。小樊又不是太子党，求之而不可得。出国后念的是英文原版，读来实在是回肠荡气。近日发现当年垂涎的中文电子版，遂设置链接于樊弓文选网址。有兴趣的网友不妨去念一念。</p>

<p>您要是英文过得去，最好是去念原版。哈先生的书不仅仅是智慧，其文字也是优美流畅。读起来一点也不累。也许是先入为主，樊教授再读上面那个链接的翻译版，感觉就象啃数学定理，味道全没了。想起来，小樊当年下死功夫念的马克思都是二手货。要是中共中央马列翻译局做了手脚陷害老马，那可是上当了。</p>

<p>哈大师用了262页纸阐述的深刻学问，肯定不是樊某人那几千字能侃清楚的，真有点担心辜负大师。有请哈专家们不要客气，教一两招，樊某先谢。</p>

<p><span id="section12"></span></p>

<h2>第十二节：专制的诱惑</h2>

<p>世上尽管繁荣娼盛，古往今来从不见“小姐”们光X拉客的奇观。那一身端庄华丽的遮羞行头是绝对小气不得。</p>

<p>话说世上一切暴君，没听说哪一个在额头上刻着“老子要专制你”。相反，每个专制制度都有一套学问：爷打你是疼你，要不是为你好，换了隔壁的孽种我还懒得操鞭子呢。</p>

<p>地狱之门肯定比天堂通道修得堂皇诱惑。要不然人类干嘛老是陷进专制的怪圈？不信你回想一下当年的两个德国。一个叫民主德国，一个叫联邦德国。您要是光看商标，一定是挑东边那个。等您进去发现上当，那退货可是没门。柏林墙修得楞是结实，还有“子弟兵”荷枪实弹瞧着你。</p>

<p>有个世袭王朝名叫“朝鲜民主主义人民共和国”。一个商标撒了三个谎：“民主主义”，“人民”，“共和”。效率奇高。</p>

<p>中国人虽说小聪明盖世无双，可在天堂地狱的大是大非面前却是出奇地迟钝。直到今天还信马主义的不用提，就是早已对其不抱幻想者，常不能摆脱“共产主义好是好，就是实现不了”的遗憾。你告诉他某美女是蛇，多数人都会瞪大双眼：这怎么会呢？你瞧那肌肤身段，多滋润哪。</p>

<p>人类老是上当受骗的根源之一，是我们常常不清楚我们到底想要什么。</p>

<p>您不妨给自己开个清单，假设你明天赢了千万大洋六合彩，打算怎么花。然后您把每一项单独挑出来，大概您会发现都买得起。或攒点钱总是买得起。可凭您那薪水想把这单子上条条都打勾，那就别做梦了。</p>

<p>我们很少注意到这个太显然的事实：我们每人都有无穷多的愿望梦想，每一梦都是可能的。实现所有愿望又是绝对不可能的。而人生就是一个艰难的选择：鱼和熊掌不可兼得。为了吃熊掌，你就得放弃吃鱼。反之亦然。樊教授现在要戏侃马克思主义过瘾，就不能睡大觉。这在英文里专门有个词，叫tradeoff（权衡，公平交易）．</p>

<p>更妙的是，越是平庸的人越是容易在熊掌下肚时后悔：是不是鱼更好吃些？还不如当初别费心，让一个高人帮我选择，多半比我挑得好。</p>

<p>我敢打赌，即使是身为世界首富，比尔•盖茨仍然有无法实现的梦想和深深懊悔的错误选择。很少有人觉得他得到了这个世上他应该或可能得到的一切。</p>

<p>对职业的选择就更难了。有多少人能自豪的说，他现在的行当使他的潜力发挥到最佳？</p>

<p>选择的艰难和对失败的畏惧常常使人期望逃避选择，向往天堂或世外桃园。这时如果有一个“圣人”出来告诉你，有一个理想的社会，在那里你将不再面临这些烦恼。他会替你、替所有人做出“公平”的选择，你会不会觉得心动？</p>

<p>Freedon is never free。这句格言很难用一句话翻出其韵味和哲理：自由其实是自由人的沉重负担。对很多人来说，这个负担也许太沉重，使得圣人专制反而显得更轻松，更可取，更理所当然。</p>

<p>人类还有另一个不治之征：栏杆外面的草总是比里面的绿，人家的太太总是比自家糟糠水灵贤慧。这草这嫂还是看得见，摸得着（摸不得）。那天边隐约可见的花木佳人就不知有多来劲了。我们谁也没见过西施，可我敢打赌天下99%臭男人都恨不得把家里那口子蹬了换成西小姐。（这句可不能让樊夫人看见）</p>

<p>越是得不到，看不见，想象不出的美人，就越是勾魂。人们就越是愿意付出可见的代价去得到她。</p>

<p>近代所有专制的共同诱惑就是，给你一个美好的理想，一个崇高的目标。告诉你，让你相信，只有万众一心，紧紧团结在圣人的周围，那个理想和目标才能实现。</p>

<p>而为了明天娶西施，你今天不得已要禁欲。为了明天吃肉，你今天得吃辣椒酱下饭。为了那个理想的尽善尽美，你必须忍受现实的不完美。今天的不民主是为了实现比资产阶级假民主更高尚的民主。为了全社会的“大公”，你必须放弃私心梦想。为了把祖国建设成世界第一强国，我们宁可推迟、限制和放弃个人的政治自由。</p>

<p>再加上，专制制度在理论上似乎是最有效率的制度。最显然的例子是军队。一支用民主投票的方式指挥作战的军队恐怕是必败无疑。因此人们很容易推而广之：把权力集中在一个圣人手中，让他象将军一样拥有计划调度全部资源的无上权力，岂不是能最快最好最省事地推动“全社会利益”？</p>

<p>这个推广的毛病在于，军队在战场上总有一个明确的、特定的任务和目标。将军可能被授权不惜一切代价突破敌人防线。而社会和个人，面临着无穷多的鱼和熊掌之间的tradeoff．这些选择大多彼此矛盾相互制约。你要建三峡大坝就要放弃航空母舰，要申奥修奥运村就没钱维护全国的小学教室。全社会根本就不存在一个可定义可比较的“共同利益”，只有无数利益之间的较量。任何具体计划都会侵犯社会一部分人的利益，引起他们的不满和反抗，也就是计划者不得不为实施计划而压制异己。就象将军为令行禁止可以枪毙下属一个样。</p>

<p>哈耶克据此雄辩地得出结论：计划经济必然导致专制。您绝得哈大师说错了吗？</p>

<p>您想，我们到了商店里都经常不知道买哪样的芸芸众生，我们能知道“全社会的最大利益”在哪儿吗？就算您知道在哪儿，您明白为了这个“公利”，谁要付出多大代价做为tradeoff？我们应该为那个不存在的“公利”付出自由的代价吗？</p>

<p>亚当•斯密理论之所以不可能成为专制理论，正因为亚当•斯密不承认有一个值得追求的“社会公利”。在斯密大师看来，每个人只要不偷不抢不骗，他的私利就是最崇高的社会公利。那些相互冲突的社会利益绝不能交给“计划者”仲裁，而是应该在竞争中让上帝来取舍。您想想，哪个独裁者愿意让您信这学问？</p>

<p>马克思那学问对专制者可就太方便了：</p>

<blockquote><ol>
<li>一个可望不可及的“美好”理想。</li>
<li>实现这个理想的暴力革命手段。</li>
<li>这个理想是通过剥夺一部分个人的财产来达到。</li>
<li>强制要求全体社会成员放弃一切私有生产资料。给谁呢？Oops！</li>
<li>由一个权力机构“计划”全社会的经济行为。</li>
<li>由这同一个权力机构向社会成员“分配”劳动产品。</li>
<li>为维护这一理想实行以暴力为后盾的“无产阶级专政”。</li>
</ol>
</blockquote>

<p>哥儿们您瞧瞧，谁要照此建立一个奴隶制还缺哪一样？</p>

<p>最要命的是第3，4条。要知道，<strong>承认私有产权的专制一定是不彻底的专制，绝对的专制必不容私有产权。注意，“有产”和“有产权”是两码子事。中华“文明”五千年，从来是有产而无产权。普天之下，莫非王土。</strong>别看今天中国有的是人富得流油，可没几个不打算卷款出逃。正是有产而无产权也！</p>

<p>樊弓15年前蹋上美国土地时，口袋里只有17美元，比偷渡客强不了多少。但在这块土地上，我虽无产但有绝对产权：我从此挣来的一切，都是神圣不可侵犯。只有这样，我才是自由人。只要是自由人，我就有了从无产到有产的机会。</p>

<p>多佛惨案中那几十个同胞冒死追求的就是这个。</p>

<p>马克思信誓旦旦地打包票说，他那个天堂里每个人的自由发展是一切人自由发展的前提。骗你把私有产权交出来。我敢打赌，没一个小马能具体说清楚，在一个连可供支配的私产都禁止的社会，你怎么自由发展？</p>

<p>产权是今天中国政治经济发展的瓶颈和症结。</p>

<p>哈耶克写到：</p>

<blockquote><p>“我们这一代已经忘记，私有财产体系是自由的最重要的保障。不单是对有产者，这重要性对无产者也丝毫不少。正是因为生产资料掌握在众多的独立人手中，才没有人能够彻底地控制我们，而我们作为个人才有可能决定自己的行为。一旦全部生产资料集中到一只手上，无论这只手是名义上的全“社会”，还是属于一个独裁者，谁掌握了这只手，谁就有了统治我们的全部权力。”</p>

<p>“没人比德•脱克维尔更清楚地看出，民主在本质上是个人主义的制度，它与社会主义存在着不可调和的冲突：‘民主扩展个人自由的空间’，他在1848年说，‘而社会主义限制它。民主把所有可能的价值赋予每个人；而社会主义把每个人当做一个工具，一个号码。民主和社会主义除了一个字眼以外毫无共同之处。这个字眼就是：平等。但是注意这个区别：民主在自由中求平等，而社会主义追求平等的手段是限制和奴役’”</p></blockquote>

<p>难怪现实中所有的“社会主义民主”都是夹生饭。</p>

<p>有趣的是，哈耶克引述的德•脱克维尔这段话，出自《<a href="http://zh.wikipedia.org/wiki/%E5%85%B1%E4%BA%A7%E5%85%9A%E5%AE%A3%E8%A8%80">共产党宣言</a>》面世的同一年，及新中国成立前整100年多一点。谁对谁错，我们今天不是很明白了吗？</p>

<p>现在我们回到那个问题：一个社会是有崇高理想好，还是没有好？</p>

<p>有句名言：没有英雄的民族是幸运的民族。我们照此句法：<strong>没有正统理想的社会是健康的社会。一个健康社会的目标，应该是保护其社会单元：个人，以正当手段去实现他自己的梦想。甭管他的梦有多邪多歪多傻多混，只要他没惹你就不关您老的事。人（即个人）是目的，不是实现伟大社会理想的手段。</strong></p>

<p>自由的重负未必适合所有人。就象动物园的老虎未必能在神农架生存。因此总是有人有理由反对个人自由。问题是，您愿意待在笼子里不等于我也愿意是不是？我们有太多的文人，自己喜欢被关起来也就算了，可本大虫要进山与您老何干？您犯得着去嚷嚷，去帮动物园老板把我关回去吗？</p>

<p>中国文人为什么这么难接受自由主义？为什么如此热衷于反对别人的自由主义？樊教授怎么也搞不懂。</p>

<p>且听下回分解。</p>

<p><strong>注：</strong><br/>
樊弓近日大忙，报税日也马上要到，同时又急需睡个好觉。因此本月底之前不能接着侃。不是戒网，实在是不得已。请爱听戏侃的网友继续建议，鼓励，批评。五月初学校放假，一定回来。</p>

<p><span id="chat9"></span></p>

<h3>节间闲话之九</h3>

<p>《戏侃》上节写完已有月余。期间《戏》迷不断鼓励催促。连因特网排名大师易往崇老兄也惦记着。实在不好意思。近日到了图书馆，顺便把《戏侃》的一些东东查证一番。这不查不要紧，一查吓一跳。立即发现本教授犯了一个十分尴尬十分可笑的职业错误。</p>

<p>樊某在第七节写道：通用汽车公司的装配工人平均工资是“九万六千”。根据是数学家历经多年培养训练出来的对数字的职业敏锐、超强记忆力和不可动摇的自信心。对“会不会记错”根本是想都不去想。</p>

<p>经查证，那个数字应该是“六万九千”，不是“九万六千”。出处是1996年3月28日的芝加哥论坛报社论。老樊把9和6的位置方向记反了。</p>

<p>樊某引用这个数字的原意是要说明，从事“简单劳动”的工人工资可以超过玩弄“复杂劳动”的数学家。所幸的是，樊氏错误并不影响这一结论。根据Notice of The American Mathematical Society，1172期数据计算，1993-94年全美数学正教授的平均工资是$62,046（各级教授总体平均$50,766）。比上年增长2%。按此增长率，1996年数学正教授的平均工资应是$64,553（各级平均$52,827）。远不及汽车工人的$69,000。</p>

<p>尽管错误不影响结论，在下还是必须向众网友道歉并更正。小马们要想出樊教授洋相，这可是个不应放过的机会。</p>

<p>同时，本教授从这个错误得出的教训是，凡人肩膀上扛的那七斤半是个很靠不注的玩艺儿。做老九的职业道德应该包括认识自身的局限，承认犯错误的可能性。尤其是牢记樊氏座右铭四：40岁以后必须放弃开创理论的野心，修边补角，教书育人，吹牛戏侃足矣。</p>

<p>作为老九的马克思，从阁楼里写到６５岁还死不退休。拍脑袋之余一不推敲细节，二不实验模拟。三不征求网友意见。那学问一搞就是全世界无产阶级同一天落草为寇，砸烂“旧”世界，建立一个没有孔方兄的人间天堂。绝对不开玩笑。</p>

<p>你说马克思怎么会不桶漏子。－－－</p>

<p><span id="section13"></span></p>

<h2>第十三节：继续革命</h2>

<p>马克思的目标，是建立一个人人都欢天喜地的共产主义社会。至于这个社会如何运作，老马没详细想。大致说了几个粗线条。包括</p>

<blockquote><ol>
<li>“各尽所能，各取所需”；</li>
<li>计划经济；</li>
<li>剿灭私有生产资料，实行全面共产；</li>
<li>商品交易绝迹；</li>
<li>不用钞票大洋；</li>
<li>各行各业三教九流随便你干。如此等等。</li>
</ol>
</blockquote>

<p>书生们反对马设计师，一般都是笑话这个桃花园是个乌托邦，根本就没戏。樊教授到侃到现在，还没有回答“能否实现”这个关键问题，只是在第二节卖了个关子。本节要侃的是，咱甭管“能否实现”，就算是咱芸芸众生在马圣人的指引下，冲破重重险阻，杀散千妖百怪，顺利到达西天。这日子以后怎么过。</p>

<p>樊弓在第二节已经证伪“各取所需”。道理很简单：资源的稀缺性。例子很现成：NBA总决赛还差个把星期。这两三万张门票怎么“取”？谁“取”前排雅座，谁“取”豪华包厢？</p>

<p>一位樊某很尊重的小马解释说，这种情况下或者是</p>

<blockquote><ol>
<li>以提供“必要劳动时间”（如扫厕所）为代价，或者是</li>
<li>露宿票房门口排长队，以先来后到为准。</li>
</ol>
</blockquote>

<p>这个回答实际上否定了共产主义原则。方案1其实还是在作商品交换，那“必要劳动时间”不就成了货币吗？搞那么麻烦干什么？方案2显然不是“各取所需”。排到后面就“取”不着了不是？</p>

<p>小马们对“各取所需”的辩护是老马那句笼里笼统的“物资极大丰富”。可惜马氏老少都不注意一个逻辑漏洞：“物资极大丰富”不等于“消灭一切稀缺”。</p>

<p>“各取所需”的前提是“稀缺”的消亡。马克思没敢说等稀缺消亡再搞共产主义。大概他知道消灭一切稀缺是不可能的。因此老马要么缺乏逻辑，要么缺乏老九的职业道德。</p>

<p>如果我们承认稀缺的永恒，那么能不能在物资极大丰富之时，实施近似的共产主义呢？</p>

<p>我们假定现在是共产主义，物资已经极大丰富，大家幸福无比。张三排队“取”到了几张ＮＢＡ球票。而李四是齐白石转世，画得一手好虾，乃海内绝活。老李没“取”到球票但嗜球如命。那么，李四企图以画换票是一件很自然的事。</p>

<p>马克思贫穷潦倒，恨透了商品交换和金钱。可是你在“天堂”里取消货币，只能给交易带来不便，增加经济学的所谓“交易成本”，并不能取消交易本身。只要有稀缺，就会有交易。没有货币中介，交易就退化为效率低下的以物易物。这时候，共产主义政府是睁只眼闭只眼呢，还是用无产阶级专政来“割资本主义尾巴”？</p>

<p>本《戏侃》一再指出，马克思给资本主义弊病开出的药方基本上都是饮鸠止渴。岂止是无效，且是效果与目的恰恰相反。商人“不劳而获”的利润刚好来自“交易成本”。你越是限制交易，交易的难度（成本）就越大，商人的潜在利润就越高。那李白石画虾无货币可换，又拉不下画家面子上街换球票，就会出个商人王五。</p>

<p>王五既没票也没别的本事，但交游广泛脑瓜好使。于是王五找李四借两张画，用一张画换两张球票，用其中一张球票跟李四结帐。自留一画一票。你看这第四节说的故事是不是不朽？</p>

<p>麻烦的是，这王五可能根本就不看球不赏画，他有了这两件稀缺物品，就有了进一步扩大交易规模的“资本”。资本主义尾巴要是不割就会变成资本主义屁股。可怕可怕！</p>

<p>“稀缺”可谓随处都可以造出来，跟物资丰富与否没关系。赵大嫂炒得好香的一盘陈皮牛，钱老弟的集邮册里有“全国山河一片红”，孙小姐长得性感脸蛋，李妹子裁出来的西装愣是酷，樊教授在你儿子的成绩单上可以填A也可以填B，类似具有潜在交换价值的“稀缺商品”无穷无尽。</p>

<p>只要人类不退化为猪狗，就会有稀缺，就会有交易，有交易就会有交易利润，有利润就可转化为资本，有资本就会有更大的交易，如此循环上升，便是“资本主义复辟”。</p>

<p>马家军如果遵从教主训示，通过暴力革命建立起共产主义，除了毛氏所创“无产阶级专政下继续革命”，别无选择。尔等不仅需要第一次“剥夺剥夺者”，还必须不断地铲除象王五这样的“新生资产阶级”以保卫革命成果。</p>

<p>铲除王五的“继续革命”又不可能通过民主投票的方式实现。原因是张三李四都从王五的服务中获得“稀缺”（效用），他们不大可能投票去干王五。即使他们头一回上当，同意宰了王五，发现少了他不方便。下次出个陈六可就铲不掉了。共产主义政府要是尊重王五的自由，尊重张三李四的选票，这资本主义屁股就会长到腰部。</p>

<p>很多小马埋怨斯大林毛泽东把这么圣洁的共产主义理想弄的血雨腥风。其实根子就在老马。老马那学问按照逻辑推理，结论就只能是背弃民主原则。没跑！“无产阶级专政下的继续革命”必须是专制，必须限制张王李的交易自由，能限制他仨的自由就能侵犯更多人民的权利。马克思没做过模拟，斯大林、毛泽东、金日成、波尔布特、霍查、齐奥赛思库、铁托诸人替他试过了。结论是一个例外也没有。</p>

<p>樊教授不管怎么侃，就是有小马不买账：共产主义是理想，理想是极限状态，有理想总比没理想好。这美国佬不也有“美国梦”吗？</p>

<p>问题是，“美国梦”是具体的，不需伤害他人的“谦虚”梦想，诸如一栋房子，两辆汽车，三个孩子，四万年薪，五万存款，六十退休，七十旅游，八十蹬腿。只要舍得出汗实在是不难，也不需要惹谁。<strong>相反共产主义理想一开始就是要通过暴力来实现，实现后又必须通过专制来维持。</strong>需要惹的人一大堆。我看还是算了吧。</p>

<h3>注</h3>

<p><span id="catalog"></span></p>

<h5>双重思想</h5>

<p><a href="http://zh.wikipedia.org/wiki/%E9%9B%99%E6%83%B3">双想或称双重思想</a>（英语︰Double think）是同时接受两种相违背的信念的行为。此词是源于乔治·奥威尔的反乌托邦小说《<a href="http://book.douban.com/subject/1082387/">1984</a>》中的概念。其主义概念如下：</p>

<blockquote><p>知与不知，知道全部真实情况而却扯些滴水不漏的谎话，同时持两种互相抵消的观点，明知它们互相矛盾而仍都相信，用逻辑来反逻辑，一边表示拥护道德一边又否定道德，一边相信民主是办不到的一边又相信党是民主的捍卫者，忘掉一切必须忘掉的东西而又在需要的时候想起它来，然后又马上忘掉它，而尤其是，把这样的做法应用到做法本身上面——这可谓绝妙透顶了：有意识地进入无意识，而后又并不意识到你刚才完成的催眠。即使要了解“双重思想”的含义你也得使用双重思想。</p></blockquote>

<p><a href="#catalog">返回目录</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从贝叶斯定理说开去]]></title>
    <link href="http://luozhaohui.github.io/blog/2014/10/21/bayes-rule/"/>
    <updated>2014-10-21T19:35:52+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2014/10/21/bayes-rule</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>贝叶斯定理是18世纪英国数学家<a href="http://en.wikipedia.org/wiki/Thomas_Bayes">托马斯·贝叶斯（Thomas Bayes）</a>提出得重要概率论理论。以下摘一段 wikipedia 上的简介：</p>

<blockquote><p>所谓的贝叶斯定理源于他生前为解决一个“逆概”问题写的一篇文章，而这篇文章是在他死后才由他的一位朋友发表出来的。在贝叶斯写这篇文章之前，人们已经能够计算“正向概率”，如“假设袋子里面有 N 个白球，M 个黑球，你伸手进去摸一把，摸出黑球的概率是多大”。而一个自然而然的问题是反过来：“如果我们事先并不知道袋子里面黑白球的比例，而是闭着眼睛摸出一个（或好几个）球，观察这些取出来的球的颜色之后，那么我们可以就此对袋子里面的黑白球的比例作出什么样的推测”。这个问题，就是所谓的逆向概率问题。</p></blockquote>

<p>贝叶斯定理的思想出现在18世纪，但真正大规模派上用途还得等到计算机的出现。因为这个定理需要大规模的数据计算推理才能凸显效果，它在很多计算机应用领域中都大有作为，如自然语言拼写检查，机器学习，推荐系统，图像识别，博弈论等等。</p>

<!--more-->


<h2>定义</h2>

<p><a href="http://zh.wikipedia.org/zh/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86">贝叶斯定理</a>是关于随机事件 A 和 B 的<a href="http://zh.wikipedia.org/wiki/%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87">条件概率</a>：</p>

<p><img src="http://upload.wikimedia.org/math/4/6/b/46b680c10ac90b0782843f4bbd0b4a95.png" alt="贝叶斯定理" /></p>

<p>其中P(A|B)是在 B 发生的情况下 A 发生的可能性。</p>

<p>在贝叶斯定理中，每个名词都有约定俗成的名称：</p>

<pre><code>P(A)是 A 的先验概率，之所以称为“先验”是因为它不考虑任何 B 方面的因素。
P(A|B)是已知 B 发生后 A 的条件概率，也由于得自 B 的取值而被称作 A 的后验概率。
P(B|A)是已知 A 发生后 B 的条件概率，也由于得自 A 的取值而被称作 B 的后验概率。
P(B)是 B 的先验概率，也作标淮化常量（normalizing constant）。
</code></pre>

<p>按这些术语，贝叶斯定理可表述为：</p>

<pre><code>后验概率 = (相似度 * 先验概率)/标淮化常量
</code></pre>

<p>也就是说，后验概率与先验概率和相似度的乘积成正比。</p>

<p>另外，比例P(B|A)/P(B)也有时被称作标淮相似度（standardised likelihood），Bayes定理可表述为：</p>

<pre><code>后验概率 = 标淮相似度 * 先验概率
</code></pre>

<p><strong>条件概率</strong>就是事件 A 在另外一个事件 B 已经发生条件下的发生概率。条件概率表示为P(A|B)，读作“在 B 发生的条件下 A 发生的概率”。</p>

<p><strong>联合概率</strong>表示两个事件共同发生（数学概念上的交集）的概率。A 与 B 的联合概率表示为<img src="http://upload.wikimedia.org/math/6/d/e/6de3a4670340b7be5303b63574cb3113.png" alt="联合概率" />。</p>

<h2>推导</h2>

<p>我们可以从条件概率的定义推导出贝叶斯定理。</p>

<p>根据条件概率的定义，在事件 B 发生的条件下事件 A 发生的概率为：</p>

<p><img src="http://upload.wikimedia.org/math/8/6/9/8694e4193ba45b55403595096b7d23c5.png" alt="贝叶斯定理" /></p>

<p>同样地，在事件 A 发生的条件下事件 B 发生的概率为：</p>

<p><img src="http://upload.wikimedia.org/math/8/b/6/8b6c81124815aad54c91c42b3261165d.png" alt="贝叶斯定理" /></p>

<p>结合这两个方程式，我们可以得到：</p>

<p><img src="http://upload.wikimedia.org/math/e/f/a/efaf8fda8a92eeb2d8cf70468c20ed5a.png" alt="贝叶斯定理" /></p>

<p>这个引理有时称作概率乘法规则。上式两边同除以 P(A)，若P(A)是非零的，我们可以得到贝叶斯定理:</p>

<p><img src="http://upload.wikimedia.org/math/f/1/3/f13abde4811844c29b556a35ca4f55a5.png" alt="贝叶斯定理" /></p>

<h2>解释</h2>

<p>通常，事件 A 在事件 B 发生的条件下的概率，与事件 B 在事件 A 发生的条件下的概率是不一样的；然而，这两者是有确定关系的，贝叶斯定理就是这种关系的陈述。</p>

<p>贝叶斯公式的用途在于通过己知三个概率来推测第四个概率。它的内容是：在 B 出现的前提下，A 出现的概率等于 A 出现的前提下 B 出现的概率乘以 A 出现的概率再除以 B 出现的概率。通过联系 A 与 B，计算从一个事件发生的情况下另一事件发生的概率，即从结果上溯到源头（也即逆向概率）。</p>

<p>通俗地讲就是当你不能确定某一个事件发生的概率时，你可以依靠与该事件本质属性相关的事件发生的概率去推测该事件发生的概率。用数学语言表达就是：支持某项属性的事件发生得愈多，则该事件发生的的可能性就愈大。这个推理过程有时候也叫贝叶斯推理。</p>

<h2>示例</h2>

<h3>示例一：应当根据新情况更新先验概率</h3>

<p>《<a href="http://book.douban.com/subject/1193621/">决策与判断</a>》第十二章中讲到人们都有保守主义情结，即使出现了新信息，也不愿意根据新信息来更新先验概率。用前面解释里面的话说就是：新信息是 B 事件不断发生，人们本应该根据这个信息去更新 A 事件发生的概率，但人们却更愿意固守之前估计的 A 事件发生的概率。</p>

<p>书中举了这样一个调查案例：</p>

<blockquote><p>假设有两个各装了100个球的箱子，甲箱子中有70个红球，30个绿球，乙箱子中有30个红球，70个绿球。假设随机选择其中一个箱子，从中拿出一个球记下球色再放回原箱子，如此重复12次，记录得到8次红球，4次绿球。问题来了，你认为被选择的箱子是甲箱子的概率有多大？</p></blockquote>

<p>调查结果显示，大部分人都低估了选择的是甲箱子的概率。根据贝叶斯定理，正确答案是96.7%。下面容我来详细分析解答。</p>

<p>刚开始选择甲乙两箱子的先验概率都是50%，因为是随机二选一（这是贝叶斯定理二选一的特殊形式）。即有：</p>

<blockquote><p>P(甲) = 0.5， P(乙) = 1 - P(甲)；</p></blockquote>

<p>这时在拿出一个球是红球的情况下，我们就应该根据这个信息来更新选择的是甲箱子的先验概率：</p>

<blockquote><p>P(甲|红球1) = P(红球|甲) × P(甲) / (P(红球|甲) × P(甲) + (P(红球|乙) × P(乙)))<br/>
P(红球|甲)：甲箱子中拿到红球的概率<br/>
P(红球|乙)：乙箱子中拿到红球的概率</p></blockquote>

<p>因此在出现一个红球的情况下，选择的是甲箱子的先验概率就可被修正为：</p>

<blockquote><p>P(甲|红球1) = 0.7 × 0.5 / (0.7 × 0.5 + 0.3 × 0.5) = 0.7</p></blockquote>

<p>即在出现一个红球之后，甲乙箱子被选中的先验概率就被修正为：</p>

<blockquote><p>P(甲) = 0.7， P(乙) = 1 - P(甲) = 0.3；</p></blockquote>

<p>如此重复，直到经历8次红球修正（概率增加），4此绿球修正（概率减少）之后，选择的是甲箱子的概率为：96.7%。</p>

<p>我写了一段 Python 代码来解这个问题：</p>

<figure class='code'><figcaption><span>计算选择的是甲箱子的概率</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">bayesFunc</span><span class="p">(</span><span class="n">pIsBox1</span><span class="p">,</span> <span class="n">pBox1</span><span class="p">,</span> <span class="n">pBox2</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">pIsBox1</span> <span class="o">*</span> <span class="n">pBox1</span><span class="p">)</span><span class="o">/</span><span class="p">((</span><span class="n">pIsBox1</span> <span class="o">*</span> <span class="n">pBox1</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">pIsBox1</span><span class="p">)</span> <span class="o">*</span> <span class="n">pBox2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">redGreenBallProblem</span><span class="p">():</span>
</span><span class='line'>    <span class="n">pIsBox1</span> <span class="o">=</span> <span class="mf">0.5</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># consider 8 red ball</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="p">):</span>
</span><span class='line'>        <span class="n">pIsBox1</span> <span class="o">=</span> <span class="n">bayesFunc</span><span class="p">(</span><span class="n">pIsBox1</span><span class="p">,</span> <span class="mf">0.7</span><span class="p">,</span> <span class="mf">0.3</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot; After red </span><span class="si">%d</span><span class="s"> &gt; in 甲 box: </span><span class="si">%f</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">pIsBox1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># consider 4 green ball</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">):</span>
</span><span class='line'>        <span class="n">pIsBox1</span> <span class="o">=</span> <span class="n">bayesFunc</span><span class="p">(</span><span class="n">pIsBox1</span><span class="p">,</span> <span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.7</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot; After green </span><span class="si">%d</span><span class="s"> &gt; in 甲 box: </span><span class="si">%f</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">pIsBox1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">redGreenBallProblem</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>
在这个调查问题里面，8次红球与4次绿球出现的顺序并不重要，因为红球的出现总是使选择的是甲箱子的概率增加，而绿球的出现总是减少。因此，为了简化编程，我将红球出现的情况以及绿球出现的情况摆在一起了。</p>

<p>程序运行结果如下：</p>

<figure class='code'><figcaption><span>不断修正的选择的是甲箱子的先验概率</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>After red 1 &gt; in 甲 box: 0.700000
</span><span class='line'>After red 2 &gt; in 甲 box: 0.844828
</span><span class='line'>After red 3 &gt; in 甲 box: 0.927027
</span><span class='line'>After red 4 &gt; in 甲 box: 0.967365
</span><span class='line'>After red 5 &gt; in 甲 box: 0.985748
</span><span class='line'>After red 6 &gt; in 甲 box: 0.993842
</span><span class='line'>After red 7 &gt; in 甲 box: 0.997351
</span><span class='line'>After red 8 &gt; in 甲 box: 0.998863
</span><span class='line'>After green 1 &gt; in 甲 box: 0.997351
</span><span class='line'>After green 2 &gt; in 甲 box: 0.993842
</span><span class='line'>After green 3 &gt; in 甲 box: 0.985748
</span><span class='line'>After green 4 &gt; in 甲 box: 0.967365
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>从程序运行结果来看，很明显可以看到红球的出现是增加选择甲箱子的概率，而绿球则相反。</p>

<h3>示例二：频率更适合用来解答概率问题</h3>

<p>《<a href="http://book.douban.com/subject/2143904/">进化心理学</a>》第十三章(428页)讲到人类的心理从进化角度来看，更偏好使用频率（我最近十次打猎八次有收获）而不是概率（我最近打猎有80%的成功率）。</p>

<p>书中举了同一个问题用不同方式表述使得问题的难易程度迥然不同：</p>

<blockquote><p>表述一：有一种疾病的发病率是千分之一，医院有一种化验技术可以对这种疾病进行诊断，但是却有百分之五的误诊率（也即是说尽管有百分之五的人没有病，但是化验结果却显示为阳性(即假阳性)）。现在假设一个人的化验结果显示为有病，仅根据这一化验结果推测，那么这个人确实患病的概率有多大？</p></blockquote>

<p>这个问题也可以用贝叶斯定理来解决，不过在看分析之前，你可以先估算下你自己的答案，然后再和正确答案比较。</p>

<p>这个问题的分析过程如下：</p>

<blockquote><p>已知先验概率：P(患病) = 0.001，P(正常) = 0.999；<br/>
该化验技术的确诊率（即患病化验结果显示为阳性的概率）为：P(确诊率) = 1.00；<br/>
该化验技术的误诊率（即正常化验结果显示为阳性的概率）为：P(误诊率) = 0.05。</p></blockquote>

<p>根据上面的数据，我们就能够推测出一个人化验为阳性的情况下，这个人确实患病的概率有多大：</p>

<blockquote><p>P(患病|阳性) = P(患病) × P(确诊率) / (P(患病) × P(确诊率) + P(正常) × P(误诊率)) <br/>
 = 0.001 × 1.00 / (0.001 × 1.00 + 0.999 × 0.05)<br/>
 = 0.0198 <br/>
 = 2%</p></blockquote>

<p>结果让你大吃一惊吧，在没有其他症状增加患病概率的情况下，单凭化验结果显示为阳性来推测的话，其真实患病的概率还不到百分之二。</p>

<p>用频率作为信息来记忆或回忆更生动也更容易被提取，想想第一次打猎什么情形，第二次打猎什么情形，历历在目。正因为频率作为信息存储载体保留了事件的形象性，提高了记忆的可得性，因此在进化过程中人类的心理机制优先选择了频率而不是抽象的概率。而且在人类十多万年的进化过程中，出现概率概念的文明进程不过几千年，大脑还没有对进化到更适应抽象的概率的地步。</p>

<p>所以这个问题如果换成用频率来表述的话，相信你的答案会大大接近于正确答案。</p>

<blockquote><p>表述二：在一千个人中，就有一个人患有X疾病（即发病率为千分之一），有一种化验技术，可以检验是否患有该疾病。如果一个人确实患有该病，化验结果可定显示为阳性。但有时候也会出现误诊，即在一千个完全健康的人中，有五十个人的化验结果显示为阳性（也即是说误诊率为百分之五）。</p></blockquote>

<p>换成以频率方式来表述这个问题，答案就显然易见了：</p>

<blockquote><p>P(患病|阳性) = 1/(1 + 50) = 1/51 = 0.0196 = 2%</p></blockquote>

<p>通过这个例子，我们可以懂得，若能把概率问题转换成频率来表述，即便是需要使用贝叶斯这样复杂定理来计算的问题，也能轻而易举地解答。这就是《<a href="http://book.douban.com/subject/1135754/">你的灯亮着么？</a>》里面提到的“重述问题”的技巧。</p>

<h3>示例三：在博弈论里面的应用</h3>

<p>挑战者 B 不知道原垄断者 A 是属于高阻挠成本（为阻止 B 进入而花费的成本）类型还是低阻挠成本类型，但B知道，如果 A 属于高阻挠成本类型，B 进入市场时A进行阻挠的概率是20%（阻扰成本高，因此阻挠概率低）；如果 A 属于低阻挠成本类型，B 进入市场时 A 进行阻挠的概率是100%。</p>

<p>博弈开始时，B 认为 A 属于高阻挠成本企业的概率为70%，因此，B 估计自己在进入市场时，受到 A 阻挠的概率为：</p>

<blockquote><p>P(阻挠) = 0.7 × 0.2 + 0.3 × 1.0 = 0.44</p></blockquote>

<p>0.44 是在 B 给定 A 所属类型的先验概率下，A 可能采取阻挠行为的概率。</p>

<p>当 B 进入市场时，若 A 确实进行阻挠。根据贝叶斯定理，从 A 进行阻挠这一行为，B 可修正 A 属于高阻挠成本企业的概率为：：</p>

<blockquote><p>P(高成本阻扰企业) = 0.7 × 0.2 ÷ 0.44 × 1.0 = 0.32</p></blockquote>

<p>根据这一新的先验概率，B 估计自己在进入市场时，受到 A 阻挠的概率为：</p>

<blockquote><p>P(阻挠) = 0.32 × 0.2 + 0.68 × 1 = 0.744</p></blockquote>

<p>若 B 再一次进入市场时，A 又进行了阻挠。根据贝叶斯定理，从 A 再次进行阻挠这一行为，B 可修正 A 属于高阻挠成本企业的概率为</p>

<blockquote><p>P(高成本阻扰企业) = 0.32 × 0.2 ÷ 0.744 × 1.0 = 0.086</p></blockquote>

<p>这样，根据 A 一次又一次的阻挠行为，B 不断修正判断 A 为高阻挠成本的概率（越来越低了），从而越来越倾向于将 A 判断为低阻挠成本企业。</p>

<h3>示例四：在计算机领域中的应用</h3>

<p>贝叶斯定理在计算机领域中的应用那可是太多了，无论是在机器学习，自然语言处理，图像识别，推荐算法，搜索算法还是垃圾邮件处理中都大有用途。这些应用中都有一个特点，那就是根据既有输入，在庞大的已有数据库中寻找匹配程度（也即是发生概率）最高的那些项。由于这些话题太大，在这里就不展开了。</p>

<p>徐宥翻译过 Peter Norvig 写的一篇<a href="http://norvig.com/spell-correct.html">怎样写一个拼写检查器</a>的文章，作者只用了 20 行 Python 代码就实现了拼写检查/纠错，相当强大。文章也写得深入浅出，推荐看看，<a href="http://blog.youxu.info/spell-correct.html">翻译版本在这里</a>。</p>

<h2>参考</h2>

<ul>
<li><a href="http://zh.wikipedia.org/zh/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86">WikiPedia 贝叶斯定理</a></li>
<li><a href="http://wiki.mbalib.com/wiki/%E8%B4%9D%E5%8F%B6%E6%96%AF%E6%B3%95%E5%88%99">Mbalib 贝叶斯法则</a></li>
<li>《<a href="http://book.douban.com/subject/1193621/">决策与判断</a>》</li>
<li>《<a href="http://book.douban.com/subject/2143904/">进化心理学</a>》</li>
<li>刘未鹏<a href="http://mindhacks.cn/2008/09/21/the-magical-bayesian-method/">数学之美番外篇：平凡而又神奇的贝叶斯方法</a></li>
<li>Peter Norvig，徐宥译<a href="http://norvig.com/spell-correct.html">怎样写一个拼写检查器</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Python编写博客导出工具]]></title>
    <link href="http://luozhaohui.github.io/blog/2014/10/12/export-blog-using-python-on-windows/"/>
    <updated>2014-10-12T08:35:02+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2014/10/12/export-blog-using-python-on-windows</id>
    <content type="html"><![CDATA[<h3>写在前面的话</h3>

<p>我在 github 上用 octopress 搭建了<a href="http://kesalin.github.io/">个人博客</a>，octopress 使用Markdown语法编写博文。之前我在CSDN博客上也写过不少的技术博文，都说自己的孩子再丑也是个宝，所以就起了把CSDN博客里面的文章导出到个人博客上的念头。刚开始想找个工具把CSDN博客导出为xml或文本，然后再把xml或文本转换为Markdown博文。可惜搜了一下现有博客导出工具，大部分要收费才能将全部博文导出为xml格式，所以就只好发明轮子了：写个工具将全部博文导出为Markdown博文（也是txt格式的）。</p>

<p>我将详细介绍这个工具的编写过程，希望没有学习过编程的人也能够学会一些简单的Python语法来修改这个脚本工具，以满足他们将其他类型的博客导出为文本格式。这也是我第一次学习和使用Python，所以相信我，你一定也可以将自己的博客导出为想要的文本格式。</p>

<p>本文源代码在这里：<a href="https://github.com/luozhaohui/python/blob/master/exportCSDNBlogAsMarkdown.py">ExportCSDNBlog.py</a></p>

<!--more-->


<p>考虑到大部分非程序员使用Windows系统，下面将介绍在Windows下如何编写这个工具。</p>

<h3>下载工具</h3>

<p>在 Windows 下安装Python开发环境（Linux/Mac下用pip安装相应包即可，程序员自己解决咯）：</p>

<p><strong>Python 2.7.3</strong><br/>
请安装这个版本，更高版本的Python与一些库不兼容。<br/>
<a href="https://www.python.org/download/releases/2.7.3/">下载页面</a><br/>
下载完毕双击可执行文件进行安装，默认安装在C:\Python2.7。</p>

<p><strong>six</strong><br/>
<a href="https://pypi.python.org/pypi/six">下载页面</a>
下载完毕，解压到Python安装目录下，如C:\Python2.7\six-1.8.0目录下。</p>

<p><strong>BeautifulSoup 4.3.2</strong><br/>
<a href="http://www.crummy.com/software/BeautifulSoup/bs4/download/">下载页面</a>，
下载完毕，解压到Python安装目录下，如C:\Python2.7\BeautifulSoup目录下。</p>

<p><strong>html5lib</strong><br/>
<a href="https://pypi.python.org/pypi/html5lib">下载页面</a>
下载完毕，解压到Python安装目录下，如C:\Python2.7\html5lib-0.999目录下。</p>

<h3>安装工具</h3>

<p>Windows下启动命令行，依次进入如下目录，执行setup.py install进行安装：</p>

<pre><code>C:\Python2.7\six-1.8.0&gt;setup.py install  
C:\Python2.7\html5lib-0.999&gt;setup.py install  
C:\Python2.7\BeautifulSoup&gt;setup.py install  
</code></pre>

<h3>参考文档</h3>

<p><a href="https://docs.python.org/2/">Python 2.X文档</a><br/>
<a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html">BeautifulSoup文档</a><br/>
<a href="http://www.regexlab.com/zh/regref.htm">正则表达式文档</a><br/>
<a href="http://tool.oschina.net/regex">正则表达式在线测试</a></p>

<h3>用到的Python语法</h3>

<p>这个工具只用到了一些基本的Python语法，如果你没有Python基础，稍微了解一下如下博文是很有好处的。</p>

<ul>
<li>string: 字符串操作，参考<a href="http://www.cnblogs.com/sevenyuan/archive/2010/12/10/1902145.html">python: string的操作函数</a></li>
<li>list: 列表操作，参考<a href="http://www.cnblogs.com/zhengyuxin/articles/1938300.html">Python list 操作</a></li>
<li>dictionary: 字典操作，参考<a href="http://www.cnblogs.com/yangyongzhi/archive/2012/09/17/2688326.html">Python中dict详解</a></li>
<li>datetime: 日期时间，参考<a href="http://www.cnblogs.com/lhj588/archive/2012/04/23/2466653.html">python datetime处理时间</a></li>
</ul>


<p><br/></p>

<h3>编写博客导出工具</h3>

<h4>分析</h4>

<p>首先来分析这样一个工具的需求：</p>

<pre><code>导出所有CSDN博客文章为Markdown文本。
</code></pre>

<p>这个总需求其实可以分两步来做：</p>

<pre><code>* 获得CSDN博客文章
* 将文章转换为Markdown文本
</code></pre>

<p>针对第一步：如何获取博客文章呢？</p>

<p>打开任何一个CSDN博客，我们都可以看到下方的页面导航显示“XXX条数据 共XXX页 1 2 3 &hellip; 尾页”，我们从这个地方入手考虑。每个页面上都会显示属于该页的文章标题及文章链接，如果我们依次访问这些页面链接，就能从每个页面链接中找出属于该页面的文章标题及文章链接。这样所有的文章标题以及文章链接就都获取到了，有了这些文章链接，我们就能获取对应文章的html内容，然后通过解析这些html页面来生成相应Markdown文本了。</p>

<h4>实现</h4>

<p>从上面的分析可以看出，首先我们需要根据首页获取所有的页面链接，然后遍历每一个页面链接来获取文章链接。</p>

<ul>
<li>获取页面链接的代码：</li>
</ul>


<figure class='code'><figcaption><span>获取所有的页面的 url</span><a href='https://github.com/luozhaohui/python/blob/master/exportCSDNBlogAsMarkdown.py'>View Source</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">getHtml</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
</span><span class='line'>    <span class="k">try</span> <span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">gUseCookie</span><span class="p">:</span>
</span><span class='line'>            <span class="n">opener</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">build_opener</span><span class="p">()</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">gHeaders</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span><span class='line'>                <span class="n">opener</span><span class="o">.</span><span class="n">addheaders</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">))</span>
</span><span class='line'>            <span class="n">response</span> <span class="o">=</span> <span class="n">opener</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>            <span class="n">data</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">request</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">gHeaders</span><span class="p">)</span>
</span><span class='line'>            <span class="n">response</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
</span><span class='line'>            <span class="n">data</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;utf-8&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">except</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">URLError</span><span class="p">,</span> <span class="n">e</span> <span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="s">&quot;code&quot;</span><span class="p">):</span>
</span><span class='line'>            <span class="k">print</span> <span class="s">&quot;The server couldn&#39;t fulfill the request: &quot;</span> <span class="o">+</span> <span class="n">url</span>
</span><span class='line'>            <span class="k">print</span> <span class="s">&quot;Error code: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span><span class="o">.</span><span class="n">code</span>
</span><span class='line'>        <span class="k">elif</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="s">&quot;reason&quot;</span><span class="p">):</span>
</span><span class='line'>            <span class="k">print</span> <span class="s">&quot;We failed to reach a server. Please check your url: &quot;</span> <span class="o">+</span> <span class="n">url</span> <span class="o">+</span> <span class="s">&quot;, and read the Reason.&quot;</span>
</span><span class='line'>            <span class="k">print</span> <span class="s">&quot;Reason: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span><span class="o">.</span><span class="n">reason</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">data</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">getPageUrlList</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
</span><span class='line'>    <span class="n">page</span> <span class="o">=</span> <span class="n">getHtml</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">lastArticleHref</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>    <span class="n">pageListDocs</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">&quot;papelist&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">pageList</span> <span class="ow">in</span> <span class="n">pageListDocs</span><span class="p">:</span>
</span><span class='line'>        <span class="n">hrefDocs</span> <span class="o">=</span> <span class="n">pageList</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;a&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">hrefDocs</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">lastArticleHrefDoc</span> <span class="o">=</span> <span class="n">hrefDocs</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">hrefDocs</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
</span><span class='line'>            <span class="n">lastArticleHref</span> <span class="o">=</span> <span class="n">lastArticleHrefDoc</span><span class="p">[</span><span class="s">&quot;href&quot;</span><span class="p">]</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">lastArticleHref</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot; &gt; last page href:&quot;</span> <span class="o">+</span> <span class="n">lastArticleHref</span>
</span><span class='line'>    <span class="n">lastPageIndex</span> <span class="o">=</span> <span class="n">lastArticleHref</span><span class="o">.</span><span class="n">rfind</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">lastPageNum</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">lastArticleHref</span><span class="p">[</span><span class="n">lastPageIndex</span><span class="o">+</span><span class="mi">1</span><span class="p">:])</span>
</span><span class='line'>    <span class="n">urlInfo</span> <span class="o">=</span> <span class="s">&quot;http://blog.csdn.net&quot;</span> <span class="o">+</span> <span class="n">lastArticleHref</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="n">lastPageIndex</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pageUrlList</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">lastPageNum</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
</span><span class='line'>        <span class="n">pageUrl</span> <span class="o">=</span> <span class="n">urlInfo</span> <span class="o">+</span> <span class="s">&quot;/&quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class='line'>        <span class="n">pageUrlList</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pageUrl</span><span class="p">)</span>
</span><span class='line'>        <span class="n">log</span><span class="p">(</span><span class="s">&quot; &gt; page &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">+</span> <span class="s">&quot;: &quot;</span> <span class="o">+</span> <span class="n">pageUrl</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">log</span><span class="p">(</span><span class="s">&quot;total pages: &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pageUrlList</span><span class="p">))</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pageUrlList</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>参数 url = &ldquo;<a href="http://blog.csdn.net/">http://blog.csdn.net/</a>&rdquo; + username，即你首页的网址。通过urllib2库打开这个url发起一个web请求，从response中获取返回的html页面内容保存到data中。你可以被注释的 print data 来查看到底返回了什么内容。</p>

<p>有了html页面内容，接下来就用BeautifulSoup来解析它。BeautifulSoup极大地减少了我们的工作量。我会详细在这里介绍它的使用，后面再次出现类似的解析就会从略了。soup.find_all(id=&ldquo;papelist&rdquo;) 将会查找html页面中所有id=&ldquo;papelist"的tag，然后返回包含这些tag的list。对应 CSDN 博文页面来说，只有一处地方：</p>

<figure class='code'><figcaption><span>papelist html内容示例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;papelist&quot;</span> <span class="na">class=</span><span class="s">&quot;pagelist&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;span&gt;</span> 236条数据  共12页<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>  <span class="nt">&lt;strong&gt;</span>1<span class="nt">&lt;/strong&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/list/2&quot;</span><span class="nt">&gt;</span>2<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/list/3&quot;</span><span class="nt">&gt;</span>3<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/list/4&quot;</span><span class="nt">&gt;</span>4<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/list/5&quot;</span><span class="nt">&gt;</span>5<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/list/6&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/list/2&quot;</span><span class="nt">&gt;</span>下一页<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/list/12&quot;</span><span class="nt">&gt;</span>尾页<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>好，我们获得了papelist 的tag对象，通过这个tag对象我们能够找出尾页tag a对象，从这个tag a解析出对应的href属性，获得尾页的编号12，然后自己拼出所有page页面的访问url来，并保存在pageUrlList中返回。page页面的访问url形式示例如下：</p>

<pre><code>&gt; page 1: http://blog.csdn.net/kesalin/article/list/1
</code></pre>

<ul>
<li>根据page来获取文章链接的代码：</li>
</ul>


<figure class='code'><figcaption><span>根据page来获取文章链接</span><a href='https://github.com/luozhaohui/python/blob/master/exportCSDNBlogAsMarkdown.py'>View Source</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">getArticleList</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
</span><span class='line'>    <span class="c"># 获取所有的文章的 url/title</span>
</span><span class='line'>    <span class="n">pageUrlList</span> <span class="o">=</span> <span class="n">getPageUrlList</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">articleListDocs</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">strPage</span> <span class="o">=</span> <span class="s">&quot; &gt; parsing page {0}&quot;</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">pageUrl</span> <span class="ow">in</span> <span class="n">pageUrlList</span><span class="p">:</span>
</span><span class='line'>        <span class="n">retryCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot; &gt; parsing page {0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">pageUrl</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">slow_down</span><span class="p">()</span> <span class="c">#访问太快会不响应</span>
</span><span class='line'>        <span class="n">page</span> <span class="o">=</span> <span class="n">getHtml</span><span class="p">(</span><span class="n">pageUrl</span><span class="p">);</span>
</span><span class='line'>        <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># 获取置顶文章</span>
</span><span class='line'>        <span class="n">topArticleDocs</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">&quot;article_toplist&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">topArticleDocs</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="n">articleListDocs</span> <span class="o">=</span> <span class="n">articleListDocs</span> <span class="o">+</span> <span class="n">topArticleDocs</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># 获取文章</span>
</span><span class='line'>        <span class="n">articleDocs</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">&quot;article_list&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">articleDocs</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="n">articleListDocs</span> <span class="o">=</span> <span class="n">articleListDocs</span> <span class="o">+</span> <span class="n">articleDocs</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">artices</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="n">topTile</span> <span class="o">=</span> <span class="s">&quot;[置顶]&quot;</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">articleListDoc</span> <span class="ow">in</span> <span class="n">articleListDocs</span><span class="p">:</span>
</span><span class='line'>        <span class="n">linkDocs</span> <span class="o">=</span> <span class="n">articleListDoc</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;span&quot;</span><span class="p">,</span> <span class="s">&quot;link_title&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">linkDoc</span> <span class="ow">in</span> <span class="n">linkDocs</span><span class="p">:</span>
</span><span class='line'>            <span class="c">#print linkDoc.prettify().encode(&#39;UTF-8&#39;)</span>
</span><span class='line'>            <span class="n">link</span> <span class="o">=</span> <span class="n">linkDoc</span><span class="o">.</span><span class="n">a</span>
</span><span class='line'>            <span class="n">url</span> <span class="o">=</span> <span class="n">link</span><span class="p">[</span><span class="s">&quot;href&quot;</span><span class="p">]</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="n">title</span> <span class="o">=</span> <span class="n">link</span><span class="o">.</span><span class="n">get_text</span><span class="p">()</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="n">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">topTile</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'>            <span class="n">oneHref</span> <span class="o">=</span> <span class="s">&quot;http://blog.csdn.net&quot;</span> <span class="o">+</span> <span class="n">url</span>
</span><span class='line'>            <span class="c">#log(&quot;   &gt; title:&quot; + title + &quot;, url:&quot; + oneHref)</span>
</span><span class='line'>            <span class="n">artices</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">oneHref</span><span class="p">,</span> <span class="n">title</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">log</span><span class="p">(</span><span class="s">&quot;total articles: &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">artices</span><span class="p">))</span> <span class="o">+</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">artices</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>从第一步获得所有的page链接保存在pageUrlList中，接下来就根据这些page 页面来获取对应page的article链接和标题。关键代码如下面：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>    <span class="c"># 获取置顶文章</span>
</span><span class='line'>    <span class="n">topArticleDocs</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">&quot;article_toplist&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">topArticleDocs</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="n">articleListDocs</span> <span class="o">=</span> <span class="n">articleListDocs</span> <span class="o">+</span> <span class="n">topArticleDocs</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># 获取文章</span>
</span><span class='line'>    <span class="n">articleDocs</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">&quot;article_list&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">articleDocs</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="n">articleListDocs</span> <span class="o">=</span> <span class="n">articleListDocs</span> <span class="o">+</span> <span class="n">articleDocs</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>从page的html内容中查找置顶的文章（article_toplist）以及普通的文章（article_list）的tag对象，然后将这些tag保存到articleListDocs中。</p>

<p>article_toplist示例：(article_list的格式是类似的)</p>

<figure class='code'><figcaption><span>article_toplist html内容示例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;article_toplist&quot;</span> <span class="na">class=</span><span class="s">&quot;list&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;list_item article_item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;article_title&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;ico ico_type_Original&quot;</span><span class="nt">&gt;&lt;/span&gt;</span>
</span><span class='line'>            <span class="nt">&lt;h1&gt;</span>
</span><span class='line'>                <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;link_title&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/kesalin/article/details/10474007&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;font</span> <span class="na">color=</span><span class="s">&quot;red&quot;</span><span class="nt">&gt;</span>[置顶]<span class="nt">&lt;/font&gt;</span>
</span><span class='line'>                招聘：有兴趣做一个与Android对等的操作系统么？
</span><span class='line'>                <span class="nt">&lt;/a&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/span&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        ... ...
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    ... ...
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>然后遍历所有的保存到articleListDocs里的tag对象，从中解析出link_title的span tag对象保存到linkDocs中；然后从中解析出链接的url和标题，这里去掉了置顶文章标题中的“置顶”两字；最后将url和标题保存到artices列表中返回。artices列表中的每一项内容示例：</p>

<pre><code>   title:招聘：有兴趣做一个与Android对等的操作系统么？  
   url:http://blog.csdn.net/kesalin/article/details/10474007
</code></pre>

<ul>
<li>根据文章链接获取文章html内容并解析转换为Markdown文本</li>
</ul>


<figure class='code'><figcaption><span>根据文章链接获取文章html内容并解析转换为Markdown文本</span><a href='https://github.com/luozhaohui/python/blob/master/exportCSDNBlogAsMarkdown.py'>View Source</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">download</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">output</span><span class="p">):</span>
</span><span class='line'>    <span class="c"># 下载文章，并保存为 markdown 格式</span>
</span><span class='line'>    <span class="n">log</span><span class="p">(</span><span class="s">&quot; &gt;&gt; download: &quot;</span> <span class="o">+</span> <span class="n">url</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">categories</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>    <span class="n">content</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>    <span class="n">postDate</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">slow_down</span><span class="p">();</span>
</span><span class='line'>    <span class="n">page</span> <span class="o">=</span> <span class="n">getHtml</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">manageDocs</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;div&quot;</span><span class="p">,</span> <span class="s">&quot;article_manage&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">managerDoc</span> <span class="ow">in</span> <span class="n">manageDocs</span><span class="p">:</span>
</span><span class='line'>        <span class="n">categoryDoc</span> <span class="o">=</span> <span class="n">managerDoc</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;span&quot;</span><span class="p">,</span> <span class="s">&quot;link_categories&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">categoryDoc</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">categories</span> <span class="o">=</span> <span class="n">categoryDoc</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">a</span><span class="o">.</span><span class="n">get_text</span><span class="p">()</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">postDateDoc</span> <span class="o">=</span> <span class="n">managerDoc</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">&quot;span&quot;</span><span class="p">,</span> <span class="s">&quot;link_postdate&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">postDateDoc</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="n">postDateStr</span> <span class="o">=</span> <span class="n">postDateDoc</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">string</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span><span class='line'>            <span class="n">postDate</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">postDateStr</span><span class="p">,</span> <span class="s">&#39;%Y-%m-</span><span class="si">%d</span><span class="s"> %H:%M&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">contentDocs</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">find_all</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">&quot;article_content&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">contentDoc</span> <span class="ow">in</span> <span class="n">contentDocs</span><span class="p">:</span>
</span><span class='line'>        <span class="n">htmlContent</span> <span class="o">=</span> <span class="n">contentDoc</span><span class="o">.</span><span class="n">prettify</span><span class="p">()</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">content</span> <span class="o">=</span> <span class="n">htmlContent2String</span><span class="p">(</span><span class="n">htmlContent</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">exportToMarkdown</span><span class="p">(</span><span class="n">output</span><span class="p">,</span> <span class="n">postDate</span><span class="p">,</span> <span class="n">categories</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">content</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>同前面的分析类似，在这里通过访问具体文章页面获得html内容，从中解析出文章标题，分类，发表时间，文章内容信息。然后把这些内容传递给函数exportToMarkdown，在其中生成相应的Markdown文本文件。值得一提的是，在解析文章内容信息时，由于html文档内容有一些特殊的标签或转义符号，需要作特殊处理，这些特殊处理在函数htmlContent2String中进行。目前只导出了所有的文本内容，图片，url链接以及表格都没有处理，后续我会尽量完善这些转换。</p>

<figure class='code'><figcaption><span>转换html文档内容</span><a href='https://github.com/luozhaohui/python/blob/master/exportCSDNBlogAsMarkdown.py'>View Source</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">htmlContent2String</span><span class="p">(</span><span class="n">contentStr</span><span class="p">):</span>
</span><span class='line'>    <span class="n">patternImg</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;(&lt;img.+?src=&quot;)(.+?)(&quot;.+ /&gt;)&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">patternHref</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;(&lt;a.+?href=&quot;)(.+?)(&quot;.+?&gt;)(.+?)(&lt;/a&gt;)&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">patternRemoveHtml</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">r&#39;&lt;/?[^&gt;]+&gt;&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">resultContent</span> <span class="o">=</span> <span class="n">patternImg</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">r&#39;![image_mark](\2)&#39;</span><span class="p">,</span> <span class="n">contentStr</span><span class="p">)</span>
</span><span class='line'>    <span class="n">resultContent</span> <span class="o">=</span> <span class="n">patternHref</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">r&#39;[\4](\2)&#39;</span><span class="p">,</span> <span class="n">resultContent</span><span class="p">)</span>
</span><span class='line'>    <span class="n">resultContent</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">patternRemoveHtml</span><span class="p">,</span> <span class="s">r&#39;&#39;</span><span class="p">,</span> <span class="n">resultContent</span><span class="p">)</span>
</span><span class='line'>    <span class="n">resultContent</span> <span class="o">=</span> <span class="n">decodeHtmlSpecialCharacter</span><span class="p">(</span><span class="n">resultContent</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">resultContent</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>目前仅仅是删除所有的html标签，并在函数decodeHtmlSpecialCharacter中转换转义字符。</p>

<ul>
<li>生成Markdown文本文件</li>
</ul>


<figure class='code'><figcaption><span>生成Markdown文本文件</span><a href='https://github.com/luozhaohui/python/blob/master/exportCSDNBlogAsMarkdown.py'>View Source</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">exportToMarkdown</span><span class="p">(</span><span class="n">exportDir</span><span class="p">,</span> <span class="n">postdate</span><span class="p">,</span> <span class="n">categories</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">content</span><span class="p">):</span>
</span><span class='line'>    <span class="n">titleDate</span> <span class="o">=</span> <span class="n">postdate</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&#39;%Y-%m-</span><span class="si">%d</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">contentDate</span> <span class="o">=</span> <span class="n">postdate</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&#39;%Y-%m-</span><span class="si">%d</span><span class="s"> %H:%M:%S %z&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">filename</span> <span class="o">=</span> <span class="n">titleDate</span> <span class="o">+</span> <span class="s">&#39;-&#39;</span> <span class="o">+</span> <span class="n">title</span>
</span><span class='line'>    <span class="n">filename</span> <span class="o">=</span> <span class="n">repalceInvalidCharInFilename</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
</span><span class='line'>    <span class="n">filepath</span> <span class="o">=</span> <span class="n">exportDir</span> <span class="o">+</span> <span class="s">&#39;/&#39;</span> <span class="o">+</span> <span class="n">filename</span> <span class="o">+</span> <span class="s">&#39;.markdown&#39;</span>
</span><span class='line'>    <span class="n">log</span><span class="p">(</span><span class="s">&quot; &gt;&gt; save as &quot;</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">newFile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="nb">unicode</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="s">&quot;utf8&quot;</span><span class="p">),</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;---&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;layout: post&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;title: </span><span class="se">\&quot;</span><span class="s">&#39;</span> <span class="o">+</span> <span class="n">title</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\&quot;\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;date: &#39;</span> <span class="o">+</span> <span class="n">contentDate</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;comments: true&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;categories: [&#39;</span> <span class="o">+</span> <span class="n">categories</span> <span class="o">+</span> <span class="s">&#39;]&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;tags: [&#39;</span> <span class="o">+</span> <span class="n">categories</span> <span class="o">+</span> <span class="s">&#39;]&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;description: </span><span class="se">\&quot;</span><span class="s">&#39;</span> <span class="o">+</span> <span class="n">title</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\&quot;\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;keywords: &#39;</span> <span class="o">+</span> <span class="n">categories</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;---&#39;</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">newFile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>生成Markdown文本文件就很简单了，在这里我需要生成github page用的Markdown博文形式，所以内容如此，你可以根据你的需要修改为其他形式的文本内容。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学会提问：批判性思维指南]]></title>
    <link href="http://luozhaohui.github.io/blog/2014/10/12/critical-thinking/"/>
    <updated>2014-10-12T08:35:02+08:00</updated>
    <id>http://luozhaohui.github.io/blog/2014/10/12/critical-thinking</id>
    <content type="html"><![CDATA[<h3>写在前面的话：</h3>

<ol>
<li><p>本笔记结合《学问提问：批判性思维指南》<a href="http://book.douban.com/subject/1504957/">第七版</a>，<a href="http://book.douban.com/subject/20428922/">第十版</a>，<a href="http://blog.vsharing.com/qsxiao">萧秋水</a>的<a href="http://book.douban.com/review/4474858/">PPT形式的笔记摘要</a>，以及《<a href="http://book.douban.com/subject/7057936/">批判性思维.带你走出思维的误区</a>》整理而成，在此对以上作者表示感谢。</p></li>
<li><p>关于《学问提问：批判性思维指南》的版本选择。<br/>
个人推荐<a href="http://book.douban.com/subject/20428922/">第十版</a>，翻译尚可，内容更完善。</p></li>
</ol>


<hr />

<h2>为什么要具备批判性思维？</h2>

<h3>获取真相</h3>

<p>在一个被泛滥信息包围的时代，我们需要从各种真真假假的信息中获取真相：</p>

<pre><code>* 电视上说
* 报纸上说
* 书籍上说
* 专家们说
* 网络上说
* 亲友们说
* ......
</code></pre>

<h3>培养会独立思考的公民</h3>

<p>中国要真正进入现代文明，必须培养合格的公民。</p>

<pre><code>* 群众：依赖权威和力量解决问题
    * 盲目听从时是顺民；
    * 盲目反对时是刁民；
    * 被煽动时是暴民。

* 合格公民：依据理性和程序解决问题
    * 知道在何时何地提出问题？
    * 知道提出什么样的问题？
    * 知道提出批判性问题是维权必需能力。
</code></pre>

<!--more-->


<p>只有公众都能批判性地思考问题，民主制度实行起来才会更加顺利。</p>

<pre><code>* 我们不能头脑空空由人摆布。
* 我们不能总像愤青一样活着。
* 我们不能依赖别人思想生存。
* 我们需要靠自己去问为什么。
</code></pre>

<h2>什么是批判性思维</h2>

<p>批判性思维就是审慎地运用逻辑推理去评估一个论述的质量。</p>

<p>主要涵盖如下方面：</p>

<pre><code>* 具有提出一套相互关联，环环相扣的关键问题的意识；
* 具有恰如其分地提出和回答关键问题的能力；
* 具有积极主动地提出关键问题的强烈愿望。
</code></pre>

<p>批判性思维的运用：对自己所耳闻目睹的一切系统地进行评判。</p>

<h3>两种思维方式</h3>

<pre><code>* 海绵式思维：
    * 对所接触到的信息深信不疑，而不进行评判与取舍，一古脑被动地接收；
    * 强调单纯地获取知识结果。

* 淘金式思维：
    * 带着问题与态度来评判所接触到的信息；
    * 问自己一系列既定的问题，以找出最佳判断或最合理的看法。
        * 为什么别人要我相信他的观点？
        * 别人的说法哪些地方可能有问题？
        * 我对别人的说法有没有进行客观评价？
        * 针对某一特定主题我有没有在别人合理说法的基础上形成自己的结论？
</code></pre>

<h3>两种批判性思维</h3>

<p>我们作的每一个判断都有自己的个人印记：经历、价值观和文化的习惯。通常我们对这些已有的观点怀有感情，如果我们不对外部怪异甚至危险的观点保持开放心态，就无法吸取或采纳外部观点从而改善我们的思想和价值观。</p>

<pre><code>* 弱势批判性思维
    * 用批判性思维来维护自己既有的观念。
    * 目的：抵制和驳倒那些与你意见不同的观点和论述。
    * 效果：摧毁了批判性思维潜在的人性的一面，阻碍了进步提升的可能。
    * 心理状态：思想封闭。

* 强势批判性思维
    * 用批评性思维来评估所有的观念，尤其是自己的看法。
    * 目的：正确评估与修正自己的观点与立场。
    * 效果：使自己不会变得自欺欺人和盲从他人，还可能更加坚定既有的观点。
    * 心理状态：思想开放。
</code></pre>

<h2>价值观</h2>

<p>价值观的重要性：</p>

<pre><code>* 价值观决定人与之间的互动；
* 党同伐异，价值观决定你的朋友圈。
</code></pre>

<p>批判性思维所需要的主要价值观：</p>

<pre><code>* 自主性（若没有自主性，你都能够接受别人替你思考，还谈什么批判性？）
* 好奇心（需要对自己遇到的一切不断提问，而且是关键问题）
* 谦恭有礼（没有人是百科全书，承认自己在某些方面有欠缺）
* 以理服人（对事不对人）
</code></pre>

<h2>批判性思维提问大纲</h2>

<p>批判性思维关键问题一览表：</p>

<pre><code>1. 论题和结论是什么？
2. 理由是什么？
3. 哪些词句有歧义？
4. 价值观假设和描述性假设是什么？
5. 推理有没有谬误？
6. 证据可信么？
7. 有没有替代性原因？
8. 数据有没有欺骗性？
9. 有没有遗漏关键信息？
10. 能得出哪些合理的结论？
</code></pre>

<h2>基本要素</h2>

<h3>断言/陈述</h3>

<p>断言是表达意见或信念的陈述，或真或假。<br/>
批判性思维的关键就是检查或评估断言及其各断言之间的关系。</p>

<p>示例：北京是中国最大的城市。</p>

<h3>论题</h3>

<p>论题是因探究问题而提出的断言。<br/>
批判性思维主要关注那些被论据支持或反驳的论题。</p>

<h3>前提</h3>

<p>前提是为另一个断言提供理由的断言。</p>

<h3>结论</h3>

<p>被前提支持的断言就是论证的结论。</p>

<h3>论证/推理</h3>

<p>论证是由断言按一定结构形成的两部分（前提和结论），前提为结论的真提供理由。<br/>
形式：因为A，所以B。B代表结论，A代表支持结论的前提。</p>

<p>论证用于支持或证明某个断言为真。论证步骤如下：</p>

<pre><code>1. 首先找出结论；
2. 其次找出为支持结论而陈述的种种理由，即找出前提；
3. 最后辨别前提与结论之间的逻辑关系。
</code></pre>

<h3>评估</h3>

<p>论证/推理的过程是逻辑的，就可能存在逻辑上的错误。无论是结论存在失误还是理由存在失误，都会影响对论证的评估。</p>

<p>评估方法：判断前提的真假及其推理过程是否合理。<br/>
评估标准：</p>

<pre><code>* 支持结论的前提必须是真；
* 前提与结论必须相关：即前提为真能够证明或支持结论为真。
</code></pre>

<h2>1. 论题和结论是什么？</h2>

<p>在对某个推理进行评价之前，我们首先要分析他的推理是什么，这第一步就是找出论题和结论。</p>

<h3>论题</h3>

<p>会话或讨论中出现的有争议的问题。</p>

<p>有两类论题：</p>

<pre><code>* 描述性论题
    * 针对有关有关过去、现在、未来的描述是否正确而提出的问题。
    * 是什么？答案往往要求精确。

* 规定性论题
    * 针对我们应当怎样做及对与错、好与坏而提出的问题。
    * 应该是什么？答案是说明性的，且见解会多元。
</code></pre>

<h3>结论</h3>

<p>结论就是信息传递者希望你接受的信息。<br/>
好的论证的基本结构是：因为A，所以B。B代表结论，A代表支持结论的理由。</p>

<p>在找出结论之前我们无法做出批判性评价！</p>

<pre><code>* 理性判断
    * 结论是一种需要其他观点支持的观点，没有理由支持的观点不是结论。
    * 结论值得批判。
    * 示例：房价当然会跌，不然中央会采取措施！（前半句是结论，后半句是理由。）

* 非理性判断
    * 没有理由支持的言论仅仅是观点，而不是结论。
    * 观点不值得批判。
    * 示例：房价当然会跌，不跌怎么行！（两句都是观点，没有提供理由。）
</code></pre>

<h2>2. 理由是什么？</h2>

<p>理由包括信念、论据、比喻、类推以及其他用来支持或证明这些结论的陈述，是对我们为什么要相信某一个特定结论的解释。</p>

<p>在确定理由之前我们无法对一个结论的质量进行评价。</p>

<pre><code>* 理性思考者：用充分恰当证据来支持自己的信念（对事不对人）。

* 非理性的人：用猜疑假设污蔑来证明别人的无理（对人不对事）。
    示例：
        * 楼主是脑残！
        * 楼主，你是中国人吗？
        * 此人在装B!
</code></pre>

<h2>3. 哪些词句有歧义？</h2>

<h3>找出歧义词语</h3>

<p>在决定赞同或反对某个观点之前，首先要确定关键词或关键句的准确含义，否则就由可能曲解或误解作者的观点。因此首先要找出有<strong>歧义</strong>的关键词句，明确它们在其上下文中的含义。</p>

<p>示例：</p>

<pre><code>* 断言：没有所谓的普世价值观。
* 歧义：“普世价值观”的定义是什么？

* 断言：大学教育质量普遍下降了。
* 歧义：“教育质量”是之哪些方面？
</code></pre>

<p>歧义的种类：</p>

<pre><code>* 语义歧义：表达断言的语句中罕有歧义的词语或短句；
* 组合歧义：不能明确一个词语是指群体还是群体中的个别成员；
    * 合成谬误：从群体的每个成员具有某特征推导出群体也具有该特征；
    * 分解谬误：从群体具有某特征推导出群体中的每个成员也具有该特征。 
* 语法歧义：一个句子的语法结构可以做两种以上的解释；
* 指代歧义：一个代词所指代的事物或对象不明；
* 抽象：抽象的表达无法界定词语所指代的具体范围。
</code></pre>

<p>去哪里找歧义词语？</p>

<pre><code>* 在论题中找关键词； 
* 在理由和结论中找重要的词语；
* 注意抽象词语；
* 扮演反串角色来判断其他人对关键词一的不同定义。
</code></pre>

<h3>时刻做好心理准备</h3>

<p>时刻留意歧义的影响，要养成三个习惯：</p>

<pre><code>* 避免假设和作者观点相同，养成“你这么说是什么意思？”的提问习惯；
* 避免认为词语只有单一的、明显的含义，养成“这些词句是否还有不同的含义？”的提问习惯；
* 注意修辞的影响，修辞手法通常会悄然无声地影响我们的情绪，从而影响我们的态度。
</code></pre>

<p>常见<strong>修辞手法</strong>：</p>

<p>委婉语和粗直语</p>

<pre><code>* 定义:
    * 委婉语：使用能引起正面联想的词语来淡化负面影响，如：用褒义词或中性词。
    * 粗直语：使用能引起负面联想的词语来强化负面影响，如：用贬义词或中心词。
* 效果：往往带有欺骗性或暗含欺骗性。
</code></pre>

<p>修辞性类比、定义或解释</p>

<pre><code>* 修辞性定义：运用诉诸情感的语言来激发积极或消极的态度。
    * 示例：将”堕胎“定义为”谋杀未出生的孩子“ 
* 修辞性解释：貌似解释的修辞技巧。
    * 示例：他因缺乏勇气而输了比赛。 VS 他因过于谨慎而输了比赛。   
</code></pre>

<p>刻板印象</p>

<pre><code>* 定义：没有正当理由过于简单地概括一类对象中的每个成员。
* 示例：自由分子 / 右翼分子 / 女人感性，男人理性。
</code></pre>

<p>暗示</p>

<pre><code>* 定义：运用中立的甚至积极的语言暗示人们联想事情的反面。
* 示例：在不少方面，她时称职的。
</code></pre>

<p>贬抑</p>

<pre><code>* 定义：降低事物的重要性。
* 示例：贬抑最常见的词语是“只不过是”，“所谓的”，“仅仅”。 
</code></pre>

<p>嘲笑/讽刺</p>

<p>夸张</p>

<h3>谁在利用歧义</h3>

<p>广告商：利用歧义让你误会。</p>

<pre><code>* 人头马一开，好事自然来
* 百事可乐：新一代的选择
</code></pre>

<p>政客：利用歧义诱发情感。</p>

<pre><code>* 坚持主流价值观
* 少数不明真相的群众
* 不要走邪路
* 少数西方敌对势力
* 有关部门
</code></pre>

<h2>4. 价值观假设与描述性假设是什么？</h2>

<p>要理解一个论证，就要知道信息传递者没有明确表述的信念，这些信念支持外显的推理。</p>

<p>在所有论证中，都存在一些信息传递者所认同的信念，而这类信念却并没有明确表述出来，需要批判性思维者自己去找出来。这些隐形的信念是信息传递者承认的<strong>假设</strong>，在推理结构中，他们是重要的环节，是将全部论证整合在一起的黏合剂。</p>

<p><strong>理由 + 假设 = 结论。</strong></p>

<p>这些假设的特点是：</p>

<pre><code>1. 隐藏的或没有清楚表述的（在多数情况下）；
2. 作者承认；
3. 影响对结论的判断；
4. 具有潜在的欺骗性。
</code></pre>

<p>去哪里找假设？</p>

<pre><code>* 寻找理由所需要的假设，有了这些假设理由才能支持结论（这叫连接假设）；
* 寻找能证明理由真实性的假设。
</code></pre>

<p>示例：</p>

<pre><code>* 断言：政府应该采取一切手段，包括行政手段强力打压高房价。高房价不仅损害穷人的利益，也损害房屋投资者的潜在利益。  
* 分析：
    * 理由：高房价不仅损害穷人的利益，也损害房屋投资者的潜在利益，
    * 价值观假设：当群体利益受到损害时，政府可以用看得见的手干涉市场；
    * 结论：政府应该采取一切手段，包括行政手段强力打压高房价。
</code></pre>

<h3>价值观假设</h3>

<p><strong>价值观</strong>是人们认为值得为之努力、却没有明确表述的观念。这些观念为行为设定了标准，并通过这些标准来衡量行为的质量。</p>

<p>在一个特定的情境中，<strong>价值观假设</strong>是一种内隐的偏向，它代表着某种价值观胜过另一种价值观，即具有某种<strong>价值观倾向或偏好</strong>。</p>

<p>典型的价值观冲突</p>

<pre><code>* 忠诚 VS 诚实：你是否把同学逃学事情告诉班主任？
* 新闻自由 VS 社会秩序：你是否认为公开报道群体性事件不明智？
* 竞争 VS 合作：你是否认为给少数民族高考加分有违公平？
* 理性 VS 感性：你认为婚姻建立在爱情还是面包上？
* 保守 VS 激进：你是否同意同性婚姻也应该得到祝福？
* 公平 VS 效率：为提高经济效率是否可以牺牲部分人利益？
</code></pre>

<p>示例：
个人是否应该给与乞丐以物质上的帮助？<br/>
以下价值观冲突可能影响一个人帮助乞丐的意愿：</p>

<pre><code>* 个人责任 VS 公共责任
* 竞争 VS 合作
* 效率 VS 社会稳定
</code></pre>

<p>关于价值观的一些常识：</p>

<pre><code>* 每个人的价值观都是多维的，你并非只有一种价值观
* 不同的人对同一个价值观认同的强烈程度是不同的
* 在不同情境中你的价值观可能有不同的偏向
* 不同思想的人对同样的话题往往设定了不同的价值观假设
</code></pre>

<p>去哪里找价值观假设？</p>

<pre><code>* 检查信息传递者的背景；
* 结论是确定价值观假设的线索：为什么那些作为理由呈现的结果看起来如此令人满意？
* 扮演反串角色：持相反立场的人关心什么？
* 寻找常见的价值观冲突，如个人 VS 集体。
</code></pre>

<p>一个批判性思考者在被说服之前，会要求辩论者能提供一些解释来说明：</p>

<pre><code>* 为什么我应该接受隐含在论据中的你的价值观假设。
* 也许这次讨论我不支持你的观点，但我支持你的价值观 … …
* 也许下次讨论我不支持你的价值观，但我支持你的观点 … …
</code></pre>

<h3>描述性假设</h3>

<p>描述性假设是关于这个世界<strong>是什么</strong>样子，或者将来是什么样子的为阐明的观念。它是理由与结论之间的联结，如果这一联结有缺陷，那么，理由就不一定能推导出那个结论。</p>

<p>识别描述性假设容许你判定理由是否导致了结论。</p>

<p>去哪里找描述性假设？</p>

<pre><code>* 思考理由与结论之间的差距：
    * 你是怎样从理由中得出结论的？
    * 如果理由是真，还可以从中得出什么结论来？
* 寻找支持理由的观点：理由的合理性依赖于人们对那些想当然的观点的认可程度。
这些想当然的观点是描述性假设。
    示例：
        * 结论：我们需要提高花在艾滋病教育上的经费。
        * 理由：如果我们这么做，将大大减少艾滋病患者的数量。
        * 描述性假设：
            1. 这些钱的花费方式是有效的，即受众为没有接受过艾滋病教育的高危人群；
            2. 这些人愿意并且能够接受这些教育信息。
* 把自己当作演讲者，试想自己为结论辩护；
* 扮演反串角色；
* 考虑支持结论最具优势的理由；
* 避免使用不完全确定的原因作为假设。
</code></pre>

<p>示例：</p>

<pre><code>* 断言：你会从李教授那里学到很多东西，他的学生都称赞他的报告。
* 理由：他的学生都称赞他的报告。
* 描述性假设：
    1. 学生称赞性评价是从一个报告中学到多少东西的良好指标；
    2. 学到很多东西意味着从报告中获取了一些材料。
* 结论：你会从李教授那里学到很多东西。
</code></pre>

<p>定义假设：确定某个包含多种含义的词在一个具体情境中使用的时什么含义。如上例中“学到很多东西”被定义为“从报告中获取了一些资料”，而不是“发展思维技能”。</p>

<h2>5. 推理中有没有谬误？</h2>

<p>现在的焦点放在<strong>评价上</strong>。即根据提供的理由，评判结论的可接受性。这个评判过程首先是要检查推理是否合理，即是否采用了有问题的假设或者运用“骗术”蒙混过关。推理谬误就是推理过程中的欺骗手段。</p>

<p>三个常见的谬误：</p>

<pre><code>1. 提供了错误或不正确假设的理由；
2. 通过是信息看起来与结论相关而实际上并不相干来转移我们的视线；
3. 使用待评价的结论为来为结论提供支持。
</code></pre>

<p>去哪里找推理谬误？</p>

<pre><code>* 考虑与结论相关的理由，把这些理由与信息传递者提供的理由比较；
* 判定理由是否阐明了一个确切的、具体的优势或者不足，若不是，则需要谨慎对待；
* 找出必要的假设：如果理由为真，要相信什么采纳在逻辑上支持结论呢？是否要相信理由是真实的呢？
* 这些假设有意义么？
* 留意修辞手法，剔除感情用语。
</code></pre>

<h3>人身攻击</h3>

<p>定义：不阐述原因而直接攻击或侮辱其人。</p>

<p>示例：</p>

<pre><code>* 当官就没有不贪的，你怎么能指望他们改变？
* 他就是一个骗子，你怎么能相信他说的话？
* 此人是拿钱的五毛，你怎么能支持他的观点呢？
</code></pre>

<h3>滑坡推理</h3>

<p>定义：假设如果某事发生，则会引发相关的一连串事情。</p>

<p>示例：</p>

<pre><code>* 如果我们同意开放负面新闻报道，那么报纸上一定都是负面消息，进而影响社会稳定。
* 如何政府允许游行示威，那么国家就会乱。
</code></pre>

<h3>妄求完美</h3>

<p>如果某方法不能彻底解决某问题，就不采用此方法。</p>

<p>示例：</p>

<pre><code>* 假如你的软件还存在 BUG，你就不应该推向市场。
* 我们不应该允许给妓女发放避孕套，因为这是鼓励卖淫。
</code></pre>

<h3>移花接木</h3>

<p>一个关键词在一个论据中被使用了两个或两个以上的含义。</p>

<p>示例：</p>

<pre><code>* 我们支持车船税，因为民意调查（被调查的对象未必是我们）一致赞成征收车船税。
</code></pre>

<h3>诉诸公众</h3>

<p>试图通过偏爱多数人一致赞成的观点使某个观点合理化，错误地认为多数人支持的就是合理的。</p>

<p>示例：</p>

<pre><code>* 群众支持对贪官要判处死刑，所以贪官要判处死刑。
* 小三该纳入刑罚，因为对已婚妇女的调查她们都支持立法处罚。
</code></pre>

<h3>诉诸权威</h3>

<p>通过引入在某个问题上可疑的权威来支持结论，通常是A领域权威对B领域观点。</p>

<p>示例：</p>

<pre><code>* 专家表示官员公开财产操作上不具备现实可行性。
* 专家表示白酒都含有塑化剂，适当饮用无害。
</code></pre>

<h3>诉诸情感</h3>

<p>利用调动感情的词汇，激发情感共鸣替代理性判断。</p>

<p>示例：</p>

<pre><code>* 拿了房地产商钱的专家总是鼓吹有利他们的政策。
* 砸光小日本的车，让小日本经济彻底垮掉！
</code></pre>

<h3>砍稻草人</h3>

<p>歪曲对方的观点，使之易于攻击，因而攻击的是一种事实上并不存在的观点。</p>

<p>示例：</p>

<pre><code>* 我反对做产前B超检查，这些医生实际上想杀死有缺陷的生命。
* 上帝并不能如科学一样解释世界，所以你不应该信仰上帝。
</code></pre>

<h3>虚假的两难困境</h3>

<p>制造虚假的两难困境，非此即彼，其实还有更多选择。</p>

<p>示例：</p>

<pre><code>* 要么考研，要么考公务员，否则我们找不到好工作。
* 在通货膨胀的今天，理财的两种最佳选择一是股票，二是房产。
</code></pre>

<h3>乱扣帽子/乱贴标签</h3>

<p>抛出恶意或负面的词汇引导你对事物的评判。</p>

<p>示例：</p>

<pre><code>* 你妈妈为什么最近脾气不好？她现在肯定是更年期了。
* 她为什么喜欢和政府过不去，到处上访？她有神经病。
</code></pre>

<h3>一厢情愿</h3>

<p>因为我希望这样，所以就是这样。</p>

<p>示例：</p>

<pre><code>* 我准备考公务员，这样我就能过上稳定的生活了。
* 不可能是今天考试，我还没有开始复习呢！
</code></pre>

<h3>光环效应</h3>

<p>使用模糊、情绪化美德词汇让我们不经仔细思考就接受观点。</p>

<p>示例：</p>

<pre><code>* 这是一位伟大的共产党员，为革命工作付出一辈子心血，他的卓越业绩、崇高品德、光辉人格，
深深铭记在我们心中，我们有什么理由不继承他的遗志呢？
* 这是一位有爱心的女士，她有决心，信心和勇气，支持儿童事业和环境保护，
为这位女士投一票就是为公正、爱、和平等投票。
</code></pre>

<h3>循环论证</h3>

<p>把结论换个说法当成理由，即在论证中变结论为理由。</p>

<p>示例：</p>

<pre><code>* 经济发展会推动股票上涨，因为在经济发展地区，股票都在上涨。
* 我爱牛人们精辟观点，因为网络牛人观点犀利，不正值得信赖吗？
</code></pre>

<h3>转移话题</h3>

<p>提出一个不相干话题转移是读者的注意力离开原来的论题。</p>

<p>示例：</p>

<pre><code>* 我不明白为什么大家要讨论日本的政治体制比我们的好，看看最近20年发展就知道了，
我们前进，他们衰退。
* 母亲：我不是告诉你要按时回家吃饭吗？儿子：你看你总是在责怪我！
</code></pre>

<h3>错置举证</h3>

<p>本应该由信息提供者来举证提供理由，却通过诡辩让接收者来举证提供理由。</p>

<p>示例：</p>

<pre><code>推销员：这个牌子的化妆品很管用，你试试看。
顾客：我才不信。
推销员：你不试，怎么知道不管用呢？
</code></pre>

<h2>6. 证据可信么？</h2>

<p>如何判断可信度？</p>

<pre><code>* 证据是什么？在哪里？
* 你如何知道它是真实的？你能证明它么？
</code></pre>

<h3>可信度</h3>

<p>支持一个信念的证据越多，该信念越接近真实。 <br/>
对很多观点来说，没有足够的证据完全支持或驳倒它们，我们必须判断证据的优劣。<br/>
断言都需要证据，结论的可信度取决于证据的可信度。</p>

<h3>常用证据可靠性</h3>

<h3>直觉</h3>

<p>当人说“常识告诉我们”或“我只知道这是真的”，他就在用直觉作为证据。</p>

<pre><code>* 问题：过度自信。
* 对策：必须谨慎使用直觉作为声明的依据，批判性思考者应当弄清楚由直觉得出的声明
是否有其他类型证据的支持。
* 示例：常识告诉我们，一个作者应该记得自己写过作品的内容。
</code></pre>

<h3>个人经历</h3>

<p>根据少数人经历就得出关于整体的结论。虽然结论有可能是对的，但推理过程绝对是无厘头的。</p>

<pre><code>* 问题：鲜活形象的个案。
* 对策：牢记个人经验让人记忆深刻，以致我们常常把它当做证据来支持自己的观点，
但凡事总有例外。
* 示例：如果你没有读过原著，你不可能在写作中引用他们的经典语句。
</code></pre>

<h3>典型案例</h3>

<p>通过对一个或几个特殊个体或事件进行详细描述来支持结论，以观察或访谈为基础。</p>

<pre><code>* 问题：以偏概全。
* 对策：警惕利用动人案例作为证据的情况，要时刻提醒自己：
“这个案例是否典型？”“能不能找出有力的反面典型？”
* 示例：最近微博举报多起贪官落网，充分说明微博是建立群众监督的利器。
</code></pre>

<h3>当事人证词</h3>

<p>商业信息、影视广告、书籍封底经常使用他人经验证词企图说服我们。</p>

<pre><code>* 问题：伪证以及情绪感染。
* 对策：必须认识到这类证词根本没有多大帮助，除非我们了解证人的专业技术水平，
个人兴趣，价值观或偏见。
* 示例：我郑重向你推荐这种减肥药，因为我朋友使用一周后瘦了6斤。
</code></pre>

<h3>专家意见</h3>

<p>权威专家对特定的问题，比多数人了解更多的信息源。</p>

<pre><code>* 问题：盲从或过度膨胀。
* 对策：更谨慎对待权威观点，问问自己我为什么要相信这个权威？
* 示例：任志强：房价肯定还会涨！
</code></pre>

<h3>个人观察</h3>

<p>一种有价值的证据，是许多科学研究的基础。</p>

<pre><code>* 问题：自我服务偏见或观察误差，眼见未必实。
* 对策：必须警惕不要仅仅依赖一个观察者的观察。
* 示例：在一起抢劫案中，一名目击证人说犯人手里拿着一把很大的手枪，
其实犯人只是拿着一根木棍。
</code></pre>

<h3>科学研究</h3>

<p>在可控环境下进行的观察资料为依据，并经过同行评审，能重复验证结果，结论描述用语精确。</p>

<pre><code>* 问题：容易结论自相矛盾。
* 对策：要认识到研究者的预期、态度、价值观和资助单位期望等，会使他们的提问、
研究方法以及解释研究结果的方式存在偏差，样本范围的广泛性以及随机性，
研究结果不能证明结论，只能作为研究结果支持结论。
* 示例：大量的科学实验表明转基因食品对人体无害。
</code></pre>

<h3>类比</h3>

<p>用熟悉的事物来解释不熟悉的，假如某一方面相似，则其他方面也有可能相似。</p>

<pre><code>* 问题：不当类比
* 对策：
    1. 从多个方面比较两种事物之间的相似之处与不同之处；
    2. 相似性与差异性之间的关联；
    3. 当存在与论题相关的相似之处，但没有与论题相关的差异时，这样的类比才是强有力的；
    4. 制造可替代性类比来理解信息传递者试图说明的相同现象。
</code></pre>

<p>示例：</p>

<pre><code>* 假如你的手烂了，你会切除它，所以我们也不得不消灭搞聚众淫乱这样道德败坏的人。
</code></pre>

<h2>7. 有没有替代性原因？</h2>

<p><strong>替代性原因</strong>是一个看似合理、与信息提供者的解释不同，但能说明一个已知的结果如何发生的解释。</p>

<p>替代性原因越多，某个具体替代性原因的可信度就越轻，它可能只是造成结论的一个“促成因素”，而不是决定性因素。</p>

<p>不同的替代性原因单独看往往都看似合理，也都能就一个结论发生的原因提供能自圆其说的解释，但有些解释看起来更合理。在寻找对某件事进行因果解释的证据时，需要留意替代性原因。</p>

<p>去哪里寻找替代性原因？</p>

<pre><code>* 我能想出其它方法来解释这个论据么？
* 还有什么其它可能的原因会导致这个结论？
* 换一个角度来看，能找到什么重要的原因呢？
* 如果现有的解释是错误的，那何种解释才是争取的呢？
</code></pre>

<p>两件事有很强的相关性并不能等于可以证明他们有因果关系。</p>

<h3>简单归因</h3>

<p>问题：根据一些不够充分的因素来解释某事件，过分强调某一个或某几个因素对事件的作用。</p>

<p>对策：</p>

<pre><code>* 有无替代性原因？
* 是唯一的原因还是其中的一个原因？
* 有相关性不等于有因果性！
</code></pre>

<p>示例：</p>

<pre><code>* 断言：因为银行进入加息通道，所以房价一定会跌。
* 分析：房价下跌因素很多，除了金融因素，还有同期市场需求，国家政策，
投资风险偏好多种因素影响，一个因素变动并不能导致结论成立。
</code></pre>

<h3>混淆原因和结果</h3>

<p>问题：将原因和结果混淆在一起或没有认识到两件事可能是互相影响的。</p>

<p>示例：</p>

<pre><code>* 断言：统计100名女性工作者研究表明：容易生气的女人免疫系统就容易受到伤害。
* 分析：答案也许是免疫系统容易受到伤害的女人，容易导致肝火旺盛而易怒。
</code></pre>

<h3>对共同原因的疏忽</h3>

<p>问题：没认识到两件事可能因为另一个共同因素的影响而相互联系。</p>

<p>示例：</p>

<pre><code>* 断言：统计100名女性工作者研究表明容易生气的女人免疫系统就容易受到伤害。
* 分析：也许容易产生敌意和免疫系统不好都是因为这群调查对象拥有不良的生活习惯，
也许是其它原因（比如高强度加班）导致某些女人容易生气同时免疫系统受到伤害。 
</code></pre>

<h3>事后归因谬误</h3>

<p>问题：仅仅因为B在时间上发生在A之后，就认为B是由A引起的。</p>

<p>示例：</p>

<pre><code>* 断言：每次播放郑少秋拍摄的电影，比如《大时代》，香港股市就下跌。所以存在“丁蟹效应”。
* 分析：丁蟹效应是典型的事后归因，在人分析自己的错误过程中常常会犯这种错误。
</code></pre>

<h2>8. 数据有没有欺骗性？</h2>

<p><strong>统计数据</strong>是一种以数字形式表现出来的证据。这样的证据可以给人留下深刻的印象，因为数字使证据看起来非常科学、精确，让人感觉到代表着“事实”。然而统计数据可以并且经常欺骗大家。</p>

<h3>出处不可靠，有偏见的数据</h3>

<p>示例：</p>

<pre><code>* 中国估计有6750万套空置房。
* 保守估计，中国有3000万性工作者。
* 今年物价肯定涨了3倍以上！
</code></pre>

<h3>令人困惑的平均数</h3>

<ul>
<li>算术平均数：将所有数据相加，再用所得的和除以数据的个数得到的结果是算术平均数。</li>
<li><a href="http://zh.wikipedia.org/wiki/%E4%B8%AD%E4%BD%8D%E6%95%B8">中数</a>：将所有数据按从大小顺序排列，位于中间的那个数就是中数。</li>
<li><a href="http://zh.wikipedia.org/wiki/%E4%BC%97%E6%95%B0_(%E6%95%B0%E5%AD%A6)">众数</a>：将所有数值按照一定规则分组，在一组数据中出现次数最多的那个数就是众数。</li>
</ul>


<p>不仅分辨出是哪一种平均数很重要，考虑数据的范围（最大值与最小值之间的跨距）、数据出现的频率（即数据的分布）也同样重要。</p>

<p>示例：</p>

<pre><code>* 我国内公司人均工资收入增长较快。（也许只是领导收入增加较快）
* 随我国GDP不断增快，中国人民平均收入近年来保持较高增长水平。
（如果用中数或众数平均数统计，也许是下降）
</code></pre>

<h3>用不相关的数据证明结论</h3>

<p>用正确的数据证明错误的结论。</p>

<p>对策：</p>

<pre><code>* 不去看信息提供者提供的统计数据，问自己：“哪种统计数据有助于证明作者的结论？”，
然后将自己得出的数据与信息提供者的数据相比较；
* 不去看信息提供者的结论，问自己：“这些统计数据能得出什么结论？”，
然后将自己得出的结论与信息提供者的结论作比较。
</code></pre>

<p>示例：</p>

<pre><code>* 每1000名消费者中，只有5个人投诉对服务不满意，因此证明这项服务质量很好。
* 通货膨胀主要原因是因为国际油价这类资源类产品涨价带来输入性通货膨胀。
</code></pre>

<h3>借助遗漏信息撒谎</h3>

<p>选择性遗漏一些信息来达到欺骗的目的。比如忽略比较的对象，或使用忽略了信息的百分比与绝对数值，或使用相对数据来夸大可能的风险或收益。</p>

<p>示例：</p>

<pre><code>* 新的汰渍洗衣粉洗衣效率提高了30%。（是和谁对比？也许其它产品更高）
* 现在小区治安越来越糟糕，恶性犯罪率增加了400%。（也许绝对数量只是从1起增加到4起，
而入住人口增加了10倍）
</code></pre>

<h2>9. 有没有遗漏关键信息？</h2>

<p>论证中的信息是信息提供者精心选择并组织在一起的，选择和组织这些信息的人希望在某种程度上影响你的思维，往往会选择对结论有利的信息而忽略不利的信息。批判性思维者需要问问自己：哪些关键信息被遗漏了？</p>

<p>遗漏信息必然存在：</p>

<pre><code>* 时间和空间上的局限性，使得论据不完整；
* 有限的注意范围，只列出最吸引人的论据；
* 人们具备的知识有限；
* 为了达到欺骗的目的；
* 每个人的视角不同。
</code></pre>

<p>示例：</p>

<pre><code>* 治疗方案X将使心脏病发作的可能性减少20%。
（也许本来发作风险就不足5%，减少20%也只减少到4%）
* 我明年的销售目标是销售额是比今年增加500%。（今年我的销售额是零）
</code></pre>

<p>如何查找被遗漏的关键信息？</p>

<pre><code>* 有哪些相反的事例、证明或信息？
* 缺失定义：尝试用不同的方式来定义关键词；
* 缺失价值取向或偏好；
* 缺失论证里提到事实的来源；
* 缺失得出事实的详细程序：问卷的措辞与被调查者的样本质量；
* 缺失或不完整的数字，图表，表格或数据
* 缺失文章中引证或证明；
* 信息提供者是否会从中获得好处。
</code></pre>

<p>我们要格外注意被遗漏了的消极观点。</p>

<h2>10. 能得出哪些合理的结论？</h2>

<p>由于每个人的背景和目标不同，因而会持有不同的假设，导致我们面对同样的理由却得出不同的结论。</p>

<p>注意如下事实：</p>

<pre><code>* 一个特定结论往往只在特定条件下才成立；
    * 何时正确？
    * 何地争取？
    * 为了什么目的或凭什么说它是正确的？
* 别做非黑即白二元式推理，寻找多种结论的可能性；
* 认识到备选结论的存在对解放思想非常重要；
* 不是所有的结论都一样合理，选择最有可能接近真相的那个结论；
* 好的结论并非完美，如果发现新的证据，要有勇气改变你的看法。
</code></pre>
]]></content>
  </entry>
  
</feed>
